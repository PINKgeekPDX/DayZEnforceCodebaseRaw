<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="group___math3_d_a_p_i" kind="group">
    <compoundname>Math3DAPI</compoundname>
    <title>Math3D library</title>
    <innerclass refid="class_math3_d" prot="public">Math3D</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___math3_d_a_p_i_1ga11776b655fef7f8a9dbbda285072b194" prot="public" static="no" strong="no">
        <type></type>
        <name>ECurveType</name>
        <enumvalue id="group___math3_d_a_p_i_1gga11776b655fef7f8a9dbbda285072b194a290554b50ce83d4ca68612f22ee45e86" prot="public">
          <name>CatmullRom</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___math3_d_a_p_i_1gga11776b655fef7f8a9dbbda285072b194a180f0fc46986ef8bee9d699cb34970c7" prot="public">
          <name>NaturalCubic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___math3_d_a_p_i_1gga11776b655fef7f8a9dbbda285072b194ac7c79a3f1bacb6cd6ed79bfc27207d6b" prot="public">
          <name>UniformCubic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="20" column="1" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" bodystart="21" bodyend="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga5bd1deb1c96276d94eeec6fe40955c41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto native <ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>proto native vector Vector</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>Vector</name>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Vector constructor from components. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> x component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> y component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> z component </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>vector</computeroutput> resulting vector <programlisting><codeline><highlight class="normal">Print(<sp/>Vector(1,<sp/>2,<sp/>3)<sp/>);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>&lt;1,2,3&gt;</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="18" column="21" declfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" declline="18" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga3310ad7466ec08f7f3cf71932137938c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>private void</type>
        <definition>private void Math3D::Math3D</definition>
        <argsstring>()</argsstring>
        <name>Math3D</name>
        <qualifiedname>Math3D::Math3D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="29" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga95eccb1586a5c33196fa134ddebbe7a4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>private void</type>
        <definition>private void Math3D::~Math3D</definition>
        <argsstring>()</argsstring>
        <name>~Math3D</name>
        <qualifiedname>Math3D::~Math3D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="30" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga802483175ffd12b2d309eddc4dff6860" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>static proto vector Math3D::ClipLine</definition>
        <argsstring>(vector start, vector end, vector norm, float d)</argsstring>
        <name>ClipLine</name>
        <qualifiedname>Math3D::ClipLine</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>norm</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="33" column="21"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gac204462da0a47d4be75d883059ca8173" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static proto float Math3D::IntersectRaySphere</definition>
        <argsstring>(vector raybase, vector raycos, vector center, float radius)</argsstring>
        <name>IntersectRaySphere</name>
        <qualifiedname>Math3D::IntersectRaySphere</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>raybase</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>raycos</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>center</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Tests whether ray is intersecting sphere. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>raybase</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Start of ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raycos</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> End of ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Center of sphere </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Radius of sphere </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>float</computeroutput> -1 when not intersecting, else the fraction of ray </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="43" column="20"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gaee1e6d7fa91026ddbee9530f13fdf439" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static proto float Math3D::IntersectRayBox</definition>
        <argsstring>(vector start, vector end, vector mins, vector maxs)</argsstring>
        <name>IntersectRayBox</name>
        <qualifiedname>Math3D::IntersectRayBox</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mins</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>maxs</declname>
        </param>
        <briefdescription>
<para>Tests whether ray is intersecting axis aligned box. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Start of ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> End of ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mins</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Minimums of bound box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxs</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Maximums of bound box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>float</computeroutput> -1 when not intersecting, else the fraction of ray </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="53" column="20"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gabfca1ca8159d6491d7c6c435a0790047" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static proto bool Math3D::IntersectSphereBox</definition>
        <argsstring>(vector origin, float radius, vector mins, vector maxs)</argsstring>
        <name>IntersectSphereBox</name>
        <qualifiedname>Math3D::IntersectSphereBox</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>radius</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mins</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>maxs</declname>
        </param>
        <briefdescription>
<para>Tests whether sphere is intersecting axis aligned box. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Origin of sphere </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Radius of sphere </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mins</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Minimums of bound box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxs</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Maximums of bound box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>bool</computeroutput> True when intersects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="63" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga9ccc5c527f51dbd5d5b5a3276f53d521" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static proto bool Math3D::IntersectSphereCone</definition>
        <argsstring>(vector origin, float radius, vector conepos, vector axis, float angle)</argsstring>
        <name>IntersectSphereCone</name>
        <qualifiedname>Math3D::IntersectSphereCone</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>radius</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>conepos</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>axis</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Tests whether sphere is intersecting cone. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Origin of sphere </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Radius of sphere </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conepos</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Position of top of cone </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Orientation of cone in direction from top to bottom </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Angle of cone in radians </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>bool</computeroutput> True when sphere is intersecting cone </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="74" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gaff21d8ad00bad6d2d2d621b17803e4dd" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static proto bool Math3D::IntersectWholeSphereCone</definition>
        <argsstring>(vector origin, float radius, vector conepos, vector axis, float angle)</argsstring>
        <name>IntersectWholeSphereCone</name>
        <qualifiedname>Math3D::IntersectWholeSphereCone</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>radius</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>conepos</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>axis</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Tests whether sphere is fully inside cone. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Origin of sphere </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Radius of sphere </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conepos</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Position of top of cone </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Orientation of cone in direction from top to bottom </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Angle of cone in radians </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>bool</computeroutput> True when sphere is fully inside cone </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="85" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gab848cd21c472dbddc8414c6bab23f7fc" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static proto bool Math3D::IntersectCylinderOBB</definition>
        <argsstring>(vector mins, vector maxs, vector obbMat[4], vector cylMat[4], float cylinderRadius, float cylinderHeight)</argsstring>
        <name>IntersectCylinderOBB</name>
        <qualifiedname>Math3D::IntersectCylinderOBB</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mins</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>maxs</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>obbMat</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>cylMat</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>cylinderRadius</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>cylinderHeight</declname>
        </param>
        <briefdescription>
<para>Tests whether cylinder is intersecting oriented box. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mins</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Minimums of bound box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxs</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Maximums of bound box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obbMat</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Transform of box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cylMat</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Transform of cylinder </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cylinderRadius</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Radius of cylinder </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cylinderHeight</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Height of cylinder </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>bool</computeroutput> True when cylinder is intersecting oriented box </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="97" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gaa6f2ad8533d1ce8807cd6feb7813d3f9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static proto bool Math3D::IntersectRayCylinder</definition>
        <argsstring>(vector rayStart, vector rayEnd, vector center, float radius, float height)</argsstring>
        <name>IntersectRayCylinder</name>
        <qualifiedname>Math3D::IntersectRayCylinder</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>rayStart</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>rayEnd</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>center</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>radius</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Tests whether ray is intersecting cylinder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rayStart</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Start of ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rayEnd</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> End of ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Center of cylinder </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Radius of cylinder </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Height of cylinder </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>bool</computeroutput> True when ray is intersecting cylinder </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="108" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga91222ac45b26b806e50d1d77268114de" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::YawPitchRollMatrix</definition>
        <argsstring>(vector ang, out vector mat[3])</argsstring>
        <name>YawPitchRollMatrix</name>
        <qualifiedname>Math3D::YawPitchRollMatrix</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>ang</declname>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Creates rotation matrix from angles. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ang</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> which contains angles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">mat</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> created rotation matrix <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat[3];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___math3_d_a_p_i_1ga91222ac45b26b806e50d1d77268114de" kindref="member">YawPitchRollMatrix</ref>(<sp/></highlight><highlight class="stringliteral">&quot;70<sp/>15<sp/>45&quot;</highlight><highlight class="normal">,<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>&lt;0.330366,0.0885213,-0.939693&gt;,&lt;0.458809,0.854988,0.241845&gt;,&lt;0.824835,-0.511037,0.241845&gt;</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="122" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gadc0f4c14d0d19116af8987e5f6b15dcd" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::DirectionAndUpMatrix</definition>
        <argsstring>(vector dir, vector up, out vector mat[4])</argsstring>
        <name>DirectionAndUpMatrix</name>
        <qualifiedname>Math3D::DirectionAndUpMatrix</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>up</declname>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Creates rotation matrix from direction and up vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> direction vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>up</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> up vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">mat</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[4] created rotation matrix <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat[4];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>dir<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>0<sp/>1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>up<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>1<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___math3_d_a_p_i_1gadc0f4c14d0d19116af8987e5f6b15dcd" kindref="member">DirectionAndUpMatrix</ref>(<sp/>dir,<sp/>up,<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>&lt;0.707107,0,-0.707107&gt;,&lt;0,1,0&gt;,&lt;0.707107,0,0.707107&gt;,&lt;0,0,0&gt;</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="139" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga768885389b94bb7c4499b2574ad6bed5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::MatrixMultiply4</definition>
        <argsstring>(vector mat0[4], vector mat1[4], out vector res[4])</argsstring>
        <name>MatrixMultiply4</name>
        <qualifiedname>Math3D::MatrixMultiply4</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat0</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat1</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>res</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Transforms matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat0</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[4] first matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mat1</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[4] second matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">res</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[4] result of first and second matrix multiplication <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat0[4]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;2<sp/>0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>3<sp/>0<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>1<sp/>0<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0<sp/>1&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>scale<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat1[4]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>1<sp/>0<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>1<sp/>0<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2<sp/>4<sp/>1<sp/>3&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>translation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>res[4];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1ga768885389b94bb7c4499b2574ad6bed5" kindref="member">MatrixMultiply4</ref>(mat0,<sp/>mat1,<sp/>res)</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>res<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>&lt;2,0,0&gt;,&lt;0,3,0&gt;,&lt;0,3,0&gt;,&lt;4,13,0&gt;</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="156" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gac4d22ddcfce918d0ad2ab7b8a6c07935" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::MatrixMultiply3</definition>
        <argsstring>(vector mat0[3], vector mat1[3], out vector res[3])</argsstring>
        <name>MatrixMultiply3</name>
        <qualifiedname>Math3D::MatrixMultiply3</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat0</declname>
          <array>[3]</array>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat1</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>res</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Transforms rotation matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat0</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[3] first matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mat1</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[3] second matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">res</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[3] result of first and second matrix multiplication <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat0[3]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;1.5<sp/>2.5<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.1<sp/>1.3<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>1&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>rotation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat1[3]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>0.4<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>1<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>1.3<sp/>2.7&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>rotation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>res[3];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1gac4d22ddcfce918d0ad2ab7b8a6c07935" kindref="member">MatrixMultiply3</ref>(mat0,<sp/>mat1,<sp/>res)</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>res<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>&lt;1.54,3.02,0&gt;,&lt;0.1,1.3,0&gt;,&lt;0.13,1.69,2.7&gt;</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="173" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gacfe264ca98076511a7bf6d34d33c75b2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::MatrixInvMultiply4</definition>
        <argsstring>(vector mat0[4], vector mat1[4], out vector res[4])</argsstring>
        <name>MatrixInvMultiply4</name>
        <qualifiedname>Math3D::MatrixInvMultiply4</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat0</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat1</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>res</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Invert-transforms matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat0</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[4] first matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mat1</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[4] second matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">res</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[4] inverse result of first and second matrix multiplication <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat0[4]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;2<sp/>0<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>3<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>scale<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat1[4]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>0<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>1<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2<sp/>4<sp/>1&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>translation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>res[4];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1gacfe264ca98076511a7bf6d34d33c75b2" kindref="member">MatrixInvMultiply4</ref>(mat0,<sp/>mat1,<sp/>res)</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>res<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>&lt;2,0,0&gt;,&lt;0,3,1&gt;,&lt;0,3,1&gt;,&lt;4,12,4&gt;</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="190" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gad247cf1ca56922bf022c97df39323837" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::MatrixInvMultiply3</definition>
        <argsstring>(vector mat0[3], vector mat1[3], out vector res[3])</argsstring>
        <name>MatrixInvMultiply3</name>
        <qualifiedname>Math3D::MatrixInvMultiply3</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat0</declname>
          <array>[3]</array>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat1</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>res</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Invert-transforms rotation matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat0</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[3] first matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mat1</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[3] second matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">res</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[3] result of first and second matrix multiplication <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat0[3]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;1.5<sp/>2.5<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.1<sp/>1.3<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>1&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>rotation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat1[3]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>0.4<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>1<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>1.3<sp/>2.7&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>rotation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>res[3];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1gad247cf1ca56922bf022c97df39323837" kindref="member">MatrixInvMultiply3</ref>(mat0,<sp/>mat1,<sp/>res)</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>res<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>&lt;2.5,0.62,0&gt;,&lt;2.5,1.3,0&gt;,&lt;3.25,1.69,2.7&gt;</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="207" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gade5b7cfa7130d12d1fa581c8a76d1c99" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::MatrixOrthogonalize4</definition>
        <argsstring>(vector mat[4])</argsstring>
        <name>MatrixOrthogonalize4</name>
        <qualifiedname>Math3D::MatrixOrthogonalize4</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Orthogonalizes matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[it]</parametername>
</parameternamelist>
<parameterdescription>
<para>mat <computeroutput>matrix</computeroutput> which should be orthogonalized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="213" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga4a8796fc8a9b7d252a74bc8a891e443e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::MatrixOrthogonalize3</definition>
        <argsstring>(vector mat[3])</argsstring>
        <name>MatrixOrthogonalize3</name>
        <qualifiedname>Math3D::MatrixOrthogonalize3</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Orthogonalizes matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[it]</parametername>
</parameternamelist>
<parameterdescription>
<para>mat <computeroutput>matrix</computeroutput> which should be orthogonalized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="219" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gad69368d7b5e1fcc6c3c8517d43adb443" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Math3D::MatrixIdentity4</definition>
        <argsstring>(out vector mat[4])</argsstring>
        <name>MatrixIdentity4</name>
        <qualifiedname>Math3D::MatrixIdentity4</qualifiedname>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Creates identity matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">mat</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>created</computeroutput> identity matrix <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat[4];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1gad69368d7b5e1fcc6c3c8517d43adb443" kindref="member">MatrixIdentity4</ref>(<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>&lt;1,0,0&gt;,&lt;0,1,0&gt;,&lt;0,0,1&gt;,&lt;0,0,0&gt;</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="233" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" bodystart="233" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gaf8fecc8596140a2631daa6741ea71592" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Math3D::MatrixIdentity3</definition>
        <argsstring>(out vector mat[3])</argsstring>
        <name>MatrixIdentity3</name>
        <qualifiedname>Math3D::MatrixIdentity3</qualifiedname>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Creates identity matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">mat</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>created</computeroutput> identity matrix <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat[3];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1gaf8fecc8596140a2631daa6741ea71592" kindref="member">MatrixIdentity3</ref>(<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>&lt;1,0,0&gt;,&lt;0,1,0&gt;,&lt;0,0,1&gt;</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="252" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" bodystart="252" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gacc4a7abdc12470a29888588562f09039" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Math3D::ScaleMatrix</definition>
        <argsstring>(float scale, out vector mat[3])</argsstring>
        <name>ScaleMatrix</name>
        <qualifiedname>Math3D::ScaleMatrix</qualifiedname>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Creates scale matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>scale</computeroutput> coeficient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">mat</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>created</computeroutput> scale matrix <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat[3];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1gacc4a7abdc12470a29888588562f09039" kindref="member">ScaleMatrix</ref>(<sp/>2.5,<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>&lt;2.5,0,0&gt;,&lt;0,2.5,0&gt;,&lt;0,0,2.5&gt;</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="271" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" bodystart="271" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga14846d3d1967846c305e44898cb455fc" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Math3D::QuatIdentity</definition>
        <argsstring>(out float q[4])</argsstring>
        <name>QuatIdentity</name>
        <qualifiedname>Math3D::QuatIdentity</qualifiedname>
        <param>
          <type>out <ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>q</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Creates identity quaternion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">q</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput>[4] created identity quaternion <programlisting><codeline><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q[4];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1ga14846d3d1967846c305e44898cb455fc" kindref="member">QuatIdentity</ref>(<sp/>q<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>q<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>{0,0,0,1}</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="293" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" bodystart="293" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga5fd1c8e2260889ad94e11a55b8c1bed0" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Math3D::QuatCopy</definition>
        <argsstring>(float s[4], out float d[4])</argsstring>
        <name>QuatCopy</name>
        <qualifiedname>Math3D::QuatCopy</qualifiedname>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>s</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>out <ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>d</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Copies quaternion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput>[4] quaternion to copy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">d</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput>[4] created quaternion copy <programlisting><codeline><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s[4]<sp/>=<sp/>{<sp/>2,<sp/>3,<sp/>4,<sp/>1<sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d[4];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1ga5fd1c8e2260889ad94e11a55b8c1bed0" kindref="member">QuatCopy</ref>(<sp/>s,<sp/>d<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>d<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>{2,3,4,1}</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="314" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" bodystart="314" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga84dabcc554ad75b70eff6cf7b18056b8" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::MatrixToQuat</definition>
        <argsstring>(vector mat[3], out float d[4])</argsstring>
        <name>MatrixToQuat</name>
        <qualifiedname>Math3D::MatrixToQuat</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>out <ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>d</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Converts rotation matrix to quaternion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[3] rotation matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">d</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput>[4] created quaternion copy <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat[3];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>rot<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;70<sp/>15<sp/>45&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">rot.<ref refid="classvector_1aa47f0f8fc9cf78676b74164916032adc" kindref="member">RotationMatrixFromAngles</ref>(<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d[4];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1ga84dabcc554ad75b70eff6cf7b18056b8" kindref="member">MatrixToQuat</ref>(<sp/>mat,<sp/>d<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>d<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>{0.241626,0.566299,-0.118838,0.778973}</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="337" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga1f5639e9522e7a43c5ef43c7d949984c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::QuatToMatrix</definition>
        <argsstring>(float q[4], out vector mat[3])</argsstring>
        <name>QuatToMatrix</name>
        <qualifiedname>Math3D::QuatToMatrix</qualifiedname>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>q</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Converts quaternion to rotation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="341" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga375718eff6ff2aa2897b7c60e970bd13" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>static proto vector Math3D::MatrixToAngles</definition>
        <argsstring>(vector mat[3])</argsstring>
        <name>MatrixToAngles</name>
        <qualifiedname>Math3D::MatrixToAngles</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mat</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Returns angles of rotation matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput>[3] rotation matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>vector</computeroutput> roll, pitch, yaw angles <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mat[3];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.RollPitchYawMatrix(<sp/></highlight><highlight class="stringliteral">&quot;70<sp/>15<sp/>45&quot;</highlight><highlight class="normal">,<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>ang<sp/>=<sp/><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1ga375718eff6ff2aa2897b7c60e970bd13" kindref="member">MatrixToAngles</ref>(<sp/>mat<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>ang<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>&lt;70,15,-45&gt;</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="356" column="21"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga45ab88db045d69edf8c977ec38dc94d0" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::QuatLerp</definition>
        <argsstring>(out float qout[4], float q1[4], float q2[4], float frac)</argsstring>
        <name>QuatLerp</name>
        <qualifiedname>Math3D::QuatLerp</qualifiedname>
        <param>
          <type>out <ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>qout</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>q1</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>q2</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>frac</declname>
        </param>
        <briefdescription>
<para>Linear interpolation between q1 and q2 with weight &apos;frac&apos; (0...1) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">qout</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput>[4] result quaternion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q1</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput>[4] first quaternion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q2</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput>[4] second quaternion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frac</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> interpolation weight <programlisting><codeline><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q1[4]<sp/>=<sp/>{<sp/>1,<sp/>1,<sp/>1,<sp/>1<sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q2[4]<sp/>=<sp/>{<sp/>2,<sp/>2,<sp/>2,<sp/>1<sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>qout[4];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1ga45ab88db045d69edf8c977ec38dc94d0" kindref="member">QuatLerp</ref>(<sp/>qout,<sp/>q1,<sp/>q2,<sp/>0.5<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>qout<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>{1.5,1.5,1.5,1}</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="374" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga9fed9ae2c091bf3ad5b079da5243a256" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::QuatMultiply</definition>
        <argsstring>(out float qout[4], float q1[4], float q2[4])</argsstring>
        <name>QuatMultiply</name>
        <qualifiedname>Math3D::QuatMultiply</qualifiedname>
        <param>
          <type>out <ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>qout</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>q1</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>q2</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Multiplies quaternions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">qout</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput>[4] result quaternion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q1</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput>[4] first quaternion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q2</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput>[4] second quaternion <programlisting><codeline><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q1[4]<sp/>=<sp/>{<sp/>1,<sp/>2,<sp/>3,<sp/>1<sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>q2[4]<sp/>=<sp/>{<sp/>2,<sp/>2,<sp/>2,<sp/>1<sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>qout[4];</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1ga9fed9ae2c091bf3ad5b079da5243a256" kindref="member">QuatMultiply</ref>(<sp/>qout,<sp/>q1,<sp/>q2<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/>qout<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>{2,4,6,1}</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="391" column="19"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gac0b1207499179988d9fb3810e24ad2c1" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>static proto vector Math3D::QuatToAngles</definition>
        <argsstring>(float q[4])</argsstring>
        <name>QuatToAngles</name>
        <qualifiedname>Math3D::QuatToAngles</qualifiedname>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>q</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Returns Angles vector from quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="394" column="21"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga70816364831a5960516c7f031757d10e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
        <definition>static proto int Math3D::CheckBoundBox</definition>
        <argsstring>(vector mins1, vector maxs1, vector mins2, vector maxs2)</argsstring>
        <name>CheckBoundBox</name>
        <qualifiedname>Math3D::CheckBoundBox</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mins1</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>maxs1</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>mins2</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>maxs2</declname>
        </param>
        <briefdescription>
<para>Returns 1, when bounding boxes intersects. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mins1</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> minimum point of first bounding box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxs1</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> maximum point of first bounding box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mins2</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> minimum point of second bounding box </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxs2</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> maximum point of second bounding box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>int</computeroutput> 1 if boundig boxes intersects, otherwise 0 <programlisting><codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mins1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>1<sp/>1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>maxs1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;3<sp/>3<sp/>3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>mins2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;2<sp/>2<sp/>2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>maxs2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;4<sp/>4<sp/>4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1ga70816364831a5960516c7f031757d10e" kindref="member">CheckBoundBox</ref>(mins1,<sp/>maxs1,<sp/>mins2,<sp/>maxs2)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>1</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="413" column="18"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gaee42b6876252eaf0d1a902695c8d9b75" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>static vector Math3D::GetRandomDir</definition>
        <argsstring>()</argsstring>
        <name>GetRandomDir</name>
        <qualifiedname>Math3D::GetRandomDir</qualifiedname>
        <briefdescription>
<para>Returns randon normalized direction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>vector</computeroutput> <programlisting><codeline><highlight class="normal"><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(<sp/><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1gaee42b6876252eaf0d1a902695c8d9b75" kindref="member">GetRandomDir</ref>()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<ref refid="classvector" kindref="compound">vector</ref><sp/>ret<sp/>=<sp/><sp/>0x0000000007c1a1c0<sp/>{&lt;0.422565,0,-0.906333&gt;}</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="424" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" bodystart="424" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gaf35b9ea04458f718e1dc54aa692d6b81" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto native <ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>static proto native vector Math3D::Curve</definition>
        <argsstring>(ECurveType type, float param, notnull array&lt; vector &gt; points)</argsstring>
        <name>Curve</name>
        <qualifiedname>Math3D::Curve</qualifiedname>
        <param>
          <type><ref refid="group___math3_d_a_p_i_1ga11776b655fef7f8a9dbbda285072b194" kindref="member">ECurveType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>param</declname>
        </param>
        <param>
          <type>notnull <ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="classvector" kindref="compound">vector</ref> &gt;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Computes curve. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>vector</computeroutput> <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;vector&gt;</ref>();</highlight></codeline>
<codeline><highlight class="normal">points.Insert(<sp/><ref refid="group___math3_d_a_p_i_1ga5bd1deb1c96276d94eeec6fe40955c41" kindref="member">Vector</ref>(<sp/>0,<sp/>0,<sp/>0)<sp/>);</highlight></codeline>
<codeline><highlight class="normal">points.Insert(<sp/><ref refid="group___math3_d_a_p_i_1ga5bd1deb1c96276d94eeec6fe40955c41" kindref="member">Vector</ref>(<sp/>5,<sp/>0,<sp/>0)<sp/>);</highlight></codeline>
<codeline><highlight class="normal">points.Insert(<sp/><ref refid="group___math3_d_a_p_i_1ga5bd1deb1c96276d94eeec6fe40955c41" kindref="member">Vector</ref>(<sp/>8,<sp/>3,<sp/>0)<sp/>);</highlight></codeline>
<codeline><highlight class="normal">points.Insert(<sp/><ref refid="group___math3_d_a_p_i_1ga5bd1deb1c96276d94eeec6fe40955c41" kindref="member">Vector</ref>(<sp/>6,<sp/>1,<sp/>0)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0.5;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvector" kindref="compound">vector</ref><sp/>result<sp/>=<sp/><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1gaf35b9ea04458f718e1dc54aa692d6b81" kindref="member">Curve</ref>(<ref refid="group___math3_d_a_p_i_1ga11776b655fef7f8a9dbbda285072b194" kindref="member">ECurveType</ref>.CatmullRom,<sp/>t,<sp/>points);</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="448" column="28"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gaa40fb02e82bbd890f161df78fc8cdc55" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>static proto vector Math3D::NearestPoint</definition>
        <argsstring>(vector beg, vector end, vector pos)</argsstring>
        <name>NearestPoint</name>
        <qualifiedname>Math3D::NearestPoint</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>beg</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Point on line beg .. end nearest to pos. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>vector</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="455" column="21"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1ga6355d439d382de23a6bde149dce4ce27" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto <ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static proto float Math3D::AngleFromPosition</definition>
        <argsstring>(vector origin, vector originDir, vector target)</argsstring>
        <name>AngleFromPosition</name>
        <qualifiedname>Math3D::AngleFromPosition</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>originDir</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Angle that a target is from the direction of an origin. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>float</computeroutput> Angle in radians </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="461" column="20"/>
      </memberdef>
      <memberdef kind="function" id="group___math3_d_a_p_i_1gaa5d7b9d9e2c8f7d42e0e63415e512d20" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>proto void</type>
        <definition>static proto void Math3D::ConePoints</definition>
        <argsstring>(vector origin, float length, float halfAngle, float angleOffset, out vector leftPoint, out vector rightPoint)</argsstring>
        <name>ConePoints</name>
        <qualifiedname>Math3D::ConePoints</qualifiedname>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>halfAngle</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>angleOffset</declname>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>leftPoint</declname>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>rightPoint</declname>
        </param>
        <briefdescription>
<para>Calculates the points of a right 2D cone in 3D space. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Origin of cone </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Length of the cone </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>halfAngle</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Half of the angle of the cone in radians </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angleOffset</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> Angle offset of the cone in radians (handy for rotating it along with something in the world) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">leftPoint</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Left point of the cone </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rightPoint</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>vector</computeroutput> Right point of the cone </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/1_Core/proto/EnMath3D.c" line="472" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
