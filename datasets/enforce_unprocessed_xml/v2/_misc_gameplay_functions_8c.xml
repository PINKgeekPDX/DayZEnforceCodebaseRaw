<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="_misc_gameplay_functions_8c" kind="file" language="C++">
    <compoundname>MiscGameplayFunctions.c</compoundname>
    <innerclass refid="class_replace_item_with_new_lambda" prot="public">ReplaceItemWithNewLambda</innerclass>
    <innerclass refid="class_turn_item_into_item_lambda" prot="public">TurnItemIntoItemLambda</innerclass>
    <innerclass refid="class_drop_equip_and_destroy_root_lambda" prot="public">DropEquipAndDestroyRootLambda</innerclass>
    <innerclass refid="class_destroy_item_in_corpses_hands_and_create_new_on_gnd_lambda" prot="public">DestroyItemInCorpsesHandsAndCreateNewOnGndLambda</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112" prot="public" static="no" strong="no">
        <type></type>
        <name>TransferInventoryResult</name>
        <enumvalue id="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112a06d32f047358de4e6a30c28046f4688e" prot="public">
          <name>Ok</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112a1d9cf62f8a347bdabe7edf32a764ef63" prot="public">
          <name>DroppedSome</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="202" column="1" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="enum" id="_misc_gameplay_functions_8c_1a415e83ef6b8073d37ad4f88fba082421" prot="public" static="no" strong="no">
        <type></type>
        <name>ThrowEntityFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="207" column="1" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="208" bodyend="211"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1a02917914db83b7759e19cb7450c92354" prot="public" static="no" mutable="no">
        <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
        <definition>m_Player</definition>
        <argsstring></argsstring>
        <name>m_Player</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="117" column="12" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1a54ffdf3b7d8605e5633e49f38f5e3d79" prot="public" static="no" mutable="no">
        <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
        <definition>EntityAI m_NewItem</definition>
        <argsstring></argsstring>
        <name>m_NewItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="166" column="10" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1ac157bdf0b85a40d2619cbc8bc1ae5fe2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>@ NONE</definition>
        <argsstring></argsstring>
        <name>NONE</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="217" column="1" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1a30b0475143a7f470e8688d1849a1c483" prot="public" static="no" mutable="no">
        <type></type>
        <definition>SPLIT</definition>
        <argsstring></argsstring>
        <name>SPLIT</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="218" column="1" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1a0643e0f472dc01079cc541f2ef6810d6" prot="public" static="no" mutable="no">
        <type><ref refid="class_destroy_item_in_corpses_hands_and_create_new_on_gnd_lambda" kindref="compound">DestroyItemInCorpsesHandsAndCreateNewOnGndLambda</ref></type>
        <definition>DestroyItemInCorpsesHandsAndCreateNewOnGndLambda RaycastStart</definition>
        <argsstring></argsstring>
        <name>RaycastStart</name>
        <initializer>= &quot;0 0 0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1652" column="21"/>
      </memberdef>
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1a42ed89b2c00eb2ed45d1a3a61bedc63e" prot="public" static="no" mutable="no">
        <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
        <definition>int TotalObjects</definition>
        <argsstring></argsstring>
        <name>TotalObjects</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1653" column="5" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1a62f89cd5d7000a04dd1f79945df1911c" prot="public" static="no" mutable="no">
        <type><ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>vector ObjectCenterPos</definition>
        <argsstring></argsstring>
        <name>ObjectCenterPos</name>
        <initializer>= &quot;0 0 0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1656" column="8" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1a5d23911590529a52ef51da873b21c072" prot="public" static="no" mutable="no">
        <type><ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>vector ObjectContactPos</definition>
        <argsstring></argsstring>
        <name>ObjectContactPos</name>
        <initializer>= &quot;0 0 0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1657" column="8" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1657" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1a58616217dbb930fa83fde9356a396d2d" prot="public" static="no" mutable="no">
        <type><ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>vector ObjectContactDir</definition>
        <argsstring></argsstring>
        <name>ObjectContactDir</name>
        <initializer>= &quot;0 0 0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1658" column="8" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1ab5bff0c270c23bdc6f9d1c000d8c5232" prot="public" static="no" mutable="no">
        <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
        <definition>int ContactComponent</definition>
        <argsstring></argsstring>
        <name>ContactComponent</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1659" column="5" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1a034428c897382bb35e841993ed7fec76" prot="public" static="no" mutable="no">
        <type>ref <ref refid="classarray" kindref="compound">array</ref>&lt; ref <ref refid="class_raycast_r_v_result" kindref="compound">RaycastRVResult</ref> &gt;</type>
        <definition>ref array&lt;ref RaycastRVResult&gt; HitProxyObjects</definition>
        <argsstring></argsstring>
        <name>HitProxyObjects</name>
        <initializer>= new <ref refid="classarray" kindref="compound">array</ref>&lt;ref <ref refid="class_raycast_r_v_result" kindref="compound">RaycastRVResult</ref>&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1660" column="11" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1660" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_misc_gameplay_functions_8c_1a6ad732de5cd6794e2759cbd81a7a5aef" prot="public" static="no" mutable="no">
        <type>ref set&lt; <ref refid="class_object" kindref="compound">Object</ref> &gt;</type>
        <definition>ref set&lt;Object&gt; HitObjects</definition>
        <argsstring></argsstring>
        <name>HitObjects</name>
        <initializer>= new set&lt;<ref refid="class_object" kindref="compound">Object</ref>&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1661" column="9" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1661" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aebe9921400688b4e3d37a409bc292077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class TurnItemIntoItemLambdaAnimSysNotifyLambda extends <ref refid="class_turn_item_into_item_lambda" kindref="compound">TurnItemIntoItemLambda</ref></type>
        <definition>class TurnItemIntoItemLambdaAnimSysNotifyLambda extends TurnItemIntoItemLambda OnSuccess</definition>
        <argsstring>(EntityAI new_item)</argsstring>
        <name>OnSuccess</name>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>new_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="91" column="48" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1adae69ddb314c6f360a6a5951db72cf5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MoveEquipToExistingItemAndDestroyOldRootLambda::DropEquipAndDestroyRootLambda</definition>
        <argsstring>(EntityAI old_item, string new_item_type, PlayerBase player)</argsstring>
        <name>DropEquipAndDestroyRootLambda</name>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>old_item</declname>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>new_item_type</declname>
        </param>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="119" column="6" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1afc3ebf0f58925c84ce00f52a9bc14222" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>override void</type>
        <definition>override void MoveEquipToExistingItemAndDestroyOldRootLambda::CopyOldPropertiesToNew</definition>
        <argsstring>(notnull EntityAI old_item, EntityAI new_item)</argsstring>
        <name>CopyOldPropertiesToNew</name>
        <param>
          <type>notnull <ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>old_item</declname>
        </param>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>new_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>We don&apos;t care if a valid transform couldn&apos;t be found, we just want to preferably use it instead of placing on the old item</para>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="124" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="124" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a6c4096e5ce6e4e168e9f61c2a5c56ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MoveEquipToExistingItemAndDestroyOldRootLambda</definition>
        <argsstring>(EntityAI old_item, string new_item_type, PlayerBase player, EntityAI new_item)</argsstring>
        <name>MoveEquipToExistingItemAndDestroyOldRootLambda</name>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>old_item</declname>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>new_item_type</declname>
        </param>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>new_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="168" column="6" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="168" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a00423fd87c4a344415176b98e6805c5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>override protected void</type>
        <definition>override protected void RemoveNetworkObjectInfo</definition>
        <argsstring>()</argsstring>
        <name>RemoveNetworkObjectInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="176" column="25" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aeb57a9812cb3e4c973362cf3564a1a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>override protected void</type>
        <definition>override protected void UndoRemoveNetworkObjectInfo</definition>
        <argsstring>()</argsstring>
        <name>UndoRemoveNetworkObjectInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="181" column="25" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a9335d78473ee12bb035f00105445fcc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>override protected void</type>
        <definition>override protected void CreateNetworkObjectInfo</definition>
        <argsstring>(EntityAI new_item)</argsstring>
        <name>CreateNetworkObjectInfo</name>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>new_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="195" column="25" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="195" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a5f319b815605523bfd41094745c400bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="_misc_gameplay_functions_8c_1a415e83ef6b8073d37ad4f88fba082421" kindref="member">ThrowEntityFlags</ref></type>
        <definition>enum ThrowEntityFlags Truncate</definition>
        <argsstring>(float value, int decimals=2)</argsstring>
        <name>Truncate</name>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>truncate float to specified precision </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="195" column="25" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="216" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a89b38cd7a067e962872082a5d5831cea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstring" kindref="compound">string</ref></type>
        <definition>static string TruncateToS</definition>
        <argsstring>(float value, int decimals=2)</argsstring>
        <name>TruncateToS</name>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>truncate float to specified precision, output as string </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="222" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a1492769687dc6e34c52cdaed1dd8f903" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>static vector TruncateVec</definition>
        <argsstring>(vector value, int decimals=2)</argsstring>
        <name>TruncateVec</name>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>truncate float to specified precision </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="227" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="227" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a77d0f85ea6b9b1e27da083cde0e9ba8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstring" kindref="compound">string</ref></type>
        <definition>static string TruncateVecToS</definition>
        <argsstring>(vector value, int decimals=2, string delimiter=&quot; &quot;)</argsstring>
        <name>TruncateVecToS</name>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>decimals</declname>
          <defval>2</defval>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>delimiter</declname>
          <defval>&quot; &quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="236" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aa593d6f5a6e96cf79da3e0f890ec4a4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstring" kindref="compound">string</ref></type>
        <definition>static string GetColorString</definition>
        <argsstring>(float r, float g, float b, float a)</argsstring>
        <name>GetColorString</name>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>g</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="241" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="241" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1ad4a290a67dc415b16d59748f5d2092a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstring" kindref="compound">string</ref></type>
        <definition>static string ValueToBar</definition>
        <argsstring>(float value, string bar=&quot;[----------]&quot;, string mark=&quot;x&quot;)</argsstring>
        <name>ValueToBar</name>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>bar</declname>
          <defval>&quot;[----------]&quot;</defval>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>mark</declname>
          <defval>&quot;x&quot;</defval>
        </param>
        <briefdescription>
<para>Produces ACII &quot;progress bar&quot; based on an 0..1 &apos;value&apos; input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="247" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="247" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1ae2ad7e8a734c42bbf2952f4517e7e7cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstring" kindref="compound">string</ref></type>
        <definition>static string InsertAtPos</definition>
        <argsstring>(string base, string insert, int pos)</argsstring>
        <name>InsertAtPos</name>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>insert</declname>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Insert &apos;insert&apos; behind index &apos;pos&apos; of the &apos;base&apos; string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="258" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="258" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1ae5f999f23774c37b15fb0f222928e27d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void TransferItemProperties</definition>
        <argsstring>(EntityAI source, notnull EntityAI target, bool transfer_agents=true, bool transfer_variables=true, bool transfer_health=true, bool exclude_quantity=false)</argsstring>
        <name>TransferItemProperties</name>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type>notnull <ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>transfer_agents</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>transfer_variables</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>transfer_health</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>exclude_quantity</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>will transform item&apos; variables, agents and other local scripted properties as well as any relevant non-scripted properties like health </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="269" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="269" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a316835d870f8c0fec210de50b91c6c50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void TransferItemVariables</definition>
        <argsstring>(ItemBase source, ItemBase target, bool exclude_quantity=false)</argsstring>
        <name>TransferItemVariables</name>
        <param>
          <type><ref refid="class_item_base" kindref="compound">ItemBase</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="class_item_base" kindref="compound">ItemBase</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>exclude_quantity</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="288" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="288" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a941456583d5142ea1b915dbaa8fb5b9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112" kindref="member">TransferInventoryResult</ref></type>
        <definition>static TransferInventoryResult TransferInventory</definition>
        <argsstring>(EntityAI sourceItem, EntityAI targetItem, PlayerBase player)</argsstring>
        <name>TransferInventory</name>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>sourceItem</declname>
        </param>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>targetItem</declname>
        </param>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="330" column="32" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="330" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1ad343b098125d6077335418af6d548023" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnlimitedAmmoDebugCheck</definition>
        <argsstring>(Weapon_Base weapon)</argsstring>
        <name>UnlimitedAmmoDebugCheck</name>
        <param>
          <type><ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref></type>
          <declname>weapon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="372" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="372" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1af4a88433ed78a22c1df27cf14cf64f2c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void TurnItemIntoItem</definition>
        <argsstring>(notnull ItemBase old_item, string new_item_type, notnull PlayerBase player)</argsstring>
        <name>TurnItemIntoItem</name>
        <param>
          <type>notnull <ref refid="class_item_base" kindref="compound">ItemBase</ref></type>
          <declname>old_item</declname>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>new_item_type</declname>
        </param>
        <param>
          <type>notnull <ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="407" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a4bbeb81c586a0eb87d038d4243946833" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void TurnItemIntoItemEx</definition>
        <argsstring>(notnull PlayerBase player, ReplaceItemWithNewLambdaBase lambda)</argsstring>
        <name>TurnItemIntoItemEx</name>
        <param>
          <type>notnull <ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type><ref refid="class_replace_item_with_new_lambda_base" kindref="compound">ReplaceItemWithNewLambdaBase</ref></type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="412" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="412" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a6ca77c3b0e70726afc07cbfacf3a1e6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void TurnItemInHandsIntoItem</definition>
        <argsstring>(notnull ItemBase old_item, string new_item_type, notnull PlayerBase player)</argsstring>
        <name>TurnItemInHandsIntoItem</name>
        <param>
          <type>notnull <ref refid="class_item_base" kindref="compound">ItemBase</ref></type>
          <declname>old_item</declname>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>new_item_type</declname>
        </param>
        <param>
          <type>notnull <ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="417" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="417" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a936f9082e63623f63e33c65dcbedb5dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void TurnItemInHandsIntoItemEx</definition>
        <argsstring>(notnull PlayerBase player, ReplaceItemWithNewLambdaBase lambda)</argsstring>
        <name>TurnItemInHandsIntoItemEx</name>
        <param>
          <type>notnull <ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type><ref refid="class_replace_item_with_new_lambda_base" kindref="compound">ReplaceItemWithNewLambdaBase</ref></type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="422" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="422" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1afbb00a22568dbab448e7edffd72cc052" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="class_item_base" kindref="compound">ItemBase</ref> &gt;</type>
        <definition>static array&lt; ItemBase &gt; CreateItemBasePiles</definition>
        <argsstring>(string item_name, vector ground_position, float quantity, float health, bool floaty_spawn=false)</argsstring>
        <name>CreateItemBasePiles</name>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>item_name</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>ground_position</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>quantity</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>health</declname>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>floaty_spawn</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Spawns multiple piles of stackable <ref refid="class_item_base" kindref="compound">ItemBase</ref> objects on ground (intended for generic use) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="428" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="428" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1af1f8bed0e1997df97d56fa485f187b12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarray" kindref="compound">array</ref>&lt; Magazine &gt;</type>
        <definition>static array&lt; Magazine &gt; CreateMagazinePiles</definition>
        <argsstring>(string item_name, vector ground_position, float quantity, float health)</argsstring>
        <name>CreateMagazinePiles</name>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>item_name</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>ground_position</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>quantity</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>health</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="467" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="467" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a998ae06eb20fbde38d8ca7b5920167f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classarray" kindref="compound">array</ref>&lt; Magazine &gt;</type>
        <definition>static array&lt; Magazine &gt; CreateMagazinePilesFromBullet</definition>
        <argsstring>(string bullet_type, vector ground_position, float quantity, float health)</argsstring>
        <name>CreateMagazinePilesFromBullet</name>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>bullet_type</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>ground_position</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>quantity</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>health</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="494" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="494" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a682679428a00610b5b9da60295963c9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
        <definition>static int GetHealthLevelForAmmo</definition>
        <argsstring>(string class_name, float health)</argsstring>
        <name>GetHealthLevelForAmmo</name>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>class_name</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>health</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="527" column="12" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="527" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a71e7f877f165568041b8039ea7a31ce8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static float GetTypeMaxGlobalHealth</definition>
        <argsstring>(string class_name, string health_type=&quot;Health&quot;)</argsstring>
        <name>GetTypeMaxGlobalHealth</name>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>class_name</declname>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>health_type</declname>
          <defval>&quot;Health&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="543" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="543" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aa90ad6c142dc124da8117486933ec12c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool GetProjectedCursorPos3d</definition>
        <argsstring>(out vector position, Weapon_Base weapon)</argsstring>
        <name>GetProjectedCursorPos3d</name>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref></type>
          <declname>weapon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="566" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="566" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aa896eef598821358a102a0b3f9bd1b67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void GetHeadBonePos</definition>
        <argsstring>(notnull PlayerBase player, out vector pos)</argsstring>
        <name>GetHeadBonePos</name>
        <param>
          <type>notnull <ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="584" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="584" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a97b6a0394bc22f3a65bdf7f0cd6e719a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>static vector GetHeadingVector</definition>
        <argsstring>(notnull PlayerBase player)</argsstring>
        <name>GetHeadingVector</name>
        <param>
          <type>notnull <ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="594" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="594" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1ab33724be9d37b039005189ad22ea1de5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static float GetHeadingAngle</definition>
        <argsstring>(notnull DayZPlayerImplement player)</argsstring>
        <name>GetHeadingAngle</name>
        <param>
          <type>notnull <ref refid="class_day_z_player_implement" kindref="compound">DayZPlayerImplement</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="604" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="604" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aa9c574ff59df39ca0b2f4de56266a5b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static float GetEnergyMetabolicSpeed</definition>
        <argsstring>(int movement_speed)</argsstring>
        <name>GetEnergyMetabolicSpeed</name>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>movement_speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="612" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="612" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1acd62b5872508f76c4bfc976191ffe8d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static float GetWaterMetabolicSpeed</definition>
        <argsstring>(int movement_speed)</argsstring>
        <name>GetWaterMetabolicSpeed</name>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>movement_speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="635" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="635" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a16470b31ea2c5f9e3500f36fedf7811d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstring" kindref="compound">string</ref></type>
        <definition>static string ObtainRestrainItemTargetClassname</definition>
        <argsstring>(notnull EntityAI entity)</argsstring>
        <name>ObtainRestrainItemTargetClassname</name>
        <param>
          <type>notnull <ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>entity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="658" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="658" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a97883855a51619f3d643abacf50854a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void TransformRestrainItem</definition>
        <argsstring>(EntityAI current_item, EntityAI tool, PlayerBase player_source, PlayerBase player_target, bool destroy=false)</argsstring>
        <name>TransformRestrainItem</name>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>current_item</declname>
        </param>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>tool</declname>
        </param>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player_source</declname>
        </param>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player_target</declname>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>destroy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="663" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="663" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a9d17653dd70d5f4c7e85960a787750be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool IsValueInRange</definition>
        <argsstring>(float value, float from, float to)</argsstring>
        <name>IsValueInRange</name>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="694" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="694" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a428b1d81674ffafee7d240f6ded83a6a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool IsPlayerOrientedTowardPos</definition>
        <argsstring>(notnull DayZPlayerImplement player, vector target_pos, float cone_angle)</argsstring>
        <name>IsPlayerOrientedTowardPos</name>
        <param>
          <type>notnull <ref refid="class_day_z_player_implement" kindref="compound">DayZPlayerImplement</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>target_pos</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>cone_angle</declname>
        </param>
        <briefdescription>
<para>Check if player direction(based on cone of defined angle) is oriented to target position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>dir in cone or in a tip of cone</para>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="700" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="700" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aa27083abf1ed1bf338d4c295073e0bac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstring" kindref="compound">string</ref></type>
        <definition>static string SanitizeString</definition>
        <argsstring>(string input)</argsstring>
        <name>SanitizeString</name>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="732" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="732" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a4e9b99b28bf849acb55691f2034bf124" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool ComplexBuildCollideCheckClient</definition>
        <argsstring>(PlayerBase player, ActionTarget target, ItemBase item, string partName=&quot;&quot;)</argsstring>
        <name>ComplexBuildCollideCheckClient</name>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type><ref refid="_action_targets_8c_1a2ab3de6f698cb230ae0c129e3e01b341" kindref="member">ActionTarget</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="class_item_base" kindref="compound">ItemBase</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>partName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="742" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="742" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aad9cb6b22bc750ab03b38e694d342d00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool ComplexBuildCollideCheckClient</definition>
        <argsstring>(PlayerBase player, ActionTarget target, ItemBase item, int constraction_index)</argsstring>
        <name>ComplexBuildCollideCheckClient</name>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type><ref refid="_action_targets_8c_1a2ab3de6f698cb230ae0c129e3e01b341" kindref="member">ActionTarget</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="class_item_base" kindref="compound">ItemBase</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>constraction_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="747" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="747" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a48f351293070533ec558de8a71a5df16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool BuildCondition</definition>
        <argsstring>(PlayerBase player, ActionTarget target, ItemBase item, bool camera_check)</argsstring>
        <name>BuildCondition</name>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type><ref refid="_action_targets_8c_1a2ab3de6f698cb230ae0c129e3e01b341" kindref="member">ActionTarget</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="class_item_base" kindref="compound">ItemBase</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>camera_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="784" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="784" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a91aa3bca9a66d1d7de9dd1c145a5e274" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool BuildCondition</definition>
        <argsstring>(PlayerBase player, ActionTarget target, ItemBase item, bool camera_check, int constraction_index)</argsstring>
        <name>BuildCondition</name>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type><ref refid="_action_targets_8c_1a2ab3de6f698cb230ae0c129e3e01b341" kindref="member">ActionTarget</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="class_item_base" kindref="compound">ItemBase</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>camera_check</declname>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>constraction_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="789" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="789" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aae225394af2b321d388c84c6cc9c7c34" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void IsUnderRoofFromToCalculation</definition>
        <argsstring>(EntityAI entity, out vector from, out vector to, float height=GameConstants.ROOF_CHECK_RAYCAST_DIST)</argsstring>
        <name>IsUnderRoofFromToCalculation</name>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>entity</declname>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>out <ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>height</declname>
          <defval><ref refid="group___emote_i_ds_1gaec130b3811ffdc65c0413ed376a9d7a9" kindref="member">GameConstants.ROOF_CHECK_RAYCAST_DIST</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="840" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="840" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aae97f6baa8821b943b12392f89881f96" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool IsUnderRoof</definition>
        <argsstring>(EntityAI entity, float height=GameConstants.ROOF_CHECK_RAYCAST_DIST)</argsstring>
        <name>IsUnderRoof</name>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>entity</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>height</declname>
          <defval><ref refid="group___emote_i_ds_1gaec130b3811ffdc65c0413ed376a9d7a9" kindref="member">GameConstants.ROOF_CHECK_RAYCAST_DIST</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="870" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="870" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1af309b8fa782399a79765c31d11743526" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool IsUnderRoofEx</definition>
        <argsstring>(EntityAI entity, float height=GameConstants.ROOF_CHECK_RAYCAST_DIST, int geometry=ObjIntersectView)</argsstring>
        <name>IsUnderRoofEx</name>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>entity</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>height</declname>
          <defval><ref refid="group___emote_i_ds_1gaec130b3811ffdc65c0413ed376a9d7a9" kindref="member">GameConstants.ROOF_CHECK_RAYCAST_DIST</ref></defval>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>geometry</declname>
          <defval>ObjIntersectView</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="875" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="875" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a51135c17c00c7f8459a8c656a366299f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>static vector GetSteamPosition</definition>
        <argsstring>(EntityAI parent)</argsstring>
        <name>GetSteamPosition</name>
        <param>
          <type><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="904" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="904" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a4ed7de29993696c94f1d6a08e84acac1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void DropAllItemsInInventoryInBounds</definition>
        <argsstring>(ItemBase ib, vector halfExtents)</argsstring>
        <name>DropAllItemsInInventoryInBounds</name>
        <param>
          <type><ref refid="class_item_base" kindref="compound">ItemBase</ref></type>
          <declname>ib</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>halfExtents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="945" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="945" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1af5ca1e23035798fe2f034cdd5f36f702" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ThrowAllItemsInInventory</definition>
        <argsstring>(notnull EntityAI parent, int flags)</argsstring>
        <name>ThrowAllItemsInInventory</name>
        <param>
          <type>notnull <ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="972" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="972" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1abfa8e9fb82ef57cd8a70bb6afda4e24a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ThrowEntityFromInventory</definition>
        <argsstring>(notnull EntityAI entity, vector position, float direction[4], vector force, int flags)</argsstring>
        <name>ThrowEntityFromInventory</name>
        <param>
          <type>notnull <ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>entity</declname>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>direction</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>force</declname>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1005" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1005" bodyend="1060"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1ae8844ef2fe79def034092d6df9994365" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static float GetCurrentItemHeatIsolation</definition>
        <argsstring>(ItemBase pItem)</argsstring>
        <name>GetCurrentItemHeatIsolation</name>
        <param>
          <type><ref refid="class_item_base" kindref="compound">ItemBase</ref></type>
          <declname>pItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>item heat isolation (from cfg)</para>
<para>item health (state)</para>
<para>item wetness</para>
<para>wet factor selection</para>
<para>health factor selection</para>
<para>apply factors</para>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1062" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1062" bodyend="1122"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1afb7c471d722888587eb082dbcff37c79" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void FilterObstructingObjects</definition>
        <argsstring>(array&lt; Object &gt; potentiallyObstructingObjects, out array&lt; Object &gt; obstructingObjects)</argsstring>
        <name>FilterObstructingObjects</name>
        <param>
          <type><ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="class_object" kindref="compound">Object</ref> &gt;</type>
          <declname>potentiallyObstructingObjects</declname>
        </param>
        <param>
          <type>out <ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="class_object" kindref="compound">Object</ref> &gt;</type>
          <declname>obstructingObjects</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1124" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1124" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a055c2d96b5bde58359ad2a388de3ed75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool CanIgnoreDistanceCheck</definition>
        <argsstring>(Object obj)</argsstring>
        <name>CanIgnoreDistanceCheck</name>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1137" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1137" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a67e371e63791b1443d7a4403501adfdd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void FilterObstructedObjectsByGrouping</definition>
        <argsstring>(vector origin, float range, float distanceDelta, array&lt; Object &gt; objects, array&lt; Object &gt; obstructingObjects, out array&lt; Object &gt; filteredObjects, bool doDistanceCheck=false, bool checkIfDistanceCanBeIgnored=false, float maxDist=0)</argsstring>
        <name>FilterObstructedObjectsByGrouping</name>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>distanceDelta</declname>
        </param>
        <param>
          <type><ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="class_object" kindref="compound">Object</ref> &gt;</type>
          <declname>objects</declname>
        </param>
        <param>
          <type><ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="class_object" kindref="compound">Object</ref> &gt;</type>
          <declname>obstructingObjects</declname>
        </param>
        <param>
          <type>out <ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="class_object" kindref="compound">Object</ref> &gt;</type>
          <declname>filteredObjects</declname>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>doDistanceCheck</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>checkIfDistanceCanBeIgnored</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>maxDist</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>group objects that are close to each other together </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1143" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1143" bodyend="1254"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1add1c838e4b3ac62db1e2f835098499c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SplitArrayIntoGroupsByDistance</definition>
        <argsstring>(array&lt; Object &gt; objects, array&lt; ref array&lt; Object &gt; &gt; objectGroups, float squaredDistanceDelta)</argsstring>
        <name>SplitArrayIntoGroupsByDistance</name>
        <param>
          <type><ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="class_object" kindref="compound">Object</ref> &gt;</type>
          <declname>objects</declname>
        </param>
        <param>
          <type><ref refid="classarray" kindref="compound">array</ref>&lt; ref <ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="class_object" kindref="compound">Object</ref> &gt; &gt;</type>
          <declname>objectGroups</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>squaredDistanceDelta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1256" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1256" bodyend="1288"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1ab62c01446154497af8c192671d71bf16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool IsObjectObstructed</definition>
        <argsstring>(Object object, bool doDistanceCheck=false, vector distanceCheckPos=&quot;0 0 0&quot;, float maxDist=0)</argsstring>
        <name>IsObjectObstructed</name>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>doDistanceCheck</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>distanceCheckPos</declname>
          <defval>&quot;0 0 0&quot;</defval>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>maxDist</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1290" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1290" bodyend="1297"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1ad4fd229674250ece2418569706c4af9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool IsObjectObstructedEx</definition>
        <argsstring>(Object object, IsObjectObstructedCache cache, bool doDistanceCheck=false, vector distanceCheckPos=&quot;0 0 0&quot;, float maxDist=0)</argsstring>
        <name>IsObjectObstructedEx</name>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref></type>
          <declname>cache</declname>
        </param>
        <param>
          <type><ref refid="classbool" kindref="compound">bool</ref></type>
          <declname>doDistanceCheck</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>distanceCheckPos</declname>
          <defval>&quot;0 0 0&quot;</defval>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>maxDist</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1299" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1299" bodyend="1316"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1ac7aeb216309b5429c5253d8bfc334114" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool IsObjectObstructedProxy</definition>
        <argsstring>(Object object, IsObjectObstructedCache cache, PlayerBase player)</argsstring>
        <name>IsObjectObstructedProxy</name>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref></type>
          <declname>cache</declname>
        </param>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1318" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1318" bodyend="1345"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aacf518f867d4886155205526bc4df13e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool IsObjectObstructedFilter</definition>
        <argsstring>(Object object, IsObjectObstructedCache cache, PlayerBase player)</argsstring>
        <name>IsObjectObstructedFilter</name>
        <param>
          <type><ref refid="class_object" kindref="compound">Object</ref></type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref></type>
          <declname>cache</declname>
        </param>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1347" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1347" bodyend="1372"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a2a34dc32bc8639774adc6f621a86581a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void DealAbsoluteDmg</definition>
        <argsstring>(ItemBase item, float dmg)</argsstring>
        <name>DealAbsoluteDmg</name>
        <param>
          <type><ref refid="class_item_base" kindref="compound">ItemBase</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>dmg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1375" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1375" bodyend="1378"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a75ca2def85fcb18080e4aa640852674d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static float Normalize</definition>
        <argsstring>(int val, int maxVal)</argsstring>
        <name>Normalize</name>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>maxVal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1381" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1381" bodyend="1390"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a3b6d758ed2613558bf00834476d5f859" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static float Bobbing</definition>
        <argsstring>(float period, float amplitude, float elapsedTime)</argsstring>
        <name>Bobbing</name>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>period</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>elapsedTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1392" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1392" bodyend="1406"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aee6c090c366e820b89de4299b3772c99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static float FModulus</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>FModulus</name>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1409" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1409" bodyend="1412"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1ac2c17ae77389f8e64e1227dbcb4d4662" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void RemoveSplint</definition>
        <argsstring>(PlayerBase player)</argsstring>
        <name>RemoveSplint</name>
        <param>
          <type><ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1414" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1414" bodyend="1465"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1af364bfd417f724a8bb6cb60822ae69a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void TeleportCheck</definition>
        <argsstring>(notnull PlayerBase player, notnull array&lt; ref array&lt; float &gt; &gt; safe_positions)</argsstring>
        <name>TeleportCheck</name>
        <param>
          <type>notnull <ref refid="class_player_base" kindref="compound">PlayerBase</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type>notnull <ref refid="classarray" kindref="compound">array</ref>&lt; ref <ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="classfloat" kindref="compound">float</ref> &gt; &gt;</type>
          <declname>safe_positions</declname>
        </param>
        <briefdescription>
<para>checks if we should teleport the player to a safe location and if so, performs the teleportation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1468" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1468" bodyend="1489"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a66299ceef38e1dbe60504064e4485f1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvector" kindref="compound">vector</ref></type>
        <definition>static vector GetClosestSafePos</definition>
        <argsstring>(vector to_pos, notnull array&lt; ref array&lt; float &gt; &gt; positions)</argsstring>
        <name>GetClosestSafePos</name>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>to_pos</declname>
        </param>
        <param>
          <type>notnull <ref refid="classarray" kindref="compound">array</ref>&lt; ref <ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="classfloat" kindref="compound">float</ref> &gt; &gt;</type>
          <declname>positions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1492" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1492" bodyend="1511"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a58485640eaad0e0ce93296739ff427b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void GenerateAINoiseAtPosition</definition>
        <argsstring>(vector position, float lifeTime, NoiseParams noiseParams)</argsstring>
        <name>GenerateAINoiseAtPosition</name>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classfloat" kindref="compound">float</ref></type>
          <declname>lifeTime</declname>
        </param>
        <param>
          <type><ref refid="_noise_8c_1aceda78b4f4625e1c9901f7bf4a7f5cf0" kindref="member">NoiseParams</ref></type>
          <declname>noiseParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1513" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1513" bodyend="1523"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a9d275a414cca2f66bf80dc67dd13e662" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static float GetMinValue</definition>
        <argsstring>(array&lt; float &gt; pArray)</argsstring>
        <name>GetMinValue</name>
        <param>
          <type><ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="classfloat" kindref="compound">float</ref> &gt;</type>
          <declname>pArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1525" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1525" bodyend="1537"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a60f4d664a5c006b8229ea80756e64faa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfloat" kindref="compound">float</ref></type>
        <definition>static float GetMaxValue</definition>
        <argsstring>(array&lt; float &gt; pArray)</argsstring>
        <name>GetMaxValue</name>
        <param>
          <type><ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="classfloat" kindref="compound">float</ref> &gt;</type>
          <declname>pArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1539" column="14" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1539" bodyend="1551"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a96942fd22337b27cdab9034b4a5f2d86" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classstring" kindref="compound">string</ref></type>
        <definition>static string GetItemDisplayName</definition>
        <argsstring>(string type)</argsstring>
        <name>GetItemDisplayName</name>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1553" column="15" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1553" bodyend="1556"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aa42d8ab22bb17e9a84adee2833d353ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbool" kindref="compound">bool</ref></type>
        <definition>static bool IsComponentInSelection</definition>
        <argsstring>(array&lt; Selection &gt; pSelection, string pCompName)</argsstring>
        <name>IsComponentInSelection</name>
        <param>
          <type><ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="class_selection" kindref="compound">Selection</ref> &gt;</type>
          <declname>pSelection</declname>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>pCompName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1558" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1558" bodyend="1575"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a330e8e9d9824258afb5cd88d1e614dc2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
        <definition>static int GetComponentIndex</definition>
        <argsstring>(array&lt; Selection &gt; pSelection, string pCompName)</argsstring>
        <name>GetComponentIndex</name>
        <param>
          <type><ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="class_selection" kindref="compound">Selection</ref> &gt;</type>
          <declname>pSelection</declname>
        </param>
        <param>
          <type><ref refid="classstring" kindref="compound">string</ref></type>
          <declname>pCompName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1577" column="12" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1577" bodyend="1594"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a45d459e6a38126e354498f0de010ddbe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void RemoveAllAttachedChildrenByTypename</definition>
        <argsstring>(notnull EntityAI parent, array&lt; typename &gt; listOfTypenames)</argsstring>
        <name>RemoveAllAttachedChildrenByTypename</name>
        <param>
          <type>notnull <ref refid="class_entity_a_i" kindref="compound">EntityAI</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="classarray" kindref="compound">array</ref>&lt; <ref refid="classtypename" kindref="compound">typename</ref> &gt;</type>
          <declname>listOfTypenames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>get rid of lookup for <ref refid="class_particle_source" kindref="compound">ParticleSource</ref> and others</para>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1596" column="13" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1596" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IsObjectObstructedCache</definition>
        <argsstring>(vector rayCastStart, int totalObjects)</argsstring>
        <name>IsObjectObstructedCache</name>
        <param>
          <type><ref refid="classvector" kindref="compound">vector</ref></type>
          <declname>rayCastStart</declname>
        </param>
        <param>
          <type><ref refid="_cache_object_8c_1a2dd3d4ba19a58e86cd16f281a6b82c8e" kindref="member">int</ref></type>
          <declname>totalObjects</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1663" column="6" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1663" bodyend="1667"/>
      </memberdef>
      <memberdef kind="function" id="_misc_gameplay_functions_8c_1aea2a8b1459158c87bd97b2541537126a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ClearCache</definition>
        <argsstring>()</argsstring>
        <name>ClearCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" line="1670" column="6" bodyfile="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c" bodystart="1670" bodyend="1679"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="class_replace_item_with_new_lambda" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_turn_item_into_item_lambda" kindref="compound">TurnItemIntoItemLambda</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda" kindref="compound">ReplaceItemWithNewLambda</ref></highlight></codeline>
<codeline lineno="2"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3" refid="class_replace_item_with_new_lambda_1a295f8b679d27c5290e3815174dec12d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_1a295f8b679d27c5290e3815174dec12d1" kindref="member">m_TransferAgents</ref>;</highlight></codeline>
<codeline lineno="4" refid="class_replace_item_with_new_lambda_1a43886a34883ab2f02c9415e8796ba408" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_1a43886a34883ab2f02c9415e8796ba408" kindref="member">m_TransferVariables</ref>;</highlight></codeline>
<codeline lineno="5" refid="class_replace_item_with_new_lambda_1a08cc096c7becdb5942b0cdcecf888b2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_1a08cc096c7becdb5942b0cdcecf888b2f" kindref="member">m_TransferHealth</ref>;</highlight></codeline>
<codeline lineno="6" refid="class_replace_item_with_new_lambda_1a164b28a72623e7a9d9ac0007854af93e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_1a164b28a72623e7a9d9ac0007854af93e" kindref="member">m_ExcludeQuantity</ref>;</highlight></codeline>
<codeline lineno="7" refid="class_replace_item_with_new_lambda_1a38dcb9cc8f53fcd4e42b5ebe2e0d67da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_1a38dcb9cc8f53fcd4e42b5ebe2e0d67da" kindref="member">m_quantity_override</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9" refid="class_replace_item_with_new_lambda_1a3788fb0495d89b1b6ab79734ed05a222" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_1a3788fb0495d89b1b6ab79734ed05a222" kindref="member">TurnItemIntoItemLambda</ref><sp/>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>old_item,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>new_item_type,<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetTransferParams();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14" refid="class_replace_item_with_new_lambda_1a5a82c52914b4d0b626ee7dbc5f21e8b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_1a5a82c52914b4d0b626ee7dbc5f21e8b5" kindref="member">SetTransferParams</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transfer_agents<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transfer_variables<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transfer_health<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclude_quantity<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>quantity_override<sp/>=<sp/>-1)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TransferAgents<sp/>=<sp/>transfer_agents;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TransferVariables<sp/>=<sp/>transfer_variables;<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TransferHealth<sp/>=<sp/>transfer_health;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ExcludeQuantity<sp/>=<sp/>exclude_quantity;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_quantity_override<sp/>=<sp/>quantity_override;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_replace_item_with_new_lambda_1a1d48a1851c89983438de8219a1f3b2d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_1a1d48a1851c89983438de8219a1f3b2d8" kindref="member">CopyOldPropertiesToNew</ref><sp/>(notnull<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>old_item,<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>new_item)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.CopyOldPropertiesToNew(old_item,<sp/>new_item);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_item)<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MiscGameplayFunctions.TransferItemProperties(old_item,<sp/>new_item,<sp/>m_TransferAgents,<sp/>m_TransferVariables,<sp/>m_TransferHealth,<sp/>m_ExcludeQuantity);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MiscGameplayFunctions.TransferInventory(old_item,<sp/>new_item,<sp/><ref refid="_misc_gameplay_functions_8c_1a02917914db83b7759e19cb7450c92354" kindref="member">m_Player</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//quantity<sp/>override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_item_base" kindref="compound">ItemBase</ref>.Cast(new_item)<sp/>&amp;&amp;<sp/>m_quantity_override<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_quantity_override<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga0ea2cf98823125deeeb28e8c03d3d756" kindref="member">Max</ref>(m_quantity_override,0);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref>.Cast(new_item).SetQuantity(m_quantity_override);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_debug" kindref="compound">Debug</ref>.<ref refid="class_debug_1a87dcfbb1acc79bc63ccc7af1476c913d" kindref="member">LogError</ref>(</highlight><highlight class="stringliteral">&quot;TurnItemIntoItemLambda:<sp/>failed<sp/>to<sp/>create<sp/>new<sp/>item&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;static&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="class_replace_item_with_new_lambda_1a2f7bf6c46d0b50a92311970ef2109e0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_1a2f7bf6c46d0b50a92311970ef2109e0d" kindref="member">VerifyItemTypeBySlotType</ref><sp/>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_NewLocation.GetType()<sp/>==<sp/><ref refid="_inventory_location_8c_1ad09049fb2b99c763369bfe6228aa81b3" kindref="member">InventoryLocationType</ref>.ATTACHMENT<sp/>&amp;&amp;<sp/>m_OldItem.ConfigIsExisting(</highlight><highlight class="stringliteral">&quot;ChangeIntoOnAttach&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">TStringArray</ref><sp/>inventory_slots<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group___enforce_1ga28845e68ed8329715e29aded7542ca15" kindref="member">TStringArray</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">TIntArray</ref><sp/>inventory_slots_idx<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group___enforce_1ga62db042ecba76039a4391153a4660c2c" kindref="member">TIntArray</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">TStringArray</ref><sp/>attach_types<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group___enforce_1ga28845e68ed8329715e29aded7542ca15" kindref="member">TStringArray</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_OldItem.ConfigGetTextArray(</highlight><highlight class="stringliteral">&quot;ChangeInventorySlot&quot;</highlight><highlight class="normal">,inventory_slots);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inventory_slots.Count()<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="comment">//is<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory_slots_idx.Insert(<ref refid="class_inventory_slots" kindref="compound">InventorySlots</ref>.<ref refid="class_inventory_slots_1afdfa2801842c135099e68d21a2e71590" kindref="member">GetSlotIdFromString</ref>(m_OldItem.ConfigGetString(</highlight><highlight class="stringliteral">&quot;ChangeInventorySlot&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attach_types.Insert(m_OldItem.ConfigGetString(</highlight><highlight class="stringliteral">&quot;ChangeIntoOnAttach&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//is<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory_slots_idx.Clear();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inventory_slots.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory_slots_idx.Insert(<ref refid="class_inventory_slots" kindref="compound">InventorySlots</ref>.<ref refid="class_inventory_slots_1afdfa2801842c135099e68d21a2e71590" kindref="member">GetSlotIdFromString</ref>(inventory_slots.Get(i)));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_OldItem.ConfigGetTextArray(</highlight><highlight class="stringliteral">&quot;ChangeIntoOnAttach&quot;</highlight><highlight class="normal">,attach_types);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>m_NewLocation.GetSlot();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>attach_types.Get(inventory_slots_idx.Find(idx));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_NewItemType<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="class_replace_item_with_new_lambda_1a68c6ee8a41392764d7161bf859287ae3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_1a68c6ee8a41392764d7161bf859287ae3" kindref="member">OnSuccess</ref><sp/>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>new_item)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.OnSuccess(new_item);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="_misc_gameplay_functions_8c_1a02917914db83b7759e19cb7450c92354" kindref="member">m_Player</ref><sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a02917914db83b7759e19cb7450c92354" kindref="member">m_Player</ref>.GetItemAccessor().OnItemInHandsChanged();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="_misc_gameplay_functions_8c_1aebe9921400688b4e3d37a409bc292077" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TurnItemIntoItemLambdaAnimSysNotifyLambda<sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="class_turn_item_into_item_lambda" kindref="compound">TurnItemIntoItemLambda</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93" refid="class_turn_item_into_item_lambda_1a192dda71b34f6f74eca1691530f36d4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_turn_item_into_item_lambda_1a192dda71b34f6f74eca1691530f36d4f" kindref="member">OnSuccess</ref><sp/>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>new_item)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.OnSuccess(new_item);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="_hand___events_8c_1a02917914db83b7759e19cb7450c92354" kindref="member">m_Player</ref><sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hand___events_8c_1a02917914db83b7759e19cb7450c92354" kindref="member">m_Player</ref>.GetItemAccessor().<ref refid="class_day_z_player_1a66261ee3ae7ac59b0db39a671393f496" kindref="member">OnItemInHandsChanged</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TurnItemIntoItemLambdaRestrainLambda<sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>TurnItemIntoItemLambdaAnimSysNotifyLambda</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_action_restrain_target_8c_1a0ace8db94c2306c900b5339f2a4eb665" kindref="member">OnSuccess</ref><sp/>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>new_item)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.OnSuccess(new_item);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hand___events_8c_1a02917914db83b7759e19cb7450c92354" kindref="member">m_Player</ref>.SetRestrained(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_drop_equip_and_destroy_root_lambda" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_drop_equip_and_destroy_root_lambda" kindref="compound">DropEquipAndDestroyRootLambda</ref><sp/>:<sp/><ref refid="class_replace_item_with_new_lambda_base" kindref="compound">ReplaceItemWithNewLambdaBase</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117" refid="class_drop_equip_and_destroy_root_lambda_1a9b79a60785283ef5c79349f7b53d961b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/><ref refid="class_drop_equip_and_destroy_root_lambda_1a9b79a60785283ef5c79349f7b53d961b" kindref="member">m_Player</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_drop_equip_and_destroy_root_lambda_1ac05246cfb7522143168da5ee5730fcd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_drop_equip_and_destroy_root_lambda_1ac05246cfb7522143168da5ee5730fcd7" kindref="member">DropEquipAndDestroyRootLambda</ref><sp/>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>old_item,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>new_item_type,<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_drop_equip_and_destroy_root_lambda_1a9b79a60785283ef5c79349f7b53d961b" kindref="member">m_Player</ref><sp/>=<sp/>player;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="class_drop_equip_and_destroy_root_lambda_1a0db99315f11e121e863151772b426803" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_drop_equip_and_destroy_root_lambda_1a0db99315f11e121e863151772b426803" kindref="member">CopyOldPropertiesToNew</ref><sp/>(notnull<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>old_item,<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>new_item)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.CopyOldPropertiesToNew(old_item,<sp/>new_item);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref><sp/>understash_src<sp/>=<sp/><ref refid="class_replace_item_with_new_lambda_base_1a0be66c2892ca2d873f2376fac3011a77" kindref="member">m_NewLocation</ref>;<sp/></highlight><highlight class="comment">//<sp/>m_NewLocation<sp/>is<sp/>a<sp/>backup<sp/>of<sp/>original<sp/>old_item&apos;s<sp/>src<sp/>before<sp/>the<sp/>operation<sp/>started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;EntityAI&gt;</ref><sp/>children<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;EntityAI&gt;</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_item.GetInventory().EnumerateInventory(<ref refid="gameplay_8c_1ac5ade7a41ab88bd2906cf0b55a32492e" kindref="member">InventoryTraversalType</ref>.LEVELORDER,<sp/>children);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>children.Count();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>child<sp/>=<sp/>children.Get(i);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref><sp/>child_src<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child.GetInventory().GetCurrentInventoryLocation(child_src);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref><sp/>child_dst<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//@TODO:<sp/>modify<sp/>_dst<sp/>with<sp/>place<sp/>on<sp/>gnd?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>m4[4];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1gad69368d7b5e1fcc6c3c8517d43adb443" kindref="member">MatrixIdentity4</ref>(m4);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_game_inventory" kindref="compound">GameInventory</ref>.<ref refid="class_game_inventory_1a6ac0c52c26ebdbd585cb7b832c5c7d81" kindref="member">PrepareDropEntityPos</ref>(old_item,<sp/>child,<sp/>m4,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_dst.<ref refid="class_inventory_location_1aaa08a01038297771eba7c209c882d551" kindref="member">SetGround</ref>(child,m4);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_drop_equip_and_destroy_root_lambda_1a9b79a60785283ef5c79349f7b53d961b" kindref="member">m_Player</ref>.LocalTakeToDst(child_src,<sp/>child_dst);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1ac835f69e4101541c7ead031d412f10ab" kindref="member">RemoteObjectTreeCreate</ref>(child);<sp/></highlight><highlight class="comment">//<sp/>this<sp/>forces<sp/>server<sp/>to<sp/>send<sp/>CreateVehicle<sp/>Message<sp/>to<sp/>client.<sp/>This<sp/>is<sp/>needed<sp/>for<sp/>preserving<sp/>the<sp/>appearance<sp/>of<sp/>network<sp/>operations<sp/>on<sp/>client<sp/>(so<sp/>that<sp/>DeleteObject(old)<sp/>arrives<sp/>before<sp/>CreateVehicle(new)).<sp/>@NOTE:<sp/>this<sp/>does<sp/>not<sp/>delete<sp/>the<sp/>object<sp/>on<sp/>server,<sp/>only<sp/>it&apos;s<sp/>network<sp/>representation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_move_equip_to_existing_item_and_destroy_old_root_lambda" kindref="compound">MoveEquipToExistingItemAndDestroyOldRootLambda</ref><sp/>:<sp/><ref refid="class_replace_item_with_new_lambda_base" kindref="compound">ReplaceItemWithNewLambdaBase</ref></highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/><ref refid="_hand___events_8c_1a02917914db83b7759e19cb7450c92354" kindref="member">m_Player</ref>;</highlight></codeline>
<codeline lineno="166" refid="_misc_gameplay_functions_8c_1a54ffdf3b7d8605e5633e49f38f5e3d79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a54ffdf3b7d8605e5633e49f38f5e3d79" kindref="member">m_NewItem</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="_misc_gameplay_functions_8c_1a6c4096e5ce6e4e168e9f61c2a5c56ebb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_move_equip_to_existing_item_and_destroy_old_root_lambda" kindref="compound">MoveEquipToExistingItemAndDestroyOldRootLambda</ref><sp/>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>old_item,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>new_item_type,<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player,<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>new_item)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hand___events_8c_1a02917914db83b7759e19cb7450c92354" kindref="member">m_Player</ref><sp/>=<sp/>player;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a54ffdf3b7d8605e5633e49f38f5e3d79" kindref="member">m_NewItem</ref><sp/>=<sp/>new_item;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_item_type<sp/>!=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.<ref refid="_hand___states_8c_1ac3e3346bc6f9bb504e43495424c91a51" kindref="member">Empty</ref>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;MoveEquipAndDestroyRootLambda<sp/>expects<sp/>new_item_type<sp/>to<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176" refid="_misc_gameplay_functions_8c_1a00423fd87c4a344415176b98e6805c5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_base_1a759f9da4849f27c72a5a9e18928670a3" kindref="member">RemoveNetworkObjectInfo</ref><sp/>()</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.RemoveNetworkObjectInfo();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1a6d61e518902354e4427f2c8a26cac7cf" kindref="member">RemoteObjectTreeDelete</ref>(<ref refid="_misc_gameplay_functions_8c_1a54ffdf3b7d8605e5633e49f38f5e3d79" kindref="member">m_NewItem</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181" refid="_misc_gameplay_functions_8c_1aeb57a9812cb3e4c973362cf3564a1a8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_base_1aa87e8e4cc88e0386a538c67735b6df45" kindref="member">UndoRemoveNetworkObjectInfo</ref><sp/>()</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.UndoRemoveNetworkObjectInfo();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1ac835f69e4101541c7ead031d412f10ab" kindref="member">RemoteObjectTreeCreate</ref>(<ref refid="_misc_gameplay_functions_8c_1a54ffdf3b7d8605e5633e49f38f5e3d79" kindref="member">m_NewItem</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_base_1ad27d8c6400cc4753e747905e49194804" kindref="member">CopyOldPropertiesToNew</ref><sp/>(notnull<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>old_item,<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>new_item)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@NOTE:<sp/>new_item<sp/>is<sp/>NULL,<sp/>this<sp/>lambda<sp/>does<sp/>not<sp/>create<sp/>new<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.CopyOldPropertiesToNew(old_item,<sp/>new_item);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MiscGameplayFunctions.TransferInventory(old_item,<sp/><ref refid="_misc_gameplay_functions_8c_1a54ffdf3b7d8605e5633e49f38f5e3d79" kindref="member">m_NewItem</ref>,<sp/><ref refid="_hand___events_8c_1a02917914db83b7759e19cb7450c92354" kindref="member">m_Player</ref>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195" refid="_misc_gameplay_functions_8c_1a9335d78473ee12bb035f00105445fcc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_replace_item_with_new_lambda_base_1afb1a52e3ad5d276f7acc7cf4cf57a6f3" kindref="member">CreateNetworkObjectInfo</ref><sp/>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>new_item)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.CreateNetworkObjectInfo(new_item);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1ac835f69e4101541c7ead031d412f10ab" kindref="member">RemoteObjectTreeCreate</ref>(<ref refid="_misc_gameplay_functions_8c_1a54ffdf3b7d8605e5633e49f38f5e3d79" kindref="member">m_NewItem</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112" kindref="member">TransferInventoryResult</ref></highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204" refid="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112a06d32f047358de4e6a30c28046f4688e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112a06d32f047358de4e6a30c28046f4688e" kindref="member">Ok</ref>,<sp/><ref refid="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112a1d9cf62f8a347bdabe7edf32a764ef63" kindref="member">DroppedSome</ref></highlight></codeline>
<codeline lineno="205" refid="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112a1d9cf62f8a347bdabe7edf32a764ef63" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="_misc_gameplay_functions_8c_1a415e83ef6b8073d37ad4f88fba082421" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a415e83ef6b8073d37ad4f88fba082421" kindref="member">ThrowEntityFlags</ref></highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1ac157bdf0b85a40d2619cbc8bc1ae5fe2" kindref="member">NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a30b0475143a7f470e8688d1849a1c483" kindref="member">SPLIT</ref><sp/>=<sp/>1,<sp/></highlight><highlight class="comment">//&lt;<sp/>Splits<sp/>the<sp/>item<sp/>when<sp/>it<sp/>has<sp/>quantity,<sp/>recommended<sp/>to<sp/>use<sp/>when<sp/>called<sp/>on<sp/>an<sp/>attachment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MiscGameplayFunctions</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a5f319b815605523bfd41094745c400bf" kindref="member">Truncate</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decimals<sp/>=<sp/>2)</highlight></codeline>
<codeline lineno="217" refid="_misc_gameplay_functions_8c_1ac157bdf0b85a40d2619cbc8bc1ae5fe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218" refid="_misc_gameplay_functions_8c_1a30b0475143a7f470e8688d1849a1c483" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multiplier<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1gab5e095de61335667a5fc38d9d538d89f" kindref="member">Pow</ref>(10,decimals);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga939cca08ae6c7facc9293f2dbce3def5" kindref="member">Clamp</ref>(<ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga16e805acd55f171477bd5ca7dbaa5a18" kindref="member">Floor</ref>(value<sp/>*<sp/>multiplier),</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.<ref refid="classfloat_1ab022ffac8e11da5c6c5d49307e8ebc20" kindref="member">LOWEST</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.<ref refid="classfloat_1a984911aa6072c232bb876de8ed8904af" kindref="member">MAX</ref>)<sp/>/<sp/>multiplier;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222" refid="_misc_gameplay_functions_8c_1a89b38cd7a067e962872082a5d5831cea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a89b38cd7a067e962872082a5d5831cea" kindref="member">TruncateToS</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decimals<sp/>=<sp/>2)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a5f319b815605523bfd41094745c400bf" kindref="member">Truncate</ref>(value,<sp/>decimals).ToString();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227" refid="_misc_gameplay_functions_8c_1a1492769687dc6e34c52cdaed1dd8f903" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a1492769687dc6e34c52cdaed1dd8f903" kindref="member">TruncateVec</ref>(<ref refid="classvector" kindref="compound">vector</ref><sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decimals<sp/>=<sp/>2)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multiplier<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1gab5e095de61335667a5fc38d9d538d89f" kindref="member">Pow</ref>(10,decimals);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga939cca08ae6c7facc9293f2dbce3def5" kindref="member">Clamp</ref>(<ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga16e805acd55f171477bd5ca7dbaa5a18" kindref="member">Floor</ref>(value[0]<sp/>*<sp/>multiplier),</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.<ref refid="classfloat_1ab022ffac8e11da5c6c5d49307e8ebc20" kindref="member">LOWEST</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.<ref refid="classfloat_1a984911aa6072c232bb876de8ed8904af" kindref="member">MAX</ref>)<sp/>/<sp/>multiplier;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v2<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga939cca08ae6c7facc9293f2dbce3def5" kindref="member">Clamp</ref>(<ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga16e805acd55f171477bd5ca7dbaa5a18" kindref="member">Floor</ref>(value[1]<sp/>*<sp/>multiplier),</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.<ref refid="classfloat_1ab022ffac8e11da5c6c5d49307e8ebc20" kindref="member">LOWEST</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.<ref refid="classfloat_1a984911aa6072c232bb876de8ed8904af" kindref="member">MAX</ref>)<sp/>/<sp/>multiplier;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v3<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga939cca08ae6c7facc9293f2dbce3def5" kindref="member">Clamp</ref>(<ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga16e805acd55f171477bd5ca7dbaa5a18" kindref="member">Floor</ref>(value[2]<sp/>*<sp/>multiplier),</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.<ref refid="classfloat_1ab022ffac8e11da5c6c5d49307e8ebc20" kindref="member">LOWEST</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.<ref refid="classfloat_1a984911aa6072c232bb876de8ed8904af" kindref="member">MAX</ref>)<sp/>/<sp/>multiplier;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___math3_d_a_p_i_1ga5bd1deb1c96276d94eeec6fe40955c41" kindref="member">Vector</ref>(v1,v2,v3);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236" refid="_misc_gameplay_functions_8c_1a77d0f85ea6b9b1e27da083cde0e9ba8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a77d0f85ea6b9b1e27da083cde0e9ba8f" kindref="member">TruncateVecToS</ref>(<ref refid="classvector" kindref="compound">vector</ref><sp/>value,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decimals<sp/>=<sp/>2,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>delimiter<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MiscGameplayFunctions.TruncateToS(value[0],decimals)<sp/>+<sp/>delimiter<sp/>+<sp/>MiscGameplayFunctions.TruncateToS(value[1],decimals)<sp/>+delimiter<sp/>+<sp/>MiscGameplayFunctions.TruncateToS(value[2],decimals));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241" refid="_misc_gameplay_functions_8c_1aa593d6f5a6e96cf79da3e0f890ec4a4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_item_base_8c_1a7999a60053c3f0786736bf5f9bcc7deb" kindref="member">GetColorString</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.<ref refid="group___strings_1gaec7e49a1dcfd0bc429834f29bc0d35c1" kindref="member">Format</ref>(</highlight><highlight class="stringliteral">&quot;#(argb,8,8,3)color(%1,CO)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;%1,%2,%3,%4&quot;</highlight><highlight class="normal">,<sp/>r,<sp/>g,<sp/>b,<sp/>a));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247" refid="_misc_gameplay_functions_8c_1ad4a290a67dc415b16d59748f5d2092a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ad4a290a67dc415b16d59748f5d2092a0" kindref="member">ValueToBar</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>bar<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[----------]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>mark<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>bar.<ref refid="group___strings_1ga012b133f69754b6a99ba29ce5f11c348" kindref="member">Length</ref>()<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>index<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga1ac33c7be3c1e52ae6b70fe58c78266c" kindref="member">Lerp</ref>(0,length,<sp/>value);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga7a63fd1bc9f0c95f8021d8ece1b7500f" kindref="member">Round</ref>(index);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga939cca08ae6c7facc9293f2dbce3def5" kindref="member">Clamp</ref>(index,0,length);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ae2ad7e8a734c42bbf2952f4517e7e7cb" kindref="member">InsertAtPos</ref>(bar,mark,index);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258" refid="_misc_gameplay_functions_8c_1ae2ad7e8a734c42bbf2952f4517e7e7cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ae2ad7e8a734c42bbf2952f4517e7e7cb" kindref="member">InsertAtPos</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>base,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>insert,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length_first<sp/>=<sp/>pos+1;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length_base<sp/>=<sp/>base.<ref refid="group___strings_1ga012b133f69754b6a99ba29ce5f11c348" kindref="member">Length</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length_second<sp/>=<sp/>length_base<sp/>-<sp/>length_first;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>base.<ref refid="group___strings_1gaa7a206e405d2c58f7390a145ee45523d" kindref="member">Substring</ref>(0,length_first);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>second<sp/>=<sp/>base.<ref refid="group___strings_1gaa7a206e405d2c58f7390a145ee45523d" kindref="member">Substring</ref>(pos+1,length_second);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first<sp/>+<sp/>insert<sp/>+<sp/>second;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269" refid="_misc_gameplay_functions_8c_1ae5f999f23774c37b15fb0f222928e27d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ae5f999f23774c37b15fb0f222928e27d" kindref="member">TransferItemProperties</ref>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>source,<sp/>notnull<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>target,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transfer_agents<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transfer_variables<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transfer_health<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclude_quantity<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>target_ib<sp/>=<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref>.Cast(target);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>source_ib<sp/>=<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref>.Cast(source);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>transfer_agents<sp/>)<sp/>target_ib.TransferAgents(<sp/>source.GetAgents()<sp/>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>transfer_variables<sp/>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MiscGameplayFunctions.TransferItemVariables(source_ib,<sp/>target_ib,<sp/>exclude_quantity);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().IsClient())</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(<sp/>transfer_health<sp/>)<sp/>target_ib.SetHealth(&quot;&quot;,<sp/>&quot;&quot;,<sp/>source.GetHealth(&quot;&quot;,&quot;&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_ib.SetHealth(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>source.GetHealth01(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>*<sp/>target_ib.GetMaxHealth(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="_misc_gameplay_functions_8c_1a316835d870f8c0fec210de50b91c6c50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a316835d870f8c0fec210de50b91c6c50" kindref="member">TransferItemVariables</ref>(<ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>source,<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>target,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclude_quantity<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.TransferVariablesFloat(<sp/>source.GetVariablesFloat()<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//target.TransferVariablesString(<sp/>source.GetVariablesString()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>exclude_quantity<sp/>)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.RemoveItemVariable(<ref refid="group___item_variables_1gac367e727c08e9c59aff095a06d3c5207" kindref="member">VARIABLE_QUANTITY</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>source.IsMagazine()<sp/>&amp;&amp;<sp/>target.IsMagazine()<sp/>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Magazine<sp/>source_mag<sp/>=<sp/>Magazine.Cast(source);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Magazine<sp/>target_mag<sp/>=<sp/>Magazine.Cast(target);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_mag.ServerSetAmmoCount(<sp/>source_mag.GetAmmoCount()<sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>source.IsWeapon()<sp/>&amp;&amp;<sp/>target.IsWeapon()<sp/>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref><sp/>source_wpn<sp/>=<sp/><ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref>.Cast(source);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref><sp/>target_wpn<sp/>=<sp/><ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref>.Cast(target);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_wpn.CopyWeaponStateFrom(source_wpn);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>source.HasEnergyManager()<sp/>&amp;&amp;<sp/>target.HasEnergyManager()<sp/>)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_component_energy_manager" kindref="compound">ComponentEnergyManager</ref><sp/>ems<sp/>=<sp/>source.GetCompEM();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_component_energy_manager" kindref="compound">ComponentEnergyManager</ref><sp/>emt<sp/>=<sp/>target.GetCompEM();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emt.<ref refid="class_component_energy_manager_1aa949a780d8573da21f042a431278c862" kindref="member">SetEnergy</ref>(ems.<ref refid="class_component_energy_manager_1a78db51ac9a271ddbec426f23b7df6687" kindref="member">GetEnergy</ref>());</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ems.<ref refid="class_component_energy_manager_1af90a8bc8fac264bd87a55892bc874388" kindref="member">IsSwitchedOn</ref>())</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emt.<ref refid="class_component_energy_manager_1a0dda726b317d9c0cda60d62a08787165" kindref="member">SwitchOn</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>source.<ref refid="class_item_base_1a88df796b13b3187b5c9514d50fef4792" kindref="member">CanDecay</ref>()<sp/>&amp;&amp;<sp/>target.<ref refid="class_item_base_1a88df796b13b3187b5c9514d50fef4792" kindref="member">CanDecay</ref>()<sp/>)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_edible___base" kindref="compound">Edible_Base</ref><sp/>source_edb<sp/>=<sp/><ref refid="class_edible___base" kindref="compound">Edible_Base</ref>.Cast(source);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_edible___base" kindref="compound">Edible_Base</ref><sp/>target_edb<sp/>=<sp/><ref refid="class_edible___base" kindref="compound">Edible_Base</ref>.Cast(target);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_edb.TransferFoodStage(source_edb);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="_misc_gameplay_functions_8c_1a941456583d5142ea1b915dbaa8fb5b9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112" kindref="member">TransferInventoryResult</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a941456583d5142ea1b915dbaa8fb5b9a" kindref="member">TransferInventory</ref>(<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>sourceItem,<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>targetItem,<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112" kindref="member">TransferInventoryResult</ref><sp/>result<sp/>=<sp/><ref refid="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112" kindref="member">TransferInventoryResult</ref>.Ok;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;EntityAI&gt;</ref><sp/>children<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;EntityAI&gt;</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceItem.GetInventory().EnumerateInventory(<ref refid="gameplay_8c_1ac5ade7a41ab88bd2906cf0b55a32492e" kindref="member">InventoryTraversalType</ref>.LEVELORDER,<sp/>children);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>children.Count();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>child<sp/>=<sp/>children.Get(i);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref><sp/>child_src<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child.GetInventory().GetCurrentInventoryLocation(<sp/>child_src<sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref><sp/>child_dst<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_dst.<ref refid="class_inventory_location_1a9ce83b1d502ec70e454d6c7a670e4199" kindref="member">Copy</ref>(<sp/>child_src<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_dst.<ref refid="class_inventory_location_1a6c9db08c00bcec193b458afc4f238cee" kindref="member">SetParent</ref>(<sp/>targetItem<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_game_inventory" kindref="compound">GameInventory</ref>.<ref refid="class_game_inventory_1a6049642477d6291973d76cfa4a6da4a8" kindref="member">LocationCanAddEntity</ref>(child_dst))</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>move<sp/>it<sp/>to<sp/>the<sp/>same<sp/>exact<sp/>place<sp/>in<sp/>dst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetItem.GetInventory().TakeToDst(<ref refid="3___game_2_systems_2_inventory_2_inventory_8c_1a5073c77c5d68882860f688a9fc4cba4d" kindref="member">InventoryMode</ref>.LOCAL,<sp/>child_src,<sp/>child_dst);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>or<sp/>drop<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(drop)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player.LocalDropEntity(child);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1ac835f69e4101541c7ead031d412f10ab" kindref="member">RemoteObjectTreeCreate</ref>(child);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="_misc_gameplay_functions_8c_1a1918367fffd59ebabe7c11069db2e112" kindref="member">TransferInventoryResult</ref>.DroppedSome;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372" refid="_misc_gameplay_functions_8c_1ad343b098125d6077335418af6d548023" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ad343b098125d6077335418af6d548023" kindref="member">UnlimitedAmmoDebugCheck</ref>(<ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref><sp/>weapon)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref>.GetDebugActionsMask()<sp/>&amp;<sp/><ref refid="_plugin_diag_menu_8c_1a4d452a0b8b1cbbea4f29aac39d4aa529" kindref="member">DebugActionType</ref>.UNLIMITED_AMMO<sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Magazine<sp/>magazine;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().IsServer()<sp/>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magazine<sp/>=<sp/>weapon.GetMagazine(weapon.GetCurrentMuzzle());</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magazine)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magazine.GetAmmoCount()<sp/>&lt;=<sp/>5)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magazine.ServerSetAmmoMax();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magazine<sp/>=<sp/>weapon.GetMagazine(weapon.GetCurrentMuzzle());</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magazine)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magazine.GetAmmoCount()<sp/>&lt;=<sp/>5)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magazine.LocalSetAmmoMax();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="407" refid="_misc_gameplay_functions_8c_1af4a88433ed78a22c1df27cf14cf64f2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1af4a88433ed78a22c1df27cf14cf64f2c" kindref="member">TurnItemIntoItem</ref><sp/>(notnull<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>old_item,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>new_item_type,<sp/>notnull<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a4bbeb81c586a0eb87d038d4243946833" kindref="member">TurnItemIntoItemEx</ref>(player,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_turn_item_into_item_lambda" kindref="compound">TurnItemIntoItemLambda</ref>(old_item,<sp/>new_item_type,<sp/>player));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="412" refid="_misc_gameplay_functions_8c_1a4bbeb81c586a0eb87d038d4243946833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a4bbeb81c586a0eb87d038d4243946833" kindref="member">TurnItemIntoItemEx</ref><sp/>(notnull<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player,<sp/><ref refid="class_replace_item_with_new_lambda_base" kindref="compound">ReplaceItemWithNewLambdaBase</ref><sp/>lambda)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player.ServerReplaceItemWithNew(lambda);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="_misc_gameplay_functions_8c_1a6ca77c3b0e70726afc07cbfacf3a1e6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a6ca77c3b0e70726afc07cbfacf3a1e6d" kindref="member">TurnItemInHandsIntoItem</ref><sp/>(notnull<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>old_item,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>new_item_type,<sp/>notnull<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a936f9082e63623f63e33c65dcbedb5dc" kindref="member">TurnItemInHandsIntoItemEx</ref>(player,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_turn_item_into_item_lambda" kindref="compound">TurnItemIntoItemLambda</ref>(old_item,<sp/>new_item_type,<sp/>player));</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="422" refid="_misc_gameplay_functions_8c_1a936f9082e63623f63e33c65dcbedb5dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a936f9082e63623f63e33c65dcbedb5dc" kindref="member">TurnItemInHandsIntoItemEx</ref><sp/>(notnull<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player,<sp/><ref refid="class_replace_item_with_new_lambda_base" kindref="compound">ReplaceItemWithNewLambdaBase</ref><sp/>lambda)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player.ServerReplaceItemInHandsWithNew(lambda);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="_misc_gameplay_functions_8c_1afbb00a22568dbab448e7edffd72cc052" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;ItemBase&gt;</ref><sp/><ref refid="_misc_gameplay_functions_8c_1afbb00a22568dbab448e7edffd72cc052" kindref="member">CreateItemBasePiles</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>item_name,<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>ground_position,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>quantity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>health,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>floaty_spawn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;ItemBase&gt;</ref><sp/>item_piles;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_stack_size;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>pile;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_piles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;ItemBase&gt;</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_stack_size<sp/>=<sp/><ref refid="_day_z_game_8c_1a5b4f7935d7cbb89f7a4610452d633707" kindref="member">g_Game</ref>.ConfigGetInt(</highlight><highlight class="stringliteral">&quot;cfgVehicles<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>item_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>varStackMax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>max_stack_size<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_stack_size<sp/>=<sp/><ref refid="_day_z_game_8c_1a5b4f7935d7cbb89f7a4610452d633707" kindref="member">g_Game</ref>.ConfigGetInt(</highlight><highlight class="stringliteral">&quot;cfgVehicles<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>item_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>varQuantityMax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>max_stack_size<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_stack_size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>full_piles_count<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga16e805acd55f171477bd5ca7dbaa5a18" kindref="member">Floor</ref>(quantity/max_stack_size);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rest<sp/>=<sp/>quantity<sp/>-<sp/>(full_piles_count*max_stack_size);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>full_piles_count;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(floaty_spawn)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile<sp/>=<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref>.Cast(<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1aa43d24a500987d3a093913ad7551dff8" kindref="member">CreateObjectEx</ref>(item_name,<sp/>ground_position,<sp/><ref refid="_central_economy_8c_1af301ac365e91a0c639affaaf7d79d169" kindref="member">ECE_CREATEPHYSICS</ref>|<ref refid="_central_economy_8c_1a62ceb6c3dfa0a5ab0ea09985591162e5" kindref="member">ECE_UPDATEPATHGRAPH</ref>));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile<sp/>=<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref>.Cast(<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1aa43d24a500987d3a093913ad7551dff8" kindref="member">CreateObjectEx</ref>(item_name,<sp/>ground_position,<sp/><ref refid="_central_economy_8c_1a4389063907bd8acede7114e3887d6102" kindref="member">ECE_PLACE_ON_SURFACE</ref>));</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile.SetQuantity(max_stack_size);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile.SetHealth(health);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_piles.Insert(pile);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rest<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(floaty_spawn)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile<sp/>=<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref>.Cast(<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1aa43d24a500987d3a093913ad7551dff8" kindref="member">CreateObjectEx</ref>(item_name,<sp/>ground_position,<sp/><ref refid="_central_economy_8c_1af301ac365e91a0c639affaaf7d79d169" kindref="member">ECE_CREATEPHYSICS</ref>|<ref refid="_central_economy_8c_1a62ceb6c3dfa0a5ab0ea09985591162e5" kindref="member">ECE_UPDATEPATHGRAPH</ref>));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile<sp/>=<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref>.Cast(<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1aa43d24a500987d3a093913ad7551dff8" kindref="member">CreateObjectEx</ref>(item_name,<sp/>ground_position,<sp/><ref refid="_central_economy_8c_1a4389063907bd8acede7114e3887d6102" kindref="member">ECE_PLACE_ON_SURFACE</ref>));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile.SetQuantity(rest);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile.SetHealth(health);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_piles.Insert(pile);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item_piles;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="467" refid="_misc_gameplay_functions_8c_1af1f8bed0e1997df97d56fa485f187b12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;Magazine&gt;</ref><sp/><ref refid="_misc_gameplay_functions_8c_1af1f8bed0e1997df97d56fa485f187b12" kindref="member">CreateMagazinePiles</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>item_name,<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>ground_position,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>quantity,<sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>health<sp/>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;Magazine&gt;</ref><sp/>items;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stack_size;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Magazine<sp/>pile;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;Magazine&gt;</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_size<sp/>=<sp/><ref refid="_day_z_game_8c_1a5b4f7935d7cbb89f7a4610452d633707" kindref="member">g_Game</ref>.ConfigGetInt(</highlight><highlight class="stringliteral">&quot;cfgMagazines<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>item_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>piles_count<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga16e805acd55f171477bd5ca7dbaa5a18" kindref="member">Floor</ref>(quantity/stack_size);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rest<sp/>=<sp/>quantity<sp/>-<sp/>(piles_count*stack_size);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>piles_count;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile<sp/>=<sp/>Magazine.Cast(<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1aa43d24a500987d3a093913ad7551dff8" kindref="member">CreateObjectEx</ref>(item_name,<sp/>ground_position,<sp/><ref refid="_central_economy_8c_1a4389063907bd8acede7114e3887d6102" kindref="member">ECE_PLACE_ON_SURFACE</ref>));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile.ServerSetAmmoCount(stack_size);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items.Insert(pile);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rest<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile<sp/>=<sp/>Magazine.Cast(<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1aa43d24a500987d3a093913ad7551dff8" kindref="member">CreateObjectEx</ref>(item_name,<sp/>ground_position,<sp/><ref refid="_central_economy_8c_1a4389063907bd8acede7114e3887d6102" kindref="member">ECE_PLACE_ON_SURFACE</ref>));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile.ServerSetAmmoCount(rest);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items.Insert(pile);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="494" refid="_misc_gameplay_functions_8c_1a998ae06eb20fbde38d8ca7b5920167f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;Magazine&gt;</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a998ae06eb20fbde38d8ca7b5920167f1" kindref="member">CreateMagazinePilesFromBullet</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>bullet_type,<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>ground_position,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>quantity,<sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>health<sp/>)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;Magazine&gt;</ref><sp/>items;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;Magazine&gt;</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stack_size;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Magazine<sp/>pile;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>item_name;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="_day_z_game_8c_1a5b4f7935d7cbb89f7a4610452d633707" kindref="member">g_Game</ref>.ConfigGetText(</highlight><highlight class="stringliteral">&quot;cfgAmmo<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>bullet_type<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>spawnPileType&quot;</highlight><highlight class="normal">,<sp/>item_name)<sp/>)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_size<sp/>=<sp/><ref refid="_day_z_game_8c_1a5b4f7935d7cbb89f7a4610452d633707" kindref="member">g_Game</ref>.ConfigGetInt(</highlight><highlight class="stringliteral">&quot;cfgMagazines<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>item_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stack_size<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>piles_count<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga16e805acd55f171477bd5ca7dbaa5a18" kindref="member">Floor</ref>(quantity/stack_size);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rest<sp/>=<sp/>quantity<sp/>-<sp/>(piles_count*stack_size);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>piles_count;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile<sp/>=<sp/>Magazine.Cast(<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1aa43d24a500987d3a093913ad7551dff8" kindref="member">CreateObjectEx</ref>(item_name,<sp/>ground_position,<sp/><ref refid="_central_economy_8c_1a4389063907bd8acede7114e3887d6102" kindref="member">ECE_PLACE_ON_SURFACE</ref>));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile.ServerSetAmmoCount(stack_size);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items.Insert(pile);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rest<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile<sp/>=<sp/>Magazine.Cast(<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1aa43d24a500987d3a093913ad7551dff8" kindref="member">CreateObjectEx</ref>(item_name,<sp/>ground_position,<sp/><ref refid="_central_economy_8c_1a4389063907bd8acede7114e3887d6102" kindref="member">ECE_PLACE_ON_SURFACE</ref>));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pile.ServerSetAmmoCount(rest);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items.Insert(pile);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527" refid="_misc_gameplay_functions_8c_1a682679428a00610b5b9da60295963c9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a682679428a00610b5b9da60295963c9e" kindref="member">GetHealthLevelForAmmo</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_option_selector_multistate_8c_1a6e64693a765afc8a0b5442acfb2ba262" kindref="member">class_name</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>health)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>health_normalized<sp/>=<sp/>health<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>config_path<sp/>=<sp/><ref refid="group___menu_i_d_1gade71505908fa8ae2b1f0da309770c68a" kindref="member">CFG_WEAPONSPATH</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="_option_selector_multistate_8c_1a6e64693a765afc8a0b5442acfb2ba262" kindref="member">class_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>DamageSystem&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>GlobalHealth&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>healthLabels&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cached_objects_arrays" kindref="compound">CachedObjectsArrays</ref>.<ref refid="class_cached_objects_arrays_1ae39639c5b838ac3d868fb9032432182f" kindref="member">ARRAY_FLOAT</ref>.Clear();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1ad96bd9fbc89b5a99ae2b7506080f4f35" kindref="member">ConfigGetFloatArray</ref>(config_path,<sp/><ref refid="class_cached_objects_arrays" kindref="compound">CachedObjectsArrays</ref>.<ref refid="class_cached_objects_arrays_1ae39639c5b838ac3d868fb9032432182f" kindref="member">ARRAY_FLOAT</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_cached_objects_arrays" kindref="compound">CachedObjectsArrays</ref>.<ref refid="class_cached_objects_arrays_1ae39639c5b838ac3d868fb9032432182f" kindref="member">ARRAY_FLOAT</ref>.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>health_normalized<sp/>&gt;=<sp/><ref refid="class_cached_objects_arrays" kindref="compound">CachedObjectsArrays</ref>.<ref refid="class_cached_objects_arrays_1ae39639c5b838ac3d868fb9032432182f" kindref="member">ARRAY_FLOAT</ref>.Get(i)<sp/>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="543" refid="_misc_gameplay_functions_8c_1a71e7f877f165568041b8039ea7a31ce8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a71e7f877f165568041b8039ea7a31ce8" kindref="member">GetTypeMaxGlobalHealth</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_option_selector_multistate_8c_1a6e64693a765afc8a0b5442acfb2ba262" kindref="member">class_name</ref>,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>health_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Health&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_health;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>cfg_path;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().ConfigIsExisting(<ref refid="group___menu_i_d_1ga4eefa6610d914e19744cb7e377171479" kindref="member">CFG_VEHICLESPATH</ref>+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+<ref refid="_option_selector_multistate_8c_1a6e64693a765afc8a0b5442acfb2ba262" kindref="member">class_name</ref>)<sp/>)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_path<sp/>=<sp/><ref refid="group___menu_i_d_1ga4eefa6610d914e19744cb7e377171479" kindref="member">CFG_VEHICLESPATH</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().ConfigIsExisting(<ref refid="group___menu_i_d_1gade71505908fa8ae2b1f0da309770c68a" kindref="member">CFG_WEAPONSPATH</ref>+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+<ref refid="_option_selector_multistate_8c_1a6e64693a765afc8a0b5442acfb2ba262" kindref="member">class_name</ref>)<sp/>)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_path<sp/>=<sp/><ref refid="group___menu_i_d_1gade71505908fa8ae2b1f0da309770c68a" kindref="member">CFG_WEAPONSPATH</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().ConfigIsExisting(<ref refid="group___menu_i_d_1gaffa280014cd9af91abe74b767cf2a45b" kindref="member">CFG_MAGAZINESPATH</ref>+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+<ref refid="_option_selector_multistate_8c_1a6e64693a765afc8a0b5442acfb2ba262" kindref="member">class_name</ref>)<sp/>)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_path<sp/>=<sp/><ref refid="group___menu_i_d_1gaffa280014cd9af91abe74b767cf2a45b" kindref="member">CFG_MAGAZINESPATH</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_path<sp/>=<sp/>cfg_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+<ref refid="_option_selector_multistate_8c_1a6e64693a765afc8a0b5442acfb2ba262" kindref="member">class_name</ref>+</highlight><highlight class="stringliteral">&quot;<sp/>DamageSystem<sp/>GlobalHealth<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>health_type<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>hitpoints&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_health<sp/>=<sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1a2190cab249d936d9e483976542ea7cfa" kindref="member">ConfigGetFloat</ref>(cfg_path);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_health;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="566" refid="_misc_gameplay_functions_8c_1aa90ad6c142dc124da8117486933ec12c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1aa90ad6c142dc124da8117486933ec12c" kindref="member">GetProjectedCursorPos3d</ref><sp/>(out<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>position,<sp/><ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref><sp/>weapon)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>usti_hlavne_position<sp/>=<sp/>weapon.GetSelectionPositionMS(<sp/></highlight><highlight class="stringliteral">&quot;usti<sp/>hlavne&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>konec_hlavne_position<sp/>=<sp/>weapon.GetSelectionPositionMS(<sp/></highlight><highlight class="stringliteral">&quot;konec<sp/>hlavne&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>end_point<sp/>=<sp/>weapon.ModelToWorld(usti_hlavne_position);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>begin_point<sp/>=<sp/>weapon.ModelToWorld(konec_hlavne_position);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>contact_dir;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contact_component;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>aim_point<sp/>=<sp/>end_point<sp/>-<sp/>begin_point;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aim_point<sp/>=<sp/>aim_point.<ref refid="classvector_1a1dd56c5821c2f52c4b6eb3f945950dbd" kindref="member">Normalized</ref>()<sp/>*<sp/><ref refid="group___emote_i_ds_1ga52087ffb8b4e7ca74d13334c5c1f3380" kindref="member">PROJECTED_CURSOR_DISTANCE</ref>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aim_point<sp/>=<sp/>aim_point<sp/>+<sp/>end_point;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_day_z_physics" kindref="compound">DayZPhysics</ref>.<ref refid="class_day_z_physics_1a5b2f27b170cdb66f30cd9e3210bda40f" kindref="member">RaycastRV</ref>(begin_point,<sp/>aim_point,<sp/>position,<sp/>contact_dir,<sp/>contact_component,<sp/>null,<sp/>null,<sp/>null,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ObjIntersectFire))</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="584" refid="_misc_gameplay_functions_8c_1aa896eef598821358a102a0b3f9bd1b67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1aa896eef598821358a102a0b3f9bd1b67" kindref="member">GetHeadBonePos</ref>(notnull<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player,<sp/>out<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>pos)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>position<sp/>of<sp/>head<sp/>for<sp/>starting<sp/>trace<sp/>pos,<sp/>otherwise<sp/>use<sp/>sane<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>headBoneIdx<sp/>=<sp/>player.GetBoneIndexByName(</highlight><highlight class="stringliteral">&quot;Head&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>headBoneIdx<sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>pos<sp/>=<sp/>player.GetPosition()[1]<sp/>+<sp/>1.6;<sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>pos<sp/>=<sp/>player.GetBonePositionWS(headBoneIdx);<sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="_misc_gameplay_functions_8c_1a97b6a0394bc22f3a65bdf7f0cd6e719a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a97b6a0394bc22f3a65bdf7f0cd6e719a" kindref="member">GetHeadingVector</ref>(notnull<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>dir<sp/>=<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a6f6d5246e38b34f79fa2741a7e72d7e7" kindref="member">Zero</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingAngle<sp/>=<sp/><ref refid="_misc_gameplay_functions_8c_1ab33724be9d37b039005189ad22ea1de5" kindref="member">GetHeadingAngle</ref>(player);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir[0]<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga59a832dc3ede05300c969625f9c012d6" kindref="member">Cos</ref>(headingAngle<sp/>+<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga269369827474ef0bd280de6b8c73c464" kindref="member">PI_HALF</ref>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir[2]<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga94eedd3910334f450ef989d69ab4e4fd" kindref="member">Sin</ref>(headingAngle<sp/>+<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga269369827474ef0bd280de6b8c73c464" kindref="member">PI_HALF</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir.<ref refid="classvector_1a1dd56c5821c2f52c4b6eb3f945950dbd" kindref="member">Normalized</ref>();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="_misc_gameplay_functions_8c_1ab33724be9d37b039005189ad22ea1de5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ab33724be9d37b039005189ad22ea1de5" kindref="member">GetHeadingAngle</ref>(notnull<sp/><ref refid="class_day_z_player_implement" kindref="compound">DayZPlayerImplement</ref><sp/>player)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_human_input_controller" kindref="compound">HumanInputController</ref><sp/>hic<sp/>=<sp/>player.GetInputController();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingAngle<sp/>=<sp/>hic.<ref refid="class_human_input_controller_1ae9b604e4a7ef153e34516942e0120a45" kindref="member">GetHeadingAngle</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>headingAngle;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="612" refid="_misc_gameplay_functions_8c_1aa9c574ff59df39ca0b2f4de56266a5b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1aa9c574ff59df39ca0b2f4de56266a5b8" kindref="member">GetEnergyMetabolicSpeed</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>movement_speed)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>speed;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(movement_speed)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dayzplayer_8c_1a6fd289b7043f1412362529ab769d7881" kindref="member">DayZPlayerConstants</ref>.MOVEMENTIDX_WALK:</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/><ref refid="class_player_constants" kindref="compound">PlayerConstants</ref>.<ref refid="class_player_constants_1aa66c8b05bc6dccf4b8541954d8a1f51b" kindref="member">METABOLIC_SPEED_ENERGY_WALK</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dayzplayer_8c_1a6fd289b7043f1412362529ab769d7881" kindref="member">DayZPlayerConstants</ref>.MOVEMENTIDX_RUN:</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/><ref refid="class_player_constants" kindref="compound">PlayerConstants</ref>.<ref refid="class_player_constants_1a765ab5a9d32fdaf340f2bc60e9e72ad1" kindref="member">METABOLIC_SPEED_ENERGY_JOG</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dayzplayer_8c_1a6fd289b7043f1412362529ab769d7881" kindref="member">DayZPlayerConstants</ref>.MOVEMENTIDX_SPRINT:</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/><ref refid="class_player_constants" kindref="compound">PlayerConstants</ref>.<ref refid="class_player_constants_1ace44b623c3cea1330ad9631a330b4ed1" kindref="member">METABOLIC_SPEED_ENERGY_SPRINT</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>+=<sp/><ref refid="class_player_constants" kindref="compound">PlayerConstants</ref>.<ref refid="class_player_constants_1af2bbd8bf8168741b135b1fd275b7bbd7" kindref="member">METABOLIC_SPEED_ENERGY_BASAL</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>speed;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="635" refid="_misc_gameplay_functions_8c_1acd62b5872508f76c4bfc976191ffe8d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1acd62b5872508f76c4bfc976191ffe8d8" kindref="member">GetWaterMetabolicSpeed</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>movement_speed)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>speed;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(movement_speed)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dayzplayer_8c_1a6fd289b7043f1412362529ab769d7881" kindref="member">DayZPlayerConstants</ref>.MOVEMENTIDX_WALK:</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/><ref refid="class_player_constants" kindref="compound">PlayerConstants</ref>.<ref refid="class_player_constants_1a58724bf9a759a5538c72bab0c2411518" kindref="member">METABOLIC_SPEED_WATER_WALK</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dayzplayer_8c_1a6fd289b7043f1412362529ab769d7881" kindref="member">DayZPlayerConstants</ref>.MOVEMENTIDX_RUN:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/><ref refid="class_player_constants" kindref="compound">PlayerConstants</ref>.<ref refid="class_player_constants_1a8936d15f7e13a69ec61548640dd2db9d" kindref="member">METABOLIC_SPEED_WATER_JOG</ref>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dayzplayer_8c_1a6fd289b7043f1412362529ab769d7881" kindref="member">DayZPlayerConstants</ref>.MOVEMENTIDX_SPRINT:</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/><ref refid="class_player_constants" kindref="compound">PlayerConstants</ref>.<ref refid="class_player_constants_1aaa7df6e023c0d64f2edf0835212a6206" kindref="member">METABOLIC_SPEED_WATER_SPRINT</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>+=<sp/><ref refid="class_player_constants" kindref="compound">PlayerConstants</ref>.<ref refid="class_player_constants_1a2d58fc5dca68eefc598085db078fb689" kindref="member">METABOLIC_SPEED_WATER_BASAL</ref>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>speed;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="658" refid="_misc_gameplay_functions_8c_1a16470b31ea2c5f9e3500f36fedf7811d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a16470b31ea2c5f9e3500f36fedf7811d" kindref="member">ObtainRestrainItemTargetClassname</ref>(notnull<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>entity)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entity.ConfigGetString(<sp/></highlight><highlight class="stringliteral">&quot;OnRestrainChange&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="663" refid="_misc_gameplay_functions_8c_1a97883855a51619f3d643abacf50854a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a97883855a51619f3d643abacf50854a0" kindref="member">TransformRestrainItem</ref>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>current_item,<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>tool,<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player_source,<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player_target,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>destroy<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tool<sp/>)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>unrestrain<sp/>and<sp/>not<sp/>struggle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>tool.ConfigGetBool(</highlight><highlight class="stringliteral">&quot;RestrainUnlockType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>new_item_name<sp/>=<sp/>current_item.ConfigGetString(<sp/></highlight><highlight class="stringliteral">&quot;OnRestrainChange&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_item_name<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player_target<sp/>)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(player_target.IsAlive())</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MiscGameplayFunctions.TurnItemIntoItemEx(player_target,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_replace_and_destroy_lambda_ex" kindref="compound">ReplaceAndDestroyLambdaEx</ref>(current_item,<sp/>new_item_name,<sp/>player_target,<sp/>type));</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MiscGameplayFunctions.TurnItemIntoItemEx(player_source,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_destroy_item_in_corpses_hands_and_create_new_on_gnd_lambda" kindref="compound">DestroyItemInCorpsesHandsAndCreateNewOnGndLambda</ref>(current_item,<sp/>new_item_name,<sp/>player_target,<sp/>type));</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MiscGameplayFunctions.TurnItemIntoItemEx(player_target,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_replace_and_destroy_lambda_ex" kindref="compound">ReplaceAndDestroyLambdaEx</ref>(current_item,<sp/>new_item_name,<sp/>player_target,<sp/>type));</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;current_item:&quot;</highlight><highlight class="normal"><sp/>+current_item+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>tool:&quot;</highlight><highlight class="normal"><sp/>+tool<sp/>+</highlight><highlight class="stringliteral">&quot;.<sp/>No<sp/>value<sp/>for<sp/>&apos;OnRestrainChange&apos;<sp/>config<sp/>parameter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="694" refid="_misc_gameplay_functions_8c_1a9d17653dd70d5f4c7e85960a787750be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a9d17653dd70d5f4c7e85960a787750be" kindref="member">IsValueInRange</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>to)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value<sp/>&gt;=<sp/>from)<sp/>&amp;&amp;<sp/>(value<sp/>&lt;=<sp/>to);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="700" refid="_misc_gameplay_functions_8c_1a428b1d81674ffafee7d240f6ded83a6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a428b1d81674ffafee7d240f6ded83a6a" kindref="member">IsPlayerOrientedTowardPos</ref>(notnull<sp/><ref refid="class_day_z_player_implement" kindref="compound">DayZPlayerImplement</ref><sp/>player,<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>target_pos,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cone_angle)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(player)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>player_dir<sp/>=<sp/>player.GetDirection();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>to_target_dir<sp/>=<sp/>target_pos<sp/>-<sp/>player.GetPosition();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player_dir[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_target_dir[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player_dir.<ref refid="classvector_1a77831ca9c077a8dbd1b0aae7ba2a5d3d" kindref="member">Normalize</ref>();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_target_dir.<ref refid="classvector_1a77831ca9c077a8dbd1b0aae7ba2a5d3d" kindref="member">Normalize</ref>();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos_fi<sp/>=<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a69fa0e44e84719ecd8f98b99fddf1d92" kindref="member">Dot</ref>(player_dir,<sp/>to_target_dir);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>cross<sp/>=<sp/>player_dir<sp/>*<sp/>to_target_dir;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga38642eeb5f858f9f88e6cdaf1ad6a9b1" kindref="member">Acos</ref>(cos_fi)<sp/>*<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1gad73851cb23a468ee6eb705d0ec76e141" kindref="member">RAD2DEG</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>cross[1]<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>-dir;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(dir<sp/>&lt;=<sp/>cone_angle<sp/>&amp;&amp;<sp/>dir<sp/>&gt;=<sp/>-cone_angle)<sp/>||<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1gadf8820d46eee5033af2e12212c22b16e" kindref="member">AbsFloat</ref>(dir)<sp/>==<sp/>90<sp/>)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732" refid="_misc_gameplay_functions_8c_1aa27083abf1ed1bf338d4c295073e0bac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1aa27083abf1ed1bf338d4c295073e0bac" kindref="member">SanitizeString</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>input)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_length<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>output<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/>output.<ref refid="group___strings_1gaa7a206e405d2c58f7390a145ee45523d" kindref="member">Substring</ref>(0,<ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga939cca08ae6c7facc9293f2dbce3def5" kindref="member">Clamp</ref>(max_length,0,output.<ref refid="group___strings_1ga012b133f69754b6a99ba29ce5f11c348" kindref="member">Length</ref>()));</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deprecated<sp/>-<sp/>dont<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742" refid="_misc_gameplay_functions_8c_1a4e9b99b28bf849acb55691f2034bf124" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a4e9b99b28bf849acb55691f2034bf124" kindref="member">ComplexBuildCollideCheckClient</ref>(<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player,<sp/><ref refid="_action_targets_8c_1a2ab3de6f698cb230ae0c129e3e01b341" kindref="member">ActionTarget</ref><sp/>target,<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>item,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>partName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="747" refid="_misc_gameplay_functions_8c_1aad9cb6b22bc750ab03b38e694d342d00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a4e9b99b28bf849acb55691f2034bf124" kindref="member">ComplexBuildCollideCheckClient</ref>(<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player,<sp/><ref refid="_action_targets_8c_1a2ab3de6f698cb230ae0c129e3e01b341" kindref="member">ActionTarget</ref><sp/>target,<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>item,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>constraction_index<sp/>)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_building_base" kindref="compound">BaseBuildingBase</ref><sp/>base_building<sp/>=<sp/><ref refid="class_base_building_base" kindref="compound">BaseBuildingBase</ref>.Cast(<sp/>target.GetObject()<sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_building)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_construction_8c_1ab5827f036a3bf21fbe63a9de21581172" kindref="member">Construction</ref><sp/>construction<sp/>=<sp/>base_building.GetConstruction();</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(construction<sp/>&amp;&amp;<sp/><ref refid="_misc_gameplay_functions_8c_1a48f351293070533ec558de8a71a5df16" kindref="member">BuildCondition</ref>(<sp/>player,<sp/>target,<sp/>item,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>constraction_index<sp/>))</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_construction_action_data" kindref="compound">ConstructionActionData</ref><sp/>construction_action_data<sp/>=<sp/>player.GetConstructionActionData();</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>partName;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>item<sp/>)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partName<sp/>=<sp/>construction_action_data.<ref refid="class_construction_action_data_1abf1c552018a36036d7b4aa809809e62c" kindref="member">GetBuildPartAtIndex</ref>(constraction_index).<ref refid="class_construction_part_1a5149dd9f39960d2667e5269ceb883215" kindref="member">GetPartName</ref>();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partName<sp/>=<sp/>construction_action_data.<ref refid="class_construction_action_data_1a8ecabd09aa5f44b76fffc85a8bd9827c" kindref="member">GetBuildPartNoToolAtIndex</ref>(constraction_index).<ref refid="class_construction_part_1a5149dd9f39960d2667e5269ceb883215" kindref="member">GetPartName</ref>();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>boo;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_building.<ref refid="class_base_building_base_1a61600fd23177509c874cbf561e0f6903" kindref="member">PerformRoofCheckForBase</ref>(partName,player,boo)<sp/>&amp;&amp;<sp/>boo)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player.IsPlacingLocal()<sp/>||<sp/>player.IsPlacingServer()<sp/>)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*float<sp/>distance_root<sp/>=<sp/>vector.DistanceSq(target.GetCursorHitPos(),<sp/>player.GetPosition());</highlight></codeline>
<codeline lineno="772"><highlight class="comment"></highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!CfgGameplayHandler.GetDisableDistanceCheck()<sp/>&amp;&amp;<sp/>distance_root<sp/>&lt;<sp/>UAMaxDistances.BASEBUILDING_SHORT)</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!construction.IsColliding(<sp/>partName<sp/>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deprecated<sp/>-<sp/>dont<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784" refid="_misc_gameplay_functions_8c_1a48f351293070533ec558de8a71a5df16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a48f351293070533ec558de8a71a5df16" kindref="member">BuildCondition</ref>(<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player,<sp/><ref refid="_action_targets_8c_1a2ab3de6f698cb230ae0c129e3e01b341" kindref="member">ActionTarget</ref><sp/>target,<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>item,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>camera_check<sp/>)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="789" refid="_misc_gameplay_functions_8c_1a91aa3bca9a66d1d7de9dd1c145a5e274" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a48f351293070533ec558de8a71a5df16" kindref="member">BuildCondition</ref>(<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player,<sp/><ref refid="_action_targets_8c_1a2ab3de6f698cb230ae0c129e3e01b341" kindref="member">ActionTarget</ref><sp/>target,<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>item,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>camera_check,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>constraction_index<sp/>)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>targetObject<sp/>=<sp/>target.GetObject();</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>targetObject<sp/>&amp;&amp;<sp/>targetObject.CanUseConstruction()<sp/>)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_building_base" kindref="compound">BaseBuildingBase</ref><sp/>base_building<sp/>=<sp/><ref refid="class_base_building_base" kindref="compound">BaseBuildingBase</ref>.Cast(<sp/>targetObject<sp/>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_construction_action_data" kindref="compound">ConstructionActionData</ref><sp/>construction_action_data<sp/>=<sp/>player.GetConstructionActionData();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construction_action_data.<ref refid="class_construction_action_data_1aaacb7065b109a0d544dfd15f669e6410" kindref="member">SetTarget</ref>(<sp/>targetObject<sp/>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_construction_part" kindref="compound">ConstructionPart</ref><sp/>constrution_part;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>item<sp/>)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constrution_part<sp/>=<sp/>construction_action_data.<ref refid="class_construction_action_data_1abf1c552018a36036d7b4aa809809e62c" kindref="member">GetBuildPartAtIndex</ref>(constraction_index);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constrution_part<sp/>=<sp/>construction_action_data.<ref refid="class_construction_action_data_1a8ecabd09aa5f44b76fffc85a8bd9827c" kindref="member">GetBuildPartNoToolAtIndex</ref>(constraction_index);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>constrution_part<sp/>)</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Construction<sp/>construction<sp/>=<sp/>base_building.GetConstruction();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construction.IsColliding(<sp/>constrution_part.GetPartName()<sp/>);</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>constrution_part<sp/>)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//camera<sp/>and<sp/>position<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>position_check<sp/>=<sp/>(<sp/>base_building.<ref refid="class_base_building_base_1a7ab637bcb1ecc27ae3f249ef682f8c47" kindref="member">MustBeBuiltFromOutside</ref>()<sp/>&amp;&amp;<sp/>!base_building.<ref refid="class_base_building_base_1a0b53f2f4465ee54a6448aa1a04ca4fb5" kindref="member">IsPlayerInside</ref>(player,<sp/>constrution_part.<ref refid="class_construction_part_1af8e9d84802d2b183033baf78a3d4fe41" kindref="member">GetMainPartName</ref>())<sp/>)<sp/>||<sp/>(<sp/>!base_building.<ref refid="class_base_building_base_1a7ab637bcb1ecc27ae3f249ef682f8c47" kindref="member">MustBeBuiltFromOutside</ref>()<sp/>&amp;&amp;<sp/>base_building.<ref refid="class_base_building_base_1a0b53f2f4465ee54a6448aa1a04ca4fb5" kindref="member">IsPlayerInside</ref>(player,<sp/>constrution_part.<ref refid="class_construction_part_1af8e9d84802d2b183033baf78a3d4fe41" kindref="member">GetMainPartName</ref>())<sp/>);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>position_check<sp/>&amp;&amp;<sp/>!player.GetInputController().CameraIsFreeLook()<sp/>)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Camera<sp/>check<sp/>(client-only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>camera_check<sp/>)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>()<sp/>&amp;&amp;<sp/>(<sp/>!<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1aaa8ce3da1bb62523271e25a5b5967f50" kindref="member">IsDedicatedServer</ref>()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!base_building.<ref refid="class_base_building_base_1a9925bc4fa61d820bd77d3e8967baf5c4" kindref="member">IsFacingCamera</ref>(<sp/>constrution_part.<ref refid="class_construction_part_1af8e9d84802d2b183033baf78a3d4fe41" kindref="member">GetMainPartName</ref>()<sp/>);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="840" refid="_misc_gameplay_functions_8c_1aae225394af2b321d388c84c6cc9c7c34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1aae225394af2b321d388c84c6cc9c7c34" kindref="member">IsUnderRoofFromToCalculation</ref>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>entity,<sp/>out<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>from,<sp/>out<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>to,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___emote_i_ds_1gaec130b3811ffdc65c0413ed376a9d7a9" kindref="member">ROOF_CHECK_RAYCAST_DIST</ref>)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>minMax[2];</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.GetCollisionBox(minMax);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>size<sp/>=<sp/><ref refid="group___math3_d_a_p_i_1ga5bd1deb1c96276d94eeec6fe40955c41" kindref="member">Vector</ref>(0,0,0);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//size[1]<sp/>=<sp/>minMax[1][1]<sp/>-<sp/>minMax[0][1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>from_override<sp/>=<sp/>entity.HeightStartCheckOverride();</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_override<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size[1]<sp/>=<sp/>from_override;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size[1]<sp/>=<sp/>minMax[1][1]<sp/>-<sp/>minMax[0][1];</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>=<sp/>entity.GetPosition()<sp/>+<sp/>size;<sp/><sp/></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>entity.HeightCheckOverride()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>=<sp/>entity.GetPosition()<sp/>+<sp/><ref refid="group___math3_d_a_p_i_1ga5bd1deb1c96276d94eeec6fe40955c41" kindref="member">Vector</ref>(0,<sp/>entity.HeightCheckOverride(),<sp/>0);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>ceiling<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ceiling[1]<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>=<sp/>from<sp/>+<sp/>ceiling;<sp/></highlight><highlight class="comment">//+size<sp/>???<sp/>offset<sp/>to<sp/>cast<sp/>same<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="870" refid="_misc_gameplay_functions_8c_1aae97f6baa8821b943b12392f89881f96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1aae97f6baa8821b943b12392f89881f96" kindref="member">IsUnderRoof</ref>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>entity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___emote_i_ds_1gaec130b3811ffdc65c0413ed376a9d7a9" kindref="member">ROOF_CHECK_RAYCAST_DIST</ref>)<sp/></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1af309b8fa782399a79765c31d11743526" kindref="member">IsUnderRoofEx</ref>(entity,<sp/>height,<sp/>ObjIntersectView);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="875" refid="_misc_gameplay_functions_8c_1af309b8fa782399a79765c31d11743526" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1af309b8fa782399a79765c31d11743526" kindref="member">IsUnderRoofEx</ref>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>entity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___emote_i_ds_1gaec130b3811ffdc65c0413ed376a9d7a9" kindref="member">ROOF_CHECK_RAYCAST_DIST</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>geometry<sp/>=<sp/>ObjIntersectView)<sp/></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>from;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>to;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1aae225394af2b321d388c84c6cc9c7c34" kindref="member">IsUnderRoofFromToCalculation</ref>(entity,<sp/>from,<sp/>to,<sp/>height);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>contact_pos;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>contact_dir;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contact_component;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set&lt;Object&gt;<sp/>hit_object<sp/>=<sp/>new<sp/>set&lt;Object&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>boo<sp/>=<sp/><ref refid="class_day_z_physics" kindref="compound">DayZPhysics</ref>.<ref refid="class_day_z_physics_1a5b2f27b170cdb66f30cd9e3210bda40f" kindref="member">RaycastRV</ref>(<sp/>from,<sp/>to,<sp/>contact_pos,<sp/>contact_dir,<sp/>contact_component,<sp/></highlight><highlight class="comment">/*hit_object*/</highlight><highlight class="normal">NULL,<sp/>NULL,<sp/>entity,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>geometry,0.25<sp/>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(boo)</highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawSphere(from<sp/>,<sp/>0.8,Colors.YELLOW,<sp/>ShapeFlags.ONCE);</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawSphere(to<sp/>,<sp/>0.8,Colors.RED,<sp/>ShapeFlags.ONCE);</highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawSphere(from<sp/>,<sp/>0.8,Colors.GREEN,<sp/>ShapeFlags.ONCE);</highlight></codeline>
<codeline lineno="897"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawSphere(to<sp/>,<sp/>0.8,Colors.RED,<sp/>ShapeFlags.ONCE);</highlight></codeline>
<codeline lineno="898"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boo;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cooking<sp/>equipment<sp/>effects<sp/>(get<sp/>position<sp/>for<sp/>steam<sp/>particle)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904" refid="_misc_gameplay_functions_8c_1a51135c17c00c7f8459a8c656a366299f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a51135c17c00c7f8459a8c656a366299f" kindref="member">GetSteamPosition</ref>(<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>parent<sp/>)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>particle_pos;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>steam_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parent<sp/>)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>particle_pos<sp/>=<sp/>parent.GetPosition();</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parent.IsInherited(<sp/>PortableGasStove<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>steam_offset<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parent.IsInherited(<sp/><ref refid="class_fireplace_base" kindref="compound">FireplaceBase</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fireplace_base" kindref="compound">FireplaceBase</ref><sp/>fireplace<sp/>=<sp/><ref refid="class_fireplace_base" kindref="compound">FireplaceBase</ref>.Cast(<sp/>parent<sp/>);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fireplace.<ref refid="class_fireplace_base_1a21fb4c63977a86fe1ecb130f3a60763d" kindref="member">IsBaseFireplace</ref>()<sp/>)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>steam_offset<sp/>=<sp/>0.8;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fireplace.<ref refid="class_fireplace_base_1af5006da419063e3ec4ba166cc5db486e" kindref="member">IsBarrelWithHoles</ref>()<sp/>)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>steam_offset<sp/>=<sp/>1.1;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fireplace.<ref refid="class_fireplace_base_1a8e6a06b743f8c353f608930096153984" kindref="member">IsFireplaceIndoor</ref>()<sp/>)</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>steam_offset<sp/>=<sp/>0.45;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fireplace.<ref refid="class_fireplace_base_1a77d7e243c675c182da7ff0b4186d7f90" kindref="member">IsIndoorOven</ref>()<sp/>)</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>steam_offset<sp/>=<sp/>0.9;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>particle_pos[1]<sp/>=<sp/>particle_pos[1]<sp/>+<sp/>steam_offset;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>particle_pos;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="945" refid="_misc_gameplay_functions_8c_1a4ed7de29993696c94f1d6a08e84acac1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a4ed7de29993696c94f1d6a08e84acac1" kindref="member">DropAllItemsInInventoryInBounds</ref>(<ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>ib,<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>halfExtents)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().IsServer())</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;EntityAI&gt;</ref><sp/>items<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;EntityAI&gt;</ref>;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ib.GetInventory().EnumerateInventory(<ref refid="gameplay_8c_1ac5ade7a41ab88bd2906cf0b55a32492e" kindref="member">InventoryTraversalType</ref>.LEVELORDER,<sp/>items);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>direction<sp/>=<sp/>ib.GetDirection();</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dot<sp/>=<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a69fa0e44e84719ecd8f98b99fddf1d92" kindref="member">Dot</ref>(direction,<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a6ad2d639d86b8e70f2b1201cccfe2b69" kindref="member">Forward</ref>);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga38642eeb5f858f9f88e6cdaf1ad6a9b1" kindref="member">Acos</ref>(dot);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction[0]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>=<sp/>-angle;<sp/></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga59a832dc3ede05300c969625f9c012d6" kindref="member">Cos</ref>(angle);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sin<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga94eedd3910334f450ef989d69ab4e4fd" kindref="member">Sin</ref>(angle);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>item;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>items.Count();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>items.Get(i);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>item<sp/>)</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ib.GetInventory().DropEntityInBounds(<ref refid="3___game_2_systems_2_inventory_2_inventory_8c_1a5073c77c5d68882860f688a9fc4cba4d" kindref="member">InventoryMode</ref>.SERVER,<sp/>ib,<sp/>item,<sp/>halfExtents,<sp/>angle,<sp/>cos,<sp/>sin);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="972" refid="_misc_gameplay_functions_8c_1af5ca1e23035798fe2f034cdd5f36f702" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1af5ca1e23035798fe2f034cdd5f36f702" kindref="member">ThrowAllItemsInInventory</ref>(notnull<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>parent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>position<sp/>=<sp/>parent.GetPosition();</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>orientation<sp/>=<sp/>parent.GetOrientation();</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>rotation_matrix[3];</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>direction[4];</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>minmax[2];</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.GetCollisionBox(minmax);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1ga91222ac45b26b806e50d1d77268114de" kindref="member">YawPitchRollMatrix</ref>(<sp/>orientation,<sp/>rotation_matrix<sp/>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1ga84dabcc554ad75b70eff6cf7b18056b8" kindref="member">MatrixToQuat</ref>(<sp/>rotation_matrix,<sp/>direction<sp/>);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>randomPos;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parent.GetInventory().AttachmentCount();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randomPos<sp/>=<sp/><ref refid="group___math3_d_a_p_i_1ga5bd1deb1c96276d94eeec6fe40955c41" kindref="member">Vector</ref>(position[0]<sp/>+<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga892ecb1375c9b373969273223a5841f3" kindref="member">RandomFloat</ref>(minmax[0][0],<sp/>minmax[1][0]),</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position[1]<sp/>+<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga892ecb1375c9b373969273223a5841f3" kindref="member">RandomFloat</ref>(minmax[0][1],<sp/>minmax[1][1]),</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position[2]<sp/>+<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga892ecb1375c9b373969273223a5841f3" kindref="member">RandomFloat</ref>(minmax[0][2],<sp/>minmax[1][2]));</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1abfa8e9fb82ef57cd8a70bb6afda4e24a" kindref="member">ThrowEntityFromInventory</ref>(parent.GetInventory().GetAttachmentFromIndex(<sp/>i<sp/>),<sp/>randomPos,<sp/>direction,<sp/>-<ref refid="group___rigid_body_1ga3e827787960ad4f9fd63618e6bf20e8a" kindref="member">GetVelocity</ref>(parent),<sp/><ref refid="_misc_gameplay_functions_8c_1a415e83ef6b8073d37ad4f88fba082421" kindref="member">ThrowEntityFlags</ref>.NONE);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>parent.GetInventory().GetCargo().GetItemCount();<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randomPos<sp/>=<sp/><ref refid="group___math3_d_a_p_i_1ga5bd1deb1c96276d94eeec6fe40955c41" kindref="member">Vector</ref>(position[0]<sp/>+<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga892ecb1375c9b373969273223a5841f3" kindref="member">RandomFloat</ref>(minmax[0][0],<sp/>minmax[1][0]),</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position[1]<sp/>+<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga892ecb1375c9b373969273223a5841f3" kindref="member">RandomFloat</ref>(minmax[0][1],<sp/>minmax[1][1]),</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position[2]<sp/>+<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga892ecb1375c9b373969273223a5841f3" kindref="member">RandomFloat</ref>(minmax[0][2],<sp/>minmax[1][2]));</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1abfa8e9fb82ef57cd8a70bb6afda4e24a" kindref="member">ThrowEntityFromInventory</ref>(parent.GetInventory().GetCargo().GetItem(<sp/>j<sp/>),<sp/>randomPos,<sp/>direction,<sp/>-<ref refid="group___rigid_body_1ga3e827787960ad4f9fd63618e6bf20e8a" kindref="member">GetVelocity</ref>(parent),<sp/><ref refid="_misc_gameplay_functions_8c_1a415e83ef6b8073d37ad4f88fba082421" kindref="member">ThrowEntityFlags</ref>.NONE);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1005" refid="_misc_gameplay_functions_8c_1abfa8e9fb82ef57cd8a70bb6afda4e24a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1abfa8e9fb82ef57cd8a70bb6afda4e24a" kindref="member">ThrowEntityFromInventory</ref>(notnull<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>entity,<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>position,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>direction[4],<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>force,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="3___game_2_systems_2_inventory_2_inventory_8c_1a5073c77c5d68882860f688a9fc4cba4d" kindref="member">InventoryMode</ref><sp/>invMode<sp/>=<sp/><ref refid="3___game_2_systems_2_inventory_2_inventory_8c_1a5073c77c5d68882860f688a9fc4cba4d" kindref="member">InventoryMode</ref>.SERVER;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().IsMultiplayer()<sp/>)</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invMode<sp/>=<sp/><ref refid="3___game_2_systems_2_inventory_2_inventory_8c_1a5073c77c5d68882860f688a9fc4cba4d" kindref="member">InventoryMode</ref>.LOCAL;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>entityIB;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CastTo(entityIB,<sp/>entity))</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref><sp/>dst<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.<ref refid="class_inventory_location_1a29a2cfba56bdc6e5e907d5887ecaa02c" kindref="member">SetGroundEx</ref>(entity,<sp/>position,<sp/>direction);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(flags<sp/>&amp;<sp/><ref refid="_misc_gameplay_functions_8c_1a415e83ef6b8073d37ad4f88fba082421" kindref="member">ThrowEntityFlags</ref>.SPLIT)<sp/>&amp;&amp;<sp/>entityIB.CanBeSplit()<sp/>)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>entityIB.GetQuantity();<sp/>++l)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>new_item<sp/>=<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref>.Cast(<sp/><ref refid="class_game_inventory" kindref="compound">GameInventory</ref>.<ref refid="class_game_inventory_1af2765cd9720db7ed8b768e7e36838b1b" kindref="member">LocationCreateEntity</ref>(<sp/>dst,<sp/>entityIB.GetType(),<sp/><ref refid="_central_economy_8c_1a035ccd1155fa1003347d7bad5e18431a" kindref="member">ECE_NONE</ref>,<sp/><ref refid="_central_economy_8c_1ae5cdc0d97e56d85d9f60e2c57c3563bb" kindref="member">RF_DEFAULT</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_item<sp/>)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MiscGameplayFunctions.TransferItemProperties(entityIB,<sp/>new_item);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityIB.AddQuantity(<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item.SetQuantity(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item.ThrowPhysically(null,<sp/>force,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stackable<sp/>=<sp/>entityIB.GetTargetQuantityMax();</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(stackable<sp/>==<sp/>0<sp/>||<sp/>stackable<sp/>&gt;=<sp/>entityIB.GetQuantity())<sp/>)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(entityIB.GetQuantity()<sp/>&gt;<sp/>stackable)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref><sp/>spltDst<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position[1]<sp/>=<sp/>position[1]<sp/>+<sp/>0.1;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spltDst.<ref refid="class_inventory_location_1a29a2cfba56bdc6e5e907d5887ecaa02c" kindref="member">SetGroundEx</ref>(entity,<sp/>position,<sp/>direction);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>splitItem<sp/>=<sp/>entityIB.SplitIntoStackMaxToInventoryLocationEx(<sp/>spltDst<sp/>);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitItem.ThrowPhysically(null,<sp/>force,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref><sp/>src<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref>;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.GetInventory().GetCurrentInventoryLocation(src);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.GetInventory().TakeToDst(invMode,<sp/>src,<sp/>dst);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityIB.ThrowPhysically(null,<sp/>force,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.GetInventory().DropEntity(invMode,<sp/>entity.GetHierarchyRoot(),<sp/>entity);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___rigid_body_1ga7177f6588e2de1684e285e53f63ad300" kindref="member">dBodyApplyImpulse</ref>(entity,<sp/>force);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062" refid="_misc_gameplay_functions_8c_1ae8844ef2fe79def034092d6df9994365" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ae8844ef2fe79def034092d6df9994365" kindref="member">GetCurrentItemHeatIsolation</ref>(<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>pItem<sp/>)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wetFactor;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>healthFactor;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>heatIsolation<sp/>=<sp/>pItem.GetHeatIsolation();<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>itemHealthLabel<sp/>=<sp/>pItem.GetHealthLevel();<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>itemWetness<sp/>=<sp/>pItem.GetWet();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemWetness<sp/>&gt;=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_wetness_1ga0723d80c22c4f679d33c50a8dc96ddc9" kindref="member">STATE_DRY</ref><sp/>&amp;&amp;<sp/>itemWetness<sp/>&lt;<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_wetness_1ga1e3a36c489d889ff08e6bd680cf84a41" kindref="member">STATE_DAMP</ref><sp/>)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetFactor<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___environment_cfg_1ga6b2a7fc4df23ddb9f6a1796068faf3c5" kindref="member">ENVIRO_ISOLATION_WETFACTOR_DRY</ref>;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemWetness<sp/>&gt;=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_wetness_1ga1e3a36c489d889ff08e6bd680cf84a41" kindref="member">STATE_DAMP</ref><sp/>&amp;&amp;<sp/>itemWetness<sp/>&lt;<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_wetness_1gad0c856cb6cf2af66ccdd3eb4415c8e70" kindref="member">STATE_WET</ref><sp/>)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetFactor<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___environment_cfg_1ga29a7d2dbe776418057c4beeb1aef1c32" kindref="member">ENVIRO_ISOLATION_WETFACTOR_DAMP</ref>;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemWetness<sp/>&gt;=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_wetness_1gad0c856cb6cf2af66ccdd3eb4415c8e70" kindref="member">STATE_WET</ref><sp/>&amp;&amp;<sp/>itemWetness<sp/>&lt;<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_wetness_1ga227c64af6fa36d01981c1f166a43ade9" kindref="member">STATE_SOAKING_WET</ref><sp/>)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetFactor<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___environment_cfg_1ga1a6e2c8df8761b848ddb7f4d3386b2b3" kindref="member">ENVIRO_ISOLATION_WETFACTOR_WET</ref>;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemWetness<sp/>&gt;=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_wetness_1ga227c64af6fa36d01981c1f166a43ade9" kindref="member">STATE_SOAKING_WET</ref><sp/>&amp;&amp;<sp/>itemWetness<sp/>&lt;<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_wetness_1ga64005344821ce2d5f9a7d37d90ea7e78" kindref="member">STATE_DRENCHED</ref><sp/>)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetFactor<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___environment_cfg_1ga0cec7f9de43ddfcacde7adf85109d9f8" kindref="member">ENVIRO_ISOLATION_WETFACTOR_SOAKED</ref>;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemWetness<sp/>&gt;=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_wetness_1ga64005344821ce2d5f9a7d37d90ea7e78" kindref="member">STATE_DRENCHED</ref><sp/>)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetFactor<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___environment_cfg_1ga3b03def3d75383a53e329a20eb1702c5" kindref="member">ENVIRO_ISOLATION_WETFACTOR_DRENCHED</ref>;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(itemHealthLabel)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_health_1gaf34232b1663da2990725d6c6a7df08fe" kindref="member">STATE_PRISTINE</ref>:</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthFactor<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___environment_cfg_1ga7128f9777e530cddc2bd198ecbb32f3f" kindref="member">ENVIRO_ISOLATION_HEALTHFACTOR_PRISTINE</ref>;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_health_1ga9f42d331e1d7c4d096cf17f05e8266dc" kindref="member">STATE_WORN</ref>:</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthFactor<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___environment_cfg_1ga5ab8a625676ff4b7427f59510876dff9" kindref="member">ENVIRO_ISOLATION_HEALTHFACTOR_WORN</ref>;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_health_1gad901009f01e8ccc389658079d68a27f3" kindref="member">STATE_DAMAGED</ref>:</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthFactor<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___environment_cfg_1ga4de28cfdfbe214605c4bdde530f1e27d" kindref="member">ENVIRO_ISOLATION_HEALTHFACTOR_DAMAGED</ref>;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_health_1gadb82dd87ce264a07fd032d02d4e941fc" kindref="member">STATE_BADLY_DAMAGED</ref>:</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthFactor<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___environment_cfg_1ga9acee9ee3f988db356d073ba98936b3e" kindref="member">ENVIRO_ISOLATION_HEALTHFACTOR_B_DAMAGED</ref>;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_health_1ga3908fcde0f2e91545d7e3a51fab2d5d0" kindref="member">STATE_RUINED</ref>:</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthFactor<sp/>=<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___environment_cfg_1ga4567fa023124012ee163fd970173ef16" kindref="member">ENVIRO_ISOLATION_HEALTHFACTOR_RUINED</ref>;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heatIsolation<sp/>*=<sp/>healthFactor;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heatIsolation<sp/>*=<sp/>wetFactor;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>heatIsolation;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1124" refid="_misc_gameplay_functions_8c_1afb7c471d722888587eb082dbcff37c79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1afb7c471d722888587eb082dbcff37c79" kindref="member">FilterObstructingObjects</ref>(<ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref><sp/>potentiallyObstructingObjects,<sp/>out<sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref><sp/>obstructingObjects)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!obstructingObjects)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obstructingObjects<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>potentiallyObstructingObjects.Count();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj<sp/>=<sp/>potentiallyObstructingObjects[i];</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>obj<sp/>&amp;&amp;<sp/>(<sp/>obj.CanObstruct()<sp/>||<sp/>obj.CanProxyObstruct()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obstructingObjects.Insert(obj);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1137" refid="_misc_gameplay_functions_8c_1a055c2d96b5bde58359ad2a388de3ed75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a055c2d96b5bde58359ad2a388de3ed75" kindref="member">CanIgnoreDistanceCheck</ref>(<ref refid="class_object" kindref="compound">Object</ref><sp/>obj)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj.IsTransport()<sp/>||<sp/>obj.CanUseConstruction();</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1143" refid="_misc_gameplay_functions_8c_1a67e371e63791b1443d7a4403501adfdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a67e371e63791b1443d7a4403501adfdd" kindref="member">FilterObstructedObjectsByGrouping</ref>(<ref refid="classvector" kindref="compound">vector</ref><sp/>origin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distanceDelta,<sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref><sp/>objects,<sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref><sp/>obstructingObjects,<sp/>out<sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref><sp/>filteredObjects,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doDistanceCheck<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkIfDistanceCanBeIgnored<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxDist<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref><sp/>vicinityObjects=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref>;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vicinityObjects.Copy(objects);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCount<sp/>=<sp/>vicinityObjects.Count();</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filteredObjects)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredObjects<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref>;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>objects<sp/>that<sp/>are<sp/>too<sp/>far<sp/>from<sp/>the<sp/>player<sp/>anyways</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>doDistanceCheck<sp/>)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>vicinityObjects.Count()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i<sp/>)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj<sp/>=<sp/>vicinityObjects[i];</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>obj<sp/>&amp;&amp;<sp/>!<ref refid="_misc_gameplay_functions_8c_1a055c2d96b5bde58359ad2a388de3ed75" kindref="member">CanIgnoreDistanceCheck</ref>(<sp/>obj<sp/>)<sp/>&amp;&amp;<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a21d8662c860e105943718b2da59349e7" kindref="member">DistanceSq</ref>(origin,<sp/>obj.GetPosition())<sp/>&gt;<sp/>maxDist<sp/>*<sp/>maxDist<sp/>)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vicinityObjects.Remove(i);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>obstructingObjects<sp/>to<sp/>have<sp/>the<sp/>furthest<sp/>one<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref><sp/>sortedObstructingObjects<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref>;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;float&gt;</ref><sp/>distanceHelper<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;float&gt;</ref>;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;float&gt;</ref><sp/>distanceHelperUnsorted<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;float&gt;</ref>;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance,<sp/>dist1,<sp/>dist2;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>obstructingObjects.Count();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>=<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a21d8662c860e105943718b2da59349e7" kindref="member">DistanceSq</ref>(obstructingObjects[i].GetWorldPosition(),<sp/>origin);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distanceHelper.Insert(distance);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distanceHelperUnsorted.Copy(distanceHelper);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distanceHelper.Sort();</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>distanceHelper.Count()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i<sp/>)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sortedObstructingObjects.Insert(obstructingObjects[distanceHelperUnsorted.Find(distanceHelper[i])]);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;ref array&lt;Object&gt;</ref>&gt;<sp/>tempGroups<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;ref array&lt;Object&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;ref array&lt;Object&gt;</ref>&gt;<sp/>objectGroups<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;ref array&lt;Object&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref><sp/>group;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga59a832dc3ede05300c969625f9c012d6" kindref="member">Cos</ref>(90);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sin<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga94eedd3910334f450ef989d69ab4e4fd" kindref="member">Sin</ref>(90);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>sorted<sp/>obstructingObjects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sortedObstructingObjects.Count();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obstrObj<sp/>=<sp/>sortedObstructingObjects[i];</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>worldPos<sp/>=<sp/>obstrObj.GetWorldPosition();</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>min,<sp/>max;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>minMax[2];</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>obstrObj.GetCollisionBox(minMax)<sp/>)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>minMax[0];</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>minMax[1];</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>max<sp/>*<sp/>(obstrObj.GetOrientation()<sp/>*<sp/>range);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>center,<sp/>dx,<sp/>dy,<sp/>dz,<sp/>half;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center<sp/>=<sp/>(min<sp/>+<sp/>max)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dz<sp/>=<sp/>obstrObj.GetOrientation();</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a98fea7cff9837cd9370fe01530ef6ed6" kindref="member">RotateAroundZero</ref>(dz,<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1ac187fd4c6a90da92d88737f963b03d6d" kindref="member">Up</ref>,<sp/>cos,<sp/>sin);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a98fea7cff9837cd9370fe01530ef6ed6" kindref="member">RotateAroundZero</ref>(dz,<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a28223193a011ce95454f4a7443ab2e89" kindref="member">Aside</ref>,<sp/>cos,<sp/>sin);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>half<sp/>=<sp/>(max<sp/>-<sp/>min)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>half<sp/>=<sp/><ref refid="group___math3_d_a_p_i_1ga5bd1deb1c96276d94eeec6fe40955c41" kindref="member">Vector</ref>(<ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1gadf8820d46eee5033af2e12212c22b16e" kindref="member">AbsFloat</ref>(half[0]),<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1gadf8820d46eee5033af2e12212c22b16e" kindref="member">AbsFloat</ref>(half[1]),<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1gadf8820d46eee5033af2e12212c22b16e" kindref="member">AbsFloat</ref>(half[2]));</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref>;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Group<sp/>objects<sp/>within<sp/>the<sp/>above<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>vicinityObjects.Count()<sp/>-<sp/>1;<sp/>j<sp/>&gt;=<sp/>0;<sp/>--j<sp/>)</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>vicObj<sp/>=<sp/>vicinityObjects[j];</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vicObj<sp/>)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>d<sp/>=<sp/>vicObj.GetWorldPosition()<sp/>-<sp/>worldPos<sp/>+<sp/>center;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1gadf8820d46eee5033af2e12212c22b16e" kindref="member">AbsFloat</ref>(<ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a69fa0e44e84719ecd8f98b99fddf1d92" kindref="member">Dot</ref>(d,<sp/>dx))<sp/>&lt;=<sp/>half[0]<sp/>&amp;&amp;<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1gadf8820d46eee5033af2e12212c22b16e" kindref="member">AbsFloat</ref>(<ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a69fa0e44e84719ecd8f98b99fddf1d92" kindref="member">Dot</ref>(d,<sp/>dy))<sp/>&lt;=<sp/>half[1]<sp/>&amp;&amp;<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1gadf8820d46eee5033af2e12212c22b16e" kindref="member">AbsFloat</ref>(<ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a69fa0e44e84719ecd8f98b99fddf1d92" kindref="member">Dot</ref>(d,<sp/>dz))<sp/>&lt;=<sp/>half[2]<sp/>)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group.Insert(vicObj);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vicinityObjects.Remove(j);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>group.Count()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempGroups.Insert(group);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>through<sp/>the<sp/>objects<sp/>grouped<sp/>by<sp/>obstruction<sp/>to<sp/>split<sp/>them<sp/>by<sp/>distance<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tempGroups.Count();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1add1c838e4b3ac62db1e2f835098499c1" kindref="member">SplitArrayIntoGroupsByDistance</ref>(tempGroups[i],<sp/>objectGroups,<sp/>distanceDelta);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>initial<sp/>groups<sp/>by<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1add1c838e4b3ac62db1e2f835098499c1" kindref="member">SplitArrayIntoGroupsByDistance</ref>(vicinityObjects,<sp/>objectGroups,<sp/>distanceDelta);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Raycast<sp/>accordingly<sp/>to<sp/>groups<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref><sp/>cache<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref>(origin,<sp/>mCount);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>objectGroups.Count();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref><sp/>objectGroup<sp/>=<sp/>objectGroups[i];</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>sampleObject<sp/>=<sp/>objectGroup[0];</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="_misc_gameplay_functions_8c_1ad4fd229674250ece2418569706c4af9c" kindref="member">IsObjectObstructedEx</ref>(sampleObject,<sp/>cache)<sp/>)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredObjects.InsertAll(objectGroup);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache.ClearCache();</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256" refid="_misc_gameplay_functions_8c_1add1c838e4b3ac62db1e2f835098499c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1add1c838e4b3ac62db1e2f835098499c1" kindref="member">SplitArrayIntoGroupsByDistance</ref>(<ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref><sp/>objects,<sp/><ref refid="classarray" kindref="compound">array</ref>&lt;ref<sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref>&gt;<sp/>objectGroups,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>squaredDistanceDelta)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref><sp/>group;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>objects.Count();<sp/>)</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj1<sp/>=<sp/>objects[i];</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>obj1<sp/>)</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;Object&gt;</ref>;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group.Insert(obj1);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>objects.Count()<sp/>-<sp/>1;<sp/>j<sp/>&gt;<sp/>i;<sp/>--j<sp/>)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>obj2<sp/>=<sp/>objects[j];</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>obj1<sp/>&amp;&amp;<sp/>obj2<sp/>)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>start<sp/>=<sp/>obj1.GetWorldPosition();</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>end<sp/>=<sp/>obj2.GetWorldPosition();</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a21d8662c860e105943718b2da59349e7" kindref="member">DistanceSq</ref>(start,<sp/>end);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>distance<sp/>&lt;<sp/>squaredDistanceDelta<sp/>)</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group.Insert(obj2);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objects.Remove(j);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectGroups.Insert(group);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objects.Remove(i);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1290" refid="_misc_gameplay_functions_8c_1ab62c01446154497af8c192671d71bf16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ab62c01446154497af8c192671d71bf16" kindref="member">IsObjectObstructed</ref>(<ref refid="class_object" kindref="compound">Object</ref><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doDistanceCheck<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>distanceCheckPos<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxDist<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>rayStart;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MiscGameplayFunctions.GetHeadBonePos(<ref refid="class_player_base" kindref="compound">PlayerBase</ref>.Cast(<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="_modifier_base_8c_1aaf6ee4d1f067be1038b7a662af6af1bf" kindref="member">GetPlayer</ref>()),<sp/>rayStart);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref><sp/>cache<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref>(rayStart,<sp/>1);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ad4fd229674250ece2418569706c4af9c" kindref="member">IsObjectObstructedEx</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>cache,<sp/>doDistanceCheck,<sp/>distanceCheckPos,<sp/>maxDist);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299" refid="_misc_gameplay_functions_8c_1ad4fd229674250ece2418569706c4af9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ad4fd229674250ece2418569706c4af9c" kindref="member">IsObjectObstructedEx</ref>(<ref refid="class_object" kindref="compound">Object</ref><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref><sp/>cache,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doDistanceCheck<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>distanceCheckPos<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxDist<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player<sp/>=<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref>.Cast(<ref refid="_day_z_game_8c_1a5b4f7935d7cbb89f7a4610452d633707" kindref="member">g_Game</ref>.GetPlayer());</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doDistanceCheck<sp/>&amp;&amp;<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a21d8662c860e105943718b2da59349e7" kindref="member">DistanceSq</ref>(player.GetPosition(),<sp/>distanceCheckPos)<sp/>&gt;<sp/>maxDist<sp/>*<sp/>maxDist)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache.ObjectCenterPos<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.GetCenter();</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_misc_gameplay_functions_8c_1ac7aeb216309b5429c5253d8bfc334114" kindref="member">IsObjectObstructedProxy</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>cache,<sp/>player))</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_day_z_physics" kindref="compound">DayZPhysics</ref>.<ref refid="class_day_z_physics_1a5b2f27b170cdb66f30cd9e3210bda40f" kindref="member">RaycastRV</ref>(cache.RaycastStart,<sp/>cache.ObjectCenterPos,<sp/>cache.ObjectContactPos,<sp/>cache.ObjectContactDir,<sp/>cache.ContactComponent,<sp/>cache.HitObjects,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="_modifier_base_8c_1aaf6ee4d1f067be1038b7a662af6af1bf" kindref="member">GetPlayer</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ObjIntersectFire,<sp/>0.0,<sp/><ref refid="group___debug_shape_1ga51f3cfd13ef7752ddd89ea32bcccd7d5" kindref="member">CollisionFlags</ref>.ALLOBJECTS);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1aacf518f867d4886155205526bc4df13e" kindref="member">IsObjectObstructedFilter</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>cache,<sp/>player);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1318" refid="_misc_gameplay_functions_8c_1ac7aeb216309b5429c5253d8bfc334114" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ac7aeb216309b5429c5253d8bfc334114" kindref="member">IsObjectObstructedProxy</ref>(<ref refid="class_object" kindref="compound">Object</ref><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref><sp/>cache,<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.CanProxyObstruct())</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_raycast_r_v_params" kindref="compound">RaycastRVParams</ref><sp/>rayInput<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_raycast_r_v_params" kindref="compound">RaycastRVParams</ref>(cache.RaycastStart,<sp/>cache.ObjectCenterPos,<sp/>player);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_day_z_physics" kindref="compound">DayZPhysics</ref>.<ref refid="class_day_z_physics_1aebf9250c5ced81e09a1bd2aa923b7c42" kindref="member">RaycastRVProxy</ref>(rayInput,<sp/>cache.HitProxyObjects);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache.HitProxyObjects)</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache.HitProxyObjects.Count()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache.HitProxyObjects[0].hierLevel<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignores<sp/>attachments<sp/>on<sp/>player</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cache.HitProxyObjects[0].parent.IsMan())</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache.HitProxyObjects[0].parent)</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>proxyParent<sp/>=<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref>.Cast(cache.HitProxyObjects[0].parent);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proxyParent.GetInventory()<sp/>&amp;&amp;<sp/>proxyParent.GetInventory().GetCargo())</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1347" refid="_misc_gameplay_functions_8c_1aacf518f867d4886155205526bc4df13e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1aacf518f867d4886155205526bc4df13e" kindref="member">IsObjectObstructedFilter</ref>(<ref refid="class_object" kindref="compound">Object</ref><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref><sp/>cache,<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player)</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>cache.HitObjects.Count();<sp/>m++<sp/>)</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>hit_object<sp/>=<sp/>cache.HitObjects.Get(m);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hit_object.CanObstruct()<sp/>)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//4.3.<sp/>ignore<sp/>item<sp/>if<sp/>items<sp/>are<sp/>big<sp/>and<sp/>heavy<sp/>&gt;=<sp/>OBJECT_OBSTRUCTION_WEIGHT<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//EntityAI<sp/>eai;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(<sp/>Class.CastTo(<sp/>eai,<sp/>hit_object<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(<sp/>eai.GetWeight()<sp/>&gt;=<sp/>OBJECT_OBSTRUCTION_WEIGHT<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>eai<sp/>!=<sp/>filtered_object<sp/>&amp;&amp;<sp/>eai.GetHierarchyRoot()<sp/>!=<sp/>filtered_object<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Print(&quot;!!!!!obstacle<sp/>vaha:<sp/>&quot;<sp/>+<sp/>hit_object);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_obstructed<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Inflict<sp/>absolute<sp/>damage<sp/>to<sp/>item<sp/>(used<sp/>on<sp/>tools<sp/>when<sp/>completing<sp/>actions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375" refid="_misc_gameplay_functions_8c_1a2a34dc32bc8639774adc6f621a86581a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a2a34dc32bc8639774adc6f621a86581a" kindref="member">DealAbsoluteDmg</ref>(<ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>item,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dmg)</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.DecreaseHealth(dmg,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Function<sp/>used<sp/>to<sp/>normailze<sp/>values,<sp/>enter<sp/>the<sp/>used<sp/>value<sp/>and<sp/>the<sp/>max<sp/>value<sp/>(max<sp/>will<sp/>become<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381" refid="_misc_gameplay_functions_8c_1a75ca2def85fcb18080e4aa640852674d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a75ca2def85fcb18080e4aa640852674d" kindref="member">Normalize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxVal)</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxVal<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_debug" kindref="compound">Debug</ref>.<ref refid="class_debug_1a87dcfbb1acc79bc63ccc7af1476c913d" kindref="member">LogError</ref>(</highlight><highlight class="stringliteral">&quot;Division<sp/>by<sp/>0<sp/>is<sp/>not<sp/>allowed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val<sp/>/<sp/>maxVal;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1392" refid="_misc_gameplay_functions_8c_1a3b6d758ed2613558bf00834476d5f859" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a3b6d758ed2613558bf00834476d5f859" kindref="member">Bobbing</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>period,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amplitude,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>elapsedTime)</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Prevent<sp/>division<sp/>by<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>period<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsedTime<sp/>/=<sp/>period;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cycle;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cycle<sp/>+=<sp/>elapsedTime;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cycle<sp/>=<sp/><ref refid="_misc_gameplay_functions_8c_1aee6c090c366e820b89de4299b3772c99" kindref="member">FModulus</ref>(cycle,<sp/>360);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cycle<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga94eedd3910334f450ef989d69ab4e4fd" kindref="member">Sin</ref>(cycle)<sp/>*<sp/>amplitude;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cycle;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DEPRECATED,<sp/>use<sp/>Math.ModFloat<sp/>directly<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409" refid="_misc_gameplay_functions_8c_1aee6c090c366e820b89de4299b3772c99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1aee6c090c366e820b89de4299b3772c99" kindref="member">FModulus</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_icon_8c_1a2970c38de5fbde060cc7a0ed546e674f" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_icon_8c_1acd41c12fe81446bff0920670641367de" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1ga2b778227c1910d5ebafad4b007e4b26a" kindref="member">ModFloat</ref>(<ref refid="_icon_8c_1a2970c38de5fbde060cc7a0ed546e674f" kindref="member">x</ref>,<sp/><ref refid="_icon_8c_1acd41c12fe81446bff0920670641367de" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1414" refid="_misc_gameplay_functions_8c_1ac2c17ae77389f8e64e1227dbcb4d4662" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ac2c17ae77389f8e64e1227dbcb4d4662" kindref="member">RemoveSplint</ref>(<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player<sp/>)</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>entity<sp/>=<sp/>player.GetInventory().CreateInInventory(</highlight><highlight class="stringliteral">&quot;Splint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entity)</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity<sp/>=<sp/>player.SpawnEntityOnGroundOnCursorDir(</highlight><highlight class="stringliteral">&quot;Splint&quot;</highlight><highlight class="normal">,<sp/>0.5);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>attachment;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref><sp/>new_item<sp/>=<sp/><ref refid="class_item_base" kindref="compound">ItemBase</ref>.Cast(entity);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_class" kindref="compound">Class</ref>.<ref refid="group___enforce_1ga253ceb932745ea74ca4a4d3d9e8c12d7" kindref="member">CastTo</ref>(attachment,<sp/>player.GetItemOnSlot(</highlight><highlight class="stringliteral">&quot;Splint_Right&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>attachment<sp/>&amp;&amp;<sp/>attachment.GetType()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Splint_Applied&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_item)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MiscGameplayFunctions.TransferItemProperties(attachment,new_item);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().IsServer())</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Lower<sp/>health<sp/>level<sp/>of<sp/>splint<sp/>after<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_item.GetHealthLevel()<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newDmgLevel<sp/>=<sp/>new_item.GetHealthLevel()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>new_item.GetMaxHealth(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>newDmgLevel<sp/>)</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_health_1gadb82dd87ce264a07fd032d02d4e941fc" kindref="member">STATE_BADLY_DAMAGED</ref>:</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item.SetHealth(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>max<sp/>*<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_damage_1ga2fa53dcacec97d288912169736d6a712" kindref="member">DAMAGE_BADLY_DAMAGED_VALUE</ref><sp/>);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_health_1gad901009f01e8ccc389658079d68a27f3" kindref="member">STATE_DAMAGED</ref>:</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item.SetHealth(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>max<sp/>*<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_damage_1ga410393476cfaad308db809f436c9d49c" kindref="member">DAMAGE_DAMAGED_VALUE</ref><sp/>);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_health_1ga9f42d331e1d7c4d096cf17f05e8266dc" kindref="member">STATE_WORN</ref>:</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item.SetHealth(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>max<sp/>*<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_damage_1ga8ac05c00153ea22124412438e93924ff" kindref="member">DAMAGE_WORN_VALUE</ref><sp/>);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_health_1ga3908fcde0f2e91545d7e3a51fab2d5d0" kindref="member">STATE_RUINED</ref>:</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_item.SetHealth(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>max<sp/>*<sp/><ref refid="class_game_constants" kindref="compound">GameConstants</ref>.<ref refid="group___item_damage_1ga36b4f0269af3cd66ed6978cdc6bbda0f" kindref="member">DAMAGE_RUINED_VALUE</ref><sp/>);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachment.Delete();</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1468" refid="_misc_gameplay_functions_8c_1af364bfd417f724a8bb6cb60822ae69a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1af364bfd417f724a8bb6cb60822ae69a1" kindref="member">TeleportCheck</ref>(notnull<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player,<sp/>notnull<sp/><ref refid="classarray" kindref="compound">array</ref>&lt;ref<sp/><ref refid="classarray" kindref="compound">array&lt;float&gt;</ref>&gt;<sp/>safe_positions)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>player.GetSimulationTimeStamp()<sp/>&lt;<sp/>20<sp/>&amp;&amp;<sp/>!player.IsPersistentFlag(<ref refid="_persistent_flag_8c_1a2e53aa008161918f29ed229adc8f2f6a" kindref="member">PersistentFlag</ref>.AREA_PRESENCE)<sp/>)</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//simulation<sp/>time<sp/>is<sp/>bellow<sp/>a<sp/>threshold,<sp/>which<sp/>means<sp/>the<sp/>player<sp/>has<sp/>recently<sp/>connected,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>player<sp/>does<sp/>not<sp/>have<sp/>the<sp/>AREA_PRESENCE<sp/>flag<sp/>set,<sp/>which<sp/>means<sp/>they<sp/>were<sp/>not<sp/>inside<sp/>the<sp/>area<sp/>when<sp/>they<sp/>disconnected,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//that<sp/>means<sp/>they<sp/>just<sp/>spawned<sp/>into<sp/>a<sp/>contaminated<sp/>area,<sp/>lets<sp/>move<sp/>them<sp/>somewhere<sp/>safe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>player_pos<sp/>=<sp/>player.GetPosition();</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>closest_safe_pos<sp/>=<sp/>MiscGameplayFunctions.GetClosestSafePos(player_pos,<sp/>safe_positions);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(player_pos!=closest_safe_pos)</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest_safe_pos[1]<sp/>=<sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1a183e4d40b5a4c2a0c8435aa7293c4d1d" kindref="member">SurfaceY</ref>(closest_safe_pos[0],<sp/>closest_safe_pos[2]);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player.SetPosition(<sp/>closest_safe_pos<sp/>);</highlight><highlight class="comment">//...so<sp/>lets<sp/>teleport<sp/>them<sp/>somewhere<sp/>safe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DeveloperTeleport.SetPlayerPosition(player,<sp/>closest_safe_pos);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1ac23a43be6b3b9f4ad547f87224c955c2" kindref="member">RPCSingleParam</ref>(player,<sp/><ref refid="_e_r_p_cs_8c_1a6ce2d98a3b8fbdba5b450abf2d6eab37" kindref="member">ERPCs</ref>.RPC_WARNING_TELEPORT,<sp/>null,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>player.GetIdentity());</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player.SetPersistentFlag(<ref refid="_persistent_flag_8c_1a2e53aa008161918f29ed229adc8f2f6a" kindref="member">PersistentFlag</ref>.AREA_PRESENCE,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1492" refid="_misc_gameplay_functions_8c_1a66299ceef38e1dbe60504064e4485f1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a66299ceef38e1dbe60504064e4485f1e" kindref="member">GetClosestSafePos</ref>(<ref refid="classvector" kindref="compound">vector</ref><sp/>to_pos,<sp/>notnull<sp/><ref refid="classarray" kindref="compound">array</ref>&lt;ref<sp/><ref refid="classarray" kindref="compound">array&lt;float&gt;</ref>&gt;<sp/>positions)</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>closest_pos<sp/>=<sp/>to_pos;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>smallest_dist<sp/>=<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.MAX;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal">(<sp/><ref refid="classarray" kindref="compound">array&lt;float&gt;</ref><sp/>pos:positions)</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>vpos<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vpos[0]<sp/>=<sp/>pos[0];</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vpos[2]<sp/>=<sp/>pos[1];</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_pos[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/><ref refid="classvector" kindref="compound">vector</ref>.<ref refid="classvector_1a21d8662c860e105943718b2da59349e7" kindref="member">DistanceSq</ref>(to_pos,<sp/>vpos);</highlight><highlight class="comment">//2d<sp/>dist<sp/>sq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dist<sp/>&lt;<sp/>smallest_dist)</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallest_dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest_pos<sp/>=<sp/>vpos;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>closest_pos;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1513" refid="_misc_gameplay_functions_8c_1a58485640eaad0e0ce93296739ff427b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a58485640eaad0e0ce93296739ff427b4" kindref="member">GenerateAINoiseAtPosition</ref>(<ref refid="classvector" kindref="compound">vector</ref><sp/>position,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lifeTime,<sp/><ref refid="_noise_8c_1aceda78b4f4625e1c9901f7bf4a7f5cf0" kindref="member">NoiseParams</ref><sp/>noiseParams)</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().IsServer())</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_noise_system" kindref="compound">NoiseSystem</ref><sp/>noise<sp/>=<sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1a1393289b73e44697153238265f37c18e" kindref="member">GetNoiseSystem</ref>();</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noise)</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise.<ref refid="class_noise_system_1a48f3d6d9cb1e8ef5ebd9cd240ce41715" kindref="member">AddNoiseTarget</ref>(position,<sp/>lifeTime,<sp/>noiseParams);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525" refid="_misc_gameplay_functions_8c_1a9d275a414cca2f66bf80dc67dd13e662" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_stamina_handler_8c_1a22b34cd520305a7577f0e20eda2cc605" kindref="member">GetMinValue</ref>(<ref refid="classarray" kindref="compound">array&lt;float&gt;</ref><sp/>pArray)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minValue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pArray.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minValue<sp/>==<sp/>0<sp/>||<sp/>pArray.Get(i)<sp/>&lt;<sp/>minValue)</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minValue<sp/>=<sp/>pArray.Get(i);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minValue;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1539" refid="_misc_gameplay_functions_8c_1a60f4d664a5c006b8229ea80756e64faa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_stamina_handler_8c_1a54ab85733a33078d01d6cc68096ea231" kindref="member">GetMaxValue</ref>(<ref refid="classarray" kindref="compound">array&lt;float&gt;</ref><sp/>pArray)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxValue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pArray.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxValue<sp/>==<sp/>0<sp/>||<sp/>pArray.Get(i)<sp/>&gt;<sp/>maxValue)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxValue<sp/>=<sp/>pArray.Get(i);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxValue;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1553" refid="_misc_gameplay_functions_8c_1a96942fd22337b27cdab9034b4a5f2d86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a96942fd22337b27cdab9034b4a5f2d86" kindref="member">GetItemDisplayName</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="gameplay_8c_1aebb1fa6632d513bc849994e7b6c9c93d" kindref="member">GetGame</ref>().<ref refid="class_c_game_1a5229d210233da08b75737034f925c518" kindref="member">ConfigGetTextOut</ref>(</highlight><highlight class="stringliteral">&quot;CfgVehicles<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>type<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>displayName&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558" refid="_misc_gameplay_functions_8c_1aa42d8ab22bb17e9a84adee2833d353ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1aa42d8ab22bb17e9a84adee2833d353ab" kindref="member">IsComponentInSelection</ref>(<ref refid="classarray" kindref="compound">array&lt;Selection&gt;</ref><sp/>pSelection,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pCompName)</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSelection.Count()<sp/>==<sp/>0<sp/>||<sp/>pCompName.<ref refid="group___strings_1ga012b133f69754b6a99ba29ce5f11c348" kindref="member">Length</ref>()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pSelection.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCompName.<ref refid="group___strings_1gaf7bcbd43039fc0ff5a8f7a96d4586a54" kindref="member">ToLower</ref>();</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSelection[i]<sp/>&amp;&amp;<sp/>pSelection[i].<ref refid="group___widget_a_p_i_1gac97112280cc4435c8df3c88070c839b4" kindref="member">GetName</ref>()<sp/>==<sp/>pCompName)</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1577" refid="_misc_gameplay_functions_8c_1a330e8e9d9824258afb5cd88d1e614dc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_day_z_game_8c_1aa9cad9c6253aff40a2462af9ab77b205" kindref="member">GetComponentIndex</ref>(<ref refid="classarray" kindref="compound">array&lt;Selection&gt;</ref><sp/>pSelection,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pCompName)</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!MiscGameplayFunctions.IsComponentInSelection(pSelection,<sp/>pCompName))</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="gameplay_8c_1a3b2f70215d99f89322d4399b4afa1010" kindref="member">INDEX_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pSelection.Count();<sp/>++i)</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCompName.<ref refid="group___strings_1gaf7bcbd43039fc0ff5a8f7a96d4586a54" kindref="member">ToLower</ref>();</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSelection[i]<sp/>&amp;&amp;<sp/>pSelection[i].<ref refid="group___widget_a_p_i_1gac97112280cc4435c8df3c88070c839b4" kindref="member">GetName</ref>()<sp/>==<sp/>pCompName)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="gameplay_8c_1a3b2f70215d99f89322d4399b4afa1010" kindref="member">INDEX_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1596" refid="_misc_gameplay_functions_8c_1a45d459e6a38126e354498f0de010ddbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a45d459e6a38126e354498f0de010ddbe" kindref="member">RemoveAllAttachedChildrenByTypename</ref>(notnull<sp/><ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>parent,<sp/><ref refid="classarray" kindref="compound">array&lt;typename&gt;</ref><sp/>listOfTypenames)</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listOfTypenames.Count()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>child<sp/>=<sp/><ref refid="class_object" kindref="compound">Object</ref>.Cast(parent.GetChildren());</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(child)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!child.IsInherited(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref>))</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child.IsAnyInherited(listOfTypenames))</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>pos<sp/>=<sp/>child.GetPosition();</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_object" kindref="compound">Object</ref><sp/>childToDelete<sp/>=<sp/>child;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/><ref refid="class_object" kindref="compound">Object</ref>.Cast(child.GetSibling());</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.RemoveChild(childToDelete,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>m4[4];</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_math3_d" kindref="compound">Math3D</ref>.<ref refid="group___math3_d_a_p_i_1gad69368d7b5e1fcc6c3c8517d43adb443" kindref="member">MatrixIdentity4</ref>(m4);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m4[3]<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childToDelete.SetTransform(m4);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childToDelete.PlaceOnSurface();</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625" refid="class_destroy_item_in_corpses_hands_and_create_new_on_gnd_lambda" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_destroy_item_in_corpses_hands_and_create_new_on_gnd_lambda" kindref="compound">DestroyItemInCorpsesHandsAndCreateNewOnGndLambda</ref><sp/>:<sp/><ref refid="class_replace_and_destroy_lambda" kindref="compound">ReplaceAndDestroyLambda</ref></highlight></codeline>
<codeline lineno="1626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@NOTE<sp/>m_Player<sp/>==<sp/>target<sp/>player<sp/>-<sp/>i.e.<sp/>restrained<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628" refid="class_destroy_item_in_corpses_hands_and_create_new_on_gnd_lambda_1ab55946a83077980920454354662046be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_destroy_item_in_corpses_hands_and_create_new_on_gnd_lambda_1ab55946a83077980920454354662046be" kindref="member">DestroyItemInCorpsesHandsAndCreateNewOnGndLambda</ref>(<ref refid="class_entity_a_i" kindref="compound">EntityAI</ref><sp/>old_item,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>new_item_type,<sp/><ref refid="class_player_base" kindref="compound">PlayerBase</ref><sp/>player,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>destroy<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref><sp/>gnd<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_inventory_location" kindref="compound">InventoryLocation</ref>;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/>mtx[4];</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_item)</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_item.GetTransform(mtx);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player.GetTransform(mtx);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnd.<ref refid="class_inventory_location_1aaa08a01038297771eba7c209c882d551" kindref="member">SetGround</ref>(NULL,<sp/>mtx);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OverrideNewLocation(gnd);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1640" refid="class_destroy_item_in_corpses_hands_and_create_new_on_gnd_lambda_1a8961ba680224ae905280019b0eed2709" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_destroy_item_in_corpses_hands_and_create_new_on_gnd_lambda_1a8961ba680224ae905280019b0eed2709" kindref="member">RemoveOldItemFromLocation</ref>()</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.RemoveOldItemFromLocation();</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a02917914db83b7759e19cb7450c92354" kindref="member">m_Player</ref>.GetHumanInventory().OnEntityInHandsDestroyed(m_OldLocation);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>was<sp/>created<sp/>since<sp/>IsObjectObstructed<sp/>is<sp/>often<sp/>called<sp/>multiple<sp/>times<sp/>in<sp/>one<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="comment">//<sp/>And<sp/>apparently<sp/>it<sp/>seems<sp/>that<sp/>keeping<sp/>this<sp/>data<sp/>in<sp/>one<sp/>struct<sp/>seems<sp/>to<sp/>be<sp/>more<sp/>efficient<sp/>than<sp/>creating<sp/>the<sp/>variables<sp/>dozens<sp/>of<sp/>times<sp/>per<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref><sp/></highlight><highlight class="comment">//<sp/>Pretending<sp/>this<sp/>is<sp/>a<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Outside<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652" refid="_misc_gameplay_functions_8c_1a0643e0f472dc01079cc541f2ef6810d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a0643e0f472dc01079cc541f2ef6810d6" kindref="member">RaycastStart</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1653" refid="_misc_gameplay_functions_8c_1a42ed89b2c00eb2ed45d1a3a61bedc63e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a42ed89b2c00eb2ed45d1a3a61bedc63e" kindref="member">TotalObjects</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inside<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656" refid="_misc_gameplay_functions_8c_1a62f89cd5d7000a04dd1f79945df1911c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a62f89cd5d7000a04dd1f79945df1911c" kindref="member">ObjectCenterPos</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1657" refid="_misc_gameplay_functions_8c_1a5d23911590529a52ef51da873b21c072" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a5d23911590529a52ef51da873b21c072" kindref="member">ObjectContactPos</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1658" refid="_misc_gameplay_functions_8c_1a58616217dbb930fa83fde9356a396d2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvector" kindref="compound">vector</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a58616217dbb930fa83fde9356a396d2d" kindref="member">ObjectContactDir</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1659" refid="_misc_gameplay_functions_8c_1ab5bff0c270c23bdc6f9d1c000d8c5232" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1ab5bff0c270c23bdc6f9d1c000d8c5232" kindref="member">ContactComponent</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1660" refid="_misc_gameplay_functions_8c_1a034428c897382bb35e841993ed7fec76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ref<sp/><ref refid="classarray" kindref="compound">array&lt;ref RaycastRVResult&gt;</ref><sp/><ref refid="_misc_gameplay_functions_8c_1a034428c897382bb35e841993ed7fec76" kindref="member">HitProxyObjects</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;ref RaycastRVResult&gt;</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1661" refid="_misc_gameplay_functions_8c_1a6ad732de5cd6794e2759cbd81a7a5aef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ref<sp/>set&lt;Object&gt;<sp/><ref refid="_misc_gameplay_functions_8c_1a6ad732de5cd6794e2759cbd81a7a5aef" kindref="member">HitObjects</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>set&lt;Object&gt;;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1663" refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1a6e494ec3ce6eac50f199b34c84d93b1d" kindref="member">IsObjectObstructedCache</ref>(<ref refid="classvector" kindref="compound">vector</ref><sp/>rayCastStart,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalObjects)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a0643e0f472dc01079cc541f2ef6810d6" kindref="member">RaycastStart</ref><sp/>=<sp/>rayCastStart;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a42ed89b2c00eb2ed45d1a3a61bedc63e" kindref="member">TotalObjects</ref><sp/>=<sp/>totalObjects;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>inside<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670" refid="_misc_gameplay_functions_8c_1aea2a8b1459158c87bd97b2541537126a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_misc_gameplay_functions_8c_1aea2a8b1459158c87bd97b2541537126a" kindref="member">ClearCache</ref>()</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>What<sp/>is<sp/>fastest<sp/>to<sp/>assign<sp/>to<sp/>vector,<sp/>&quot;0<sp/>0<sp/>0&quot;<sp/>or<sp/>Vector(0,<sp/>0,<sp/>0)<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a62f89cd5d7000a04dd1f79945df1911c" kindref="member">ObjectCenterPos</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a5d23911590529a52ef51da873b21c072" kindref="member">ObjectContactPos</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a58616217dbb930fa83fde9356a396d2d" kindref="member">ObjectContactDir</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1ab5bff0c270c23bdc6f9d1c000d8c5232" kindref="member">ContactComponent</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a034428c897382bb35e841993ed7fec76" kindref="member">HitProxyObjects</ref>.Clear();</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_misc_gameplay_functions_8c_1a6ad732de5cd6794e2759cbd81a7a5aef" kindref="member">HitObjects</ref>.Clear();</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*void<sp/>Clear()</highlight></codeline>
<codeline lineno="1683"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1684"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1685"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Static/MiscGameplayFunctions.c"/>
  </compounddef>
</doxygen>
