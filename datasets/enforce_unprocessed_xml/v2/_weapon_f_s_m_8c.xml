<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="_weapon_f_s_m_8c" kind="file" language="C++">
    <compoundname>WeaponFSM.c</compoundname>
    <innerclass refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4" prot="public">HFSMBase&lt; WeaponStateBase, WeaponEventBase, WeaponActionBase, WeaponGuardBase &gt;</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="class_weapon_f_s_m" refkind="compound"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_weapon_f_s_m" kindref="compound">WeaponFSM</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base" kindref="compound">HFSMBase</ref>&lt;WeaponStateBase,<sp/>WeaponEventBase,<sp/>WeaponActionBase,<sp/>WeaponGuardBase&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1aa30cfc2c78f8a0a45517792f4acdd48e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_SYNCHRONIZE_ATTEMPTS<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="7" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a99d38d211257f51fc912036252e56889" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MIN_SYNCHRONIZE_INTERVAL<sp/>=<sp/>3000;<sp/></highlight><highlight class="comment">//<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1aff83827170f51b266307d1add59e2afc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RESET_SYNCHRONIZE_THRESHOLD<sp/>=<sp/>3600000;<sp/></highlight><highlight class="comment">//<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1afb03a16a1df86360c687a3fa1bc9985a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1afb03a16a1df86360c687a3fa1bc9985a" kindref="member">m_SynchronizeAttempts</ref>;</highlight></codeline>
<codeline lineno="10" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a4a88db4c4ada7c3d0ddd538ab4cb6134" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a4a88db4c4ada7c3d0ddd538ab4cb6134" kindref="member">m_LastSynchronizeTime</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1aa886ecac7af072a4cb3e2f3e3bc08d22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_NextStateId<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="13" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1ac978db76bb3834c3ff77d0574c1329aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>ref<sp/><ref refid="classarray" kindref="compound">array&lt;WeaponStateBase&gt;</ref><sp/>m_UniqueStates<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;WeaponStateBase&gt;</ref>;<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a0a6d548e39e2404b64acd5411b09caba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a0a6d548e39e2404b64acd5411b09caba" kindref="member">SetInternalID</ref>(<ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>state)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>&amp;&amp;<sp/>state.<ref refid="class_weapon_state_base_1a4ece586a64173d7526e0c4997d97f214" kindref="member">GetInternalStateID</ref>()<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.<ref refid="class_weapon_state_base_1acf59c5609264e2cfc2eaed43bb116a53" kindref="member">SetInternalStateID</ref>(m_NextStateId);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(LogManager.IsWeaponLogEnable())<sp/>{<sp/>wpnDebugSpam(&quot;[wpnfsm]<sp/>&quot;<sp/>+<sp/>Object.GetDebugName(m_weapon)<sp/>+<sp/>&quot;<sp/>unique<sp/>state=&quot;<sp/>+<sp/>state<sp/>+<sp/>&quot;<sp/>has<sp/>id=&quot;<sp/>+<sp/>m_NextStateId);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_UniqueStates.Insert(state);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_NextStateId;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a39c6c17bbe295f0b340e09b9aa2e0370" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a39c6c17bbe295f0b340e09b9aa2e0370" kindref="member">AddTransition</ref>(<ref refid="class_f_s_m_transition" kindref="compound">FSMTransition&lt;WeaponStateBase, WeaponEventBase, WeaponActionBase, WeaponGuardBase&gt;</ref><sp/>t)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.AddTransition(t);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetInternalID(t.m_srcState);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetInternalID(t.m_dstState);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a81eb0c468b2fe3a4fe62441b3f47f8e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="_f_s_m_base_8c_1a09f6ec45b8f9309647a7b1eb893bc29f" kindref="member">ProcessEventResult</ref><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a81eb0c468b2fe3a4fe62441b3f47f8e0" kindref="member">ProcessLocalTransition</ref>(<ref refid="class_f_s_m_transition" kindref="compound">FSMTransition&lt;WeaponStateBase, WeaponEventBase, WeaponActionBase, WeaponGuardBase&gt;</ref><sp/>t,<sp/><ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_f_s_m_base_8c_1a09f6ec45b8f9309647a7b1eb893bc29f" kindref="member">ProcessEventResult</ref><sp/>res<sp/>=<sp/>super.ProcessLocalTransition(t,<sp/>e);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValidateAndRepair();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a121dc2e835caf00f21e1150f7e03983b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a121dc2e835caf00f21e1150f7e03983b" kindref="member">ProcessAbortEvent</ref>(<ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e,<sp/>out<sp/><ref refid="_f_s_m_base_8c_1a09f6ec45b8f9309647a7b1eb893bc29f" kindref="member">ProcessEventResult</ref><sp/>result)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>res<sp/>=<sp/>super.ProcessAbortEvent(e,<sp/>result);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValidateAndRepair();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1aff48945f386ea092ea49ec243f5f1796" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="_f_s_m_base_8c_1a09f6ec45b8f9309647a7b1eb893bc29f" kindref="member">ProcessEventResult</ref><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1aff48945f386ea092ea49ec243f5f1796" kindref="member">ProcessAbortTransition</ref>(<ref refid="class_f_s_m_transition" kindref="compound">FSMTransition&lt;WeaponStateBase, WeaponEventBase, WeaponActionBase, WeaponGuardBase&gt;</ref><sp/>t,<sp/><ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_f_s_m_base_8c_1a09f6ec45b8f9309647a7b1eb893bc29f" kindref="member">ProcessEventResult</ref><sp/>res<sp/>=<sp/>super.ProcessAbortTransition(t,<sp/>e);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValidateAndRepair();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1adbad6d95dace65d55f3737d8d773a806" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1adbad6d95dace65d55f3737d8d773a806" kindref="member">FindStateForInternalID</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state_count<sp/>=<sp/>m_UniqueStates.Count();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>state_count;<sp/>++idx)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state_id<sp/>=<sp/>m_UniqueStates.Get(idx).<ref refid="class_weapon_state_base_1a4ece586a64173d7526e0c4997d97f214" kindref="member">GetInternalStateID</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_id<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_UniqueStates.Get(idx);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1ac5e58979a0005f2a048074474b41a9e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1ac5e58979a0005f2a048074474b41a9e2" kindref="member">FindStableStateForID</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>m_Transitions.Count();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weapon___base_8c_1aad9c748f817f5536f4f2bfd213b4afc1" kindref="member">WeaponTransition</ref><sp/>trans<sp/>=<sp/>m_Transitions.Get(i);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/>state<sp/>=<sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref>.Cast(trans.m_srcState);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>state.<ref refid="class_weapon_stable_state_1a71d886cf9e101812137133a25a5efc5d" kindref="member">GetCurrentStateID</ref>())</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a3033531843a746d7181e7e167df5f6dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a3033531843a746d7181e7e167df5f6dc" kindref="member">LoadAndSetCurrentFSMState</ref>(<ref refid="class_serializer" kindref="compound">ParamsReadContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_state_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx.<ref refid="class_serializer_1a9a38a9c5322133ee30fe87a3a4c0659e" kindref="member">Read</ref>(curr_state_id))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>LoadCurrentFSMState<sp/>-<sp/>cannot<sp/>read<sp/>current<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>state<sp/>=<sp/>FindStateForInternalID(curr_state_id);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Terminate();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>synced<sp/>current<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>state<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>curr_state_id);<sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_stamina_handler_8c_1aff669510956ec2c2cc6c60ed37ca7d63" kindref="member">m_State</ref><sp/>=<sp/>state;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_effect_8c_1a07aaf1227e4d645f15e0a964f54ef291" kindref="member">Start</ref>(null,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>LoadCurrentFSMState<sp/>-<sp/>cannot<sp/>find<sp/>state<sp/>for<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>curr_state_id);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a7764df4dff05076f74167b0ce50bdc43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a7764df4dff05076f74167b0ce50bdc43" kindref="member">LoadCurrentFSMState</ref>(<ref refid="class_serializer" kindref="compound">ParamsReadContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LoadAndSetCurrentFSMState(ctx,<sp/>version))</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="_stamina_handler_8c_1aff669510956ec2c2cc6c60ed37ca7d63" kindref="member">m_State</ref>.LoadCurrentFSMState(ctx,<sp/>version);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1acea538bf7a4dc05b05c22218a83bee44" kindref="member">wpnDebugSpam</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>LoadCurrentFSMState<sp/>-<sp/>loaded<sp/>current<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>GetCurrentState());<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a007b947e912d1e84eca73d5c8bd45901" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a007b947e912d1e84eca73d5c8bd45901" kindref="member">LoadCurrentUnstableFSMState</ref>(<ref refid="class_serializer" kindref="compound">ParamsWriteContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LoadAndSetCurrentFSMState(ctx,<sp/>version))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>all<sp/>substates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state_count<sp/>=<sp/>m_UniqueStates.Count();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>state_count;<sp/>++idx)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1acea538bf7a4dc05b05c22218a83bee44" kindref="member">wpnDebugSpam</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>LoadCurrentUnstableFSMState<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>idx<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>state_count<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_UniqueStates.Get(idx).GetInternalStateID()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_UniqueStates.Get(idx));<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_UniqueStates.Get(idx).LoadCurrentFSMState(ctx,<sp/>version))</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>LoadCurrentUnstableFSMState<sp/>-<sp/>cannot<sp/>load<sp/>unique<sp/>state<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>idx<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>state_count<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_UniqueStates.Get(idx).GetInternalStateID()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_UniqueStates.Get(idx));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a547396c4dcbe758656386371d79b4163" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a547396c4dcbe758656386371d79b4163" kindref="member">SaveCurrentFSMState</ref>(<ref refid="class_serializer" kindref="compound">ParamsWriteContext</ref><sp/>ctx)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>state<sp/>=<sp/>GetCurrentState();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_state_id<sp/>=<sp/>state.<ref refid="class_weapon_state_base_1a4ece586a64173d7526e0c4997d97f214" kindref="member">GetInternalStateID</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>SaveCurrentFSMState<sp/>-<sp/>saving<sp/>current<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>GetCurrentState()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>curr_state_id);<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx.<ref refid="class_serializer_1a3568bd9439217225013ea9906eb09a3f" kindref="member">Write</ref>(curr_state_id))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>SaveCurrentFSMState<sp/>-<sp/>cannot<sp/>save<sp/>curr_state_id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>curr_state_id);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>only<sp/>current<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!state.<ref refid="class_weapon_state_base_1afee42f83eecec84d25577c54eaafaea3" kindref="member">SaveCurrentFSMState</ref>(ctx))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>SaveCurrentFSMState<sp/>-<sp/>cannot<sp/>save<sp/>currrent<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+state);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a2b9c22cee987009d8b509d91d72371a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a2b9c22cee987009d8b509d91d72371a1" kindref="member">SaveCurrentUnstableFSMState</ref>(<ref refid="class_serializer" kindref="compound">ParamsWriteContext</ref><sp/>ctx)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>state<sp/>=<sp/>GetCurrentState();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_state_id<sp/>=<sp/>state.<ref refid="class_weapon_state_base_1a4ece586a64173d7526e0c4997d97f214" kindref="member">GetInternalStateID</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>SaveCurrentUnstableFSMState<sp/>-<sp/>saving<sp/>current<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>GetCurrentState()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>curr_state_id);<sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx.<ref refid="class_serializer_1a3568bd9439217225013ea9906eb09a3f" kindref="member">Write</ref>(curr_state_id))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>SaveCurrentFSMState<sp/>-<sp/>cannot<sp/>save<sp/>curr_state_id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>curr_state_id);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>all<sp/>substates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state_count<sp/>=<sp/>m_UniqueStates.Count();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>state_count;<sp/>++idx)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state_id<sp/>=<sp/>m_UniqueStates.Get(idx).GetInternalStateID();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_id<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1acea538bf7a4dc05b05c22218a83bee44" kindref="member">wpnDebugSpam</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>SaveCurrentUnstableFSMState<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>idx<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>state_count<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>state_id<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>name=&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_UniqueStates.Get(idx));<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_UniqueStates.Get(idx).SaveCurrentFSMState(ctx))</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;SaveCurrentUnstableFSMState<sp/>-<sp/>cannot<sp/>save<sp/>unique<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_UniqueStates.Get(idx)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>idx=&quot;</highlight><highlight class="normal"><sp/>+<sp/>idx<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>state_count<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>state_id);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>SaveCurrentUnstableFSMState<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_UniqueStates.Get(idx)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>unassigned<sp/>ID!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1ae7d3938684ce733ea27a97ab89ef2ed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1ae7d3938684ce733ea27a97ab89ef2ed9" kindref="member">ValidateAndRepair</ref>()</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internal_ValidateAndRepair();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a47c5052caf7a6925483e8748a3503a07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a47c5052caf7a6925483e8748a3503a07" kindref="member">Internal_ValidateAndRepair</ref>()</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>repaired<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>repair<sp/>stable<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/>state<sp/>=<sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref>.Cast(<ref refid="_stamina_handler_8c_1aff669510956ec2c2cc6c60ed37ca7d63" kindref="member">m_State</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>&amp;&amp;<sp/>state.<ref refid="class_weapon_stable_state_1ac25b31cf36d1dadc8120054f1eb43e5e" kindref="member">IsRepairEnabled</ref>())</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref><sp/>weapon<sp/>=<sp/>state.m_weapon;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weapon)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repaired<sp/>|=<sp/>ValidateAndRepairHelper(weapon,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MagazineRepair&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.<ref refid="class_weapon_stable_state_1ae6fd560194ec4459eb3731047b22d510" kindref="member">HasMagazine</ref>(),<sp/>(<sp/>weapon.GetMagazine(0)<sp/>!=<sp/>null<sp/>),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WeaponEventAttachMagazine,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WeaponEventDetachMagazine,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repaired<sp/>|=<sp/>ValidateAndRepairHelper(weapon,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;JammedRepair&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.<ref refid="class_weapon_stable_state_1a17fafa12bb56d472c515b8dc2a1669a8" kindref="member">IsJammed</ref>(),<sp/>weapon.IsJammed(),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WeaponEventTriggerToJam,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WeaponEventUnjam,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weapon.IsJammed())</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>repaired;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMuzzles<sp/>=<sp/>weapon.GetMuzzleCount();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(nMuzzles)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repaired<sp/>|=<sp/>ValidateAndRepairHelper(weapon,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ChamberFiredRepair&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.IsChamberFiredOut(0),<sp/>weapon.IsChamberFiredOut(0),</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WeaponEventTrigger,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WeaponEventMechanism,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repaired<sp/>|=<sp/>ValidateAndRepairHelper(weapon,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ChamberRepair&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.IsChamberFull(0),<sp/>weapon.IsChamberFull(0),</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WeaponEventLoad1Bullet,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WeaponEventMechanism,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nMuzzles;<sp/>++i)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repaired<sp/>|=<sp/>ValidateAndRepairHelper(weapon,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ChamberFiredRepair&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.IsChamberFiredOut(i),<sp/>weapon.IsChamberFiredOut(i),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null,<sp/>null,<sp/></highlight><highlight class="comment">//<sp/>A<sp/>bit<sp/>brute<sp/>forced,<sp/>not<sp/>really<sp/>any<sp/>clean<sp/>way<sp/>to<sp/>transition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repaired<sp/>|=<sp/>ValidateAndRepairHelper(weapon,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ChamberRepair&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.IsChamberFull(i),<sp/>weapon.IsChamberFull(i),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null,<sp/>null,<sp/></highlight><highlight class="comment">//<sp/>A<sp/>bit<sp/>brute<sp/>forced,<sp/>not<sp/>really<sp/>any<sp/>clean<sp/>way<sp/>to<sp/>transition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>repaired;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a8e24e0c05a0b315f2b16c1feb4c9d3f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a8e24e0c05a0b315f2b16c1feb4c9d3f4" kindref="member">ValidateAndRepairHelper</ref>(<ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref><sp/>weapon,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_plugin_day_z_infected_debug_8c_1a8ccf841cb59e451791bcb2e1ac4f1edc" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stateCondition,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gunCondition,<sp/><ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e1,<sp/><ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e2,<sp/>out<sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/>state)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>weapon.GetDebugName(weapon)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ValidateAndRepair<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="_plugin_day_z_infected_debug_8c_1a8ccf841cb59e451791bcb2e1ac4f1edc" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="_stamina_handler_8c_1aff669510956ec2c2cc6c60ed37ca7d63" kindref="member">m_State</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>state:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>stateCondition<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>weapon:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>gunCondition);<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stateCondition<sp/>!=<sp/>gunCondition)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/>repairedState;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Seeing<sp/>this<sp/>message<sp/>is<sp/>not<sp/>TOO<sp/>bad,<sp/>it<sp/>just<sp/>means<sp/>this<sp/>system<sp/>is<sp/>working</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>simply<sp/>being<sp/>listed<sp/>in<sp/>the<sp/>logs<sp/>to<sp/>identify<sp/>how<sp/>much<sp/>the<sp/>FSM<sp/>state<sp/>and<sp/>weapon<sp/>state<sp/>still<sp/>desyncs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>can<sp/>be<sp/>because<sp/>of<sp/>a<sp/>myriad<sp/>of<sp/>causes,<sp/>such<sp/>as<sp/>incorrectly<sp/>set<sp/>up<sp/>transitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Or<sp/>simply<sp/>certain<sp/>timings<sp/>of<sp/>certain<sp/>actions<sp/>or<sp/>interrupts<sp/>lined<sp/>up<sp/>perfectly,<sp/>which<sp/>can<sp/>have<sp/>repro<sp/>rates<sp/>such<sp/>as<sp/>1/300</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>ValidateAndRepair<sp/>Attempting<sp/>to<sp/>repair:<sp/>%1<sp/>-<sp/>%2<sp/>-<sp/>%3<sp/>-<sp/>state:<sp/>%4<sp/>!=<sp/>weapon:<sp/>%5&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetDebugName(weapon),<sp/><ref refid="_plugin_day_z_infected_debug_8c_1a8ccf841cb59e451791bcb2e1ac4f1edc" kindref="member">name</ref>,<sp/><ref refid="_stamina_handler_8c_1aff669510956ec2c2cc6c60ed37ca7d63" kindref="member">m_State</ref>,<sp/>stateCondition,<sp/>gunCondition));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e1<sp/>&amp;&amp;<sp/>e2)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repairedState<sp/>=<sp/>ValidateAndRepairStateFinder(gunCondition,<sp/>e1,<sp/>e2,<sp/>state);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repairedState)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Terminate();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_stamina_handler_8c_1aff669510956ec2c2cc6c60ed37ca7d63" kindref="member">m_State</ref><sp/>=<sp/>repairedState;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_effect_8c_1a07aaf1227e4d645f15e0a964f54ef291" kindref="member">Start</ref>(null,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>repairedState;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.SyncSelectionState(state.HasBullet(),<sp/>state.HasMagazine());</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repairedState.SyncAnimState();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>weapon.GetDebugName(weapon)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ValidateAndRepair<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="_plugin_day_z_infected_debug_8c_1a8ccf841cb59e451791bcb2e1ac4f1edc" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Result<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="_stamina_handler_8c_1aff669510956ec2c2cc6c60ed37ca7d63" kindref="member">m_State</ref>);<sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>ditch<sp/>effort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_SynchronizeAttempts<sp/>&lt;<sp/>MAX_SYNCHRONIZE_ATTEMPTS)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/><ref refid="_day_z_game_8c_1a5b4f7935d7cbb89f7a4610452d633707" kindref="member">g_Game</ref>.GetTime();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeDiff<sp/>=<sp/>currentTime<sp/>-<sp/>m_LastSynchronizeTime;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Careful<sp/>with<sp/>calling<sp/>synchronize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeDiff<sp/>&gt;<sp/>MIN_SYNCHRONIZE_INTERVAL)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>lot<sp/>of<sp/>time<sp/>passed<sp/>since<sp/>last<sp/>attempt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>a<sp/>possibility<sp/>the<sp/>weapon<sp/>was<sp/>fixed<sp/>for<sp/>a<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeDiff<sp/>&gt;<sp/>RESET_SYNCHRONIZE_THRESHOLD)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SynchronizeAttempts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>call<sp/>this<sp/>on<sp/>server<sp/>or<sp/>in<sp/>SP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Synchronize<sp/>will<sp/>ask<sp/>the<sp/>server<sp/>for<sp/>its<sp/>FSM<sp/>state<sp/>anyways</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_day_z_game_8c_1a5b4f7935d7cbb89f7a4610452d633707" kindref="member">g_Game</ref>.IsServer())</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.RandomizeFSMState();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.Synchronize();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_SynchronizeAttempts;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_LastSynchronizeTime<sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnFailThresholdBreached(weapon,<sp/><ref refid="_plugin_day_z_infected_debug_8c_1a8ccf841cb59e451791bcb2e1ac4f1edc" kindref="member">name</ref>,<sp/>stateCondition,<sp/>gunCondition);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a6cb72d561154285bebee4d88f7041b5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a6cb72d561154285bebee4d88f7041b5d" kindref="member">OnFailThresholdBreached</ref>(<ref refid="class_weapon" kindref="compound">Weapon</ref><sp/>weapon,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_plugin_day_z_infected_debug_8c_1a8ccf841cb59e451791bcb2e1ac4f1edc" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stateCondition,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gunCondition)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>seeing<sp/>THIS<sp/>one,<sp/>after<sp/>the<sp/>one<sp/>above,<sp/>THIS<sp/>one<sp/>CAN<sp/>be<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>the<sp/>state<sp/>was<sp/>identified<sp/>as<sp/>being<sp/>desynced<sp/>with<sp/>the<sp/>actual<sp/>weapon<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>the<sp/>system<sp/>was<sp/>unable<sp/>to<sp/>fix<sp/>it,<sp/>so<sp/>the<sp/>weapon<sp/>is<sp/>now<sp/>working<sp/>improperly<sp/>or<sp/>not<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>even<sp/>the<sp/>possibility<sp/>that<sp/>this<sp/>weapon<sp/>is<sp/>now<sp/>permanently<sp/>broken</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>%1<sp/>ValidateAndRepair<sp/>THRESHOLD<sp/>BREACH<sp/>-<sp/>%2<sp/>-<sp/>%3<sp/>-<sp/>state:<sp/>%4<sp/>!=<sp/>weapon:<sp/>%5&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetDebugName(weapon),<sp/><ref refid="_plugin_day_z_infected_debug_8c_1a8ccf841cb59e451791bcb2e1ac4f1edc" kindref="member">name</ref>,<sp/><ref refid="_stamina_handler_8c_1aff669510956ec2c2cc6c60ed37ca7d63" kindref="member">m_State</ref>,<sp/>stateCondition,<sp/>gunCondition));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>point<sp/>might<sp/>even<sp/>consider<sp/>just<sp/>deleting<sp/>the<sp/>weapon<sp/>:c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a1d473a6c6e1925e23503d6f1ed8a3557" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a1d473a6c6e1925e23503d6f1ed8a3557" kindref="member">ValidateAndRepairStateFinder</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>condition,<sp/><ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e1,<sp/><ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e2,<sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/>state)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>interState;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interState<sp/>=<sp/>FindTransitionState(state,<sp/>e1);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interState<sp/>=<sp/>FindTransitionState(state,<sp/>e2);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WeaponEventHumanCommandActionFinished;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref>.Cast(FindGuardedTransitionState(interState,<sp/>e));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a005969f642bf644c211097ef9c234859" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a005969f642bf644c211097ef9c234859" kindref="member">OnStoreLoad</ref>(<ref refid="class_serializer" kindref="compound">ParamsReadContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="class_serializer_1a9a38a9c5322133ee30fe87a3a4c0659e" kindref="member">Read</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/>state<sp/>=<sp/>FindStableStateForID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Terminate();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>OnStoreLoad<sp/>-<sp/>loading<sp/>current<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>state<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_stamina_handler_8c_1aff669510956ec2c2cc6c60ed37ca7d63" kindref="member">m_State</ref><sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_effect_8c_1a07aaf1227e4d645f15e0a964f54ef291" kindref="member">Start</ref>(null,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>Warning!<sp/>OnStoreLoad<sp/>-<sp/>cannot<sp/>load<sp/>curent<sp/>weapon<sp/>state,<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1ad87079cb47fdca803a4310aad08f95bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1ad87079cb47fdca803a4310aad08f95bc" kindref="member">GetCurrentStableStateID</ref>()</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>if<sp/>current<sp/>state<sp/>is<sp/>stable<sp/>state<sp/>then<sp/>return<sp/>ID<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/>state<sp/>=<sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref>.Cast(GetCurrentState());</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="class_weapon_stable_state_1a71d886cf9e101812137133a25a5efc5d" kindref="member">GetCurrentStateID</ref>();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>otherwise<sp/>find<sp/>closest<sp/>stable<sp/>state<sp/>(by<sp/>looking<sp/>on<sp/>abort<sp/>event)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>abort_dst<sp/>=<sp/>FindAbortDestinationState(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WeaponEventHumanCommandActionAborted(null));</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/>closest_stable_state<sp/>=<sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref>.Cast(abort_dst);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closest_stable_state)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>Save<sp/>occured<sp/>in<sp/>fsm<sp/>transition!<sp/>current<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>GetCurrentState()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>closes<sp/>stable<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>closest_stable_state<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>closest_stable_state.<ref refid="class_weapon_stable_state_1a71d886cf9e101812137133a25a5efc5d" kindref="member">GetCurrentStateID</ref>());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>closest_stable_state.<ref refid="class_weapon_stable_state_1a71d886cf9e101812137133a25a5efc5d" kindref="member">GetCurrentStateID</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1gaaa9351d895a1f244a26fd635c378c536" kindref="member">Print</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>Warning!<sp/>Save<sp/>occured<sp/>in<sp/>fsm<sp/>transition!<sp/>GetCurrentStateID<sp/>-<sp/>cannot<sp/>find<sp/>closest<sp/>weapon<sp/>stable<sp/>state.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a2010ad60a87f54c0f43f0f63696ace6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a2010ad60a87f54c0f43f0f63696ace6b" kindref="member">GetInternalStateID</ref>()</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>curr<sp/>=<sp/>GetCurrentState();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>curr.<ref refid="class_weapon_state_base_1a4ece586a64173d7526e0c4997d97f214" kindref="member">GetInternalStateID</ref>();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1adeff2d791ec8dcf75c7969b5901caa8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1adeff2d791ec8dcf75c7969b5901caa8e" kindref="member">OnStoreSave</ref>(<ref refid="class_serializer" kindref="compound">ParamsWriteContext</ref><sp/>ctx)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>GetCurrentStableStateID();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1a968ee263a34343914e7219fd0b81cde1" kindref="member">wpnDebugSpamALot</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>OnStoreSave<sp/>-<sp/>saving<sp/>current<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/>GetCurrentState()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="class_serializer_1a3568bd9439217225013ea9906eb09a3f" kindref="member">Write</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a4cc92ee3a6b6a9da47f97db5d337aa5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a4cc92ee3a6b6a9da47f97db5d337aa5f" kindref="member">RandomizeFSMState</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasBullet,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasMagazine,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isJammed)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;MuzzleState&gt;</ref><sp/>muzzleStates;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasBullet)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>muzzleStates<sp/>=<sp/>{<sp/><ref refid="_weapon_stable_state_8c_1a81850a19579d69fbd62d39a8f08a5f38" kindref="member">MuzzleState</ref>.L<sp/>};</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>muzzleStates<sp/>=<sp/>{<sp/><ref refid="_weapon_stable_state_8c_1a81850a19579d69fbd62d39a8f08a5f38" kindref="member">MuzzleState</ref>.E<sp/>};</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RandomizeFSMStateEx(muzzleStates,<sp/>hasMagazine,<sp/>isJammed);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473" refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a2177109633c4bb7835df46abf888c610" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_h_f_s_m_base_3_01_weapon_state_base_00_01_weapon_event_base_00_01_weapon_action_base_00_01_weapon_guard_base_01_4_1a2177109633c4bb7835df46abf888c610" kindref="member">RandomizeFSMStateEx</ref>(<ref refid="classarray" kindref="compound">array&lt;MuzzleState&gt;</ref><sp/>muzzleStates,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasMagazine,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isJammed)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classarray" kindref="compound">array&lt;WeaponStableState&gt;</ref><sp/>candidates<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classarray" kindref="compound">array&lt;WeaponStableState&gt;</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tc<sp/>=<sp/>m_Transitions.Count();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="_weapon___base_8c_1aad9c748f817f5536f4f2bfd213b4afc1" kindref="member">WeaponTransition</ref><sp/>trans<sp/>:<sp/>m_Transitions)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/>state<sp/>=<sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref>.Cast(trans.m_srcState);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>&amp;&amp;<sp/>state.<ref refid="class_weapon_stable_state_1ae6fd560194ec4459eb3731047b22d510" kindref="member">HasMagazine</ref>()<sp/>==<sp/>hasMagazine<sp/>&amp;&amp;<sp/>state.<ref refid="class_weapon_stable_state_1a17fafa12bb56d472c515b8dc2a1669a8" kindref="member">IsJammed</ref>()<sp/>==<sp/>isJammed)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.IsSingleState())</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>only<sp/>one,<sp/>insert<sp/>it<sp/>and<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.Insert(state);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMuzzles<sp/>=<sp/>muzzleStates.Count();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMuzzlesState<sp/>=<sp/>state.GetMuzzleStateCount();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nMuzzles<sp/>!=<sp/>nMuzzlesState)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_shape_1ga30f13400906443efe9fb79540dc674b5" kindref="member">ErrorEx</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>muzzles<sp/>on<sp/>the<sp/>weapon<sp/>(%1)<sp/>does<sp/>not<sp/>correspond<sp/>with<sp/>what<sp/>state<sp/>has<sp/>configured<sp/>(%2).&quot;</highlight><highlight class="normal">,<sp/>nMuzzles,<sp/>nMuzzlesState));</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nMuzzles;<sp/>++i)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(muzzleStates[i]<sp/>!=<sp/>state.GetMuzzleState(i))</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equal)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates.Insert(state);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>candidates.Count();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>randomIndex<sp/>=<sp/><ref refid="class_math" kindref="compound">Math</ref>.<ref refid="group___math_1gac34f9f8daa0e311b6a6b40cc21d38226" kindref="member">RandomInt</ref>(0,<sp/>cc);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_stable_state" kindref="compound">WeaponStableState</ref><sp/>selected<sp/>=<sp/>candidates.Get(randomIndex);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Terminate();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_stamina_handler_8c_1aff669510956ec2c2cc6c60ed37ca7d63" kindref="member">m_State</ref><sp/>=<sp/>selected;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Internal_ValidateAndRepair())</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_effect_8c_1a07aaf1227e4d645f15e0a964f54ef291" kindref="member">Start</ref>(null,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>RandomizeFSMState<sp/>-<sp/>randomized<sp/>current<sp/>state=&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="_stamina_handler_8c_1aff669510956ec2c2cc6c60ed37ca7d63" kindref="member">m_State</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>id=&quot;</highlight><highlight class="normal"><sp/>+<sp/>selected.<ref refid="class_weapon_stable_state_1a71d886cf9e101812137133a25a5efc5d" kindref="member">GetCurrentStateID</ref>());<sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected.SyncAnimState();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>RandomizeFSMState<sp/>-<sp/>warning<sp/>-<sp/>cannot<sp/>randomize,<sp/>no<sp/>states<sp/>available&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal">};</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Entities/Firearms/WeaponFSM.c"/>
  </compounddef>
</doxygen>
