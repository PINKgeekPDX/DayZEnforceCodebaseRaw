<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="_weapon_state_base_8c" kind="file" language="C++">
    <compoundname>WeaponStateBase.c</compoundname>
    <innerclass refid="class_weapon_state_base" prot="public">WeaponStateBase</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12" refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref><sp/><ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>;<sp/></highlight></codeline>
<codeline lineno="13" refid="class_weapon_state_base_1a5c32e0d708fb55e89cf3d5c8467b8171" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/><ref refid="class_weapon_state_base_1a5c32e0d708fb55e89cf3d5c8467b8171" kindref="member">m_parentState</ref>;<sp/></highlight></codeline>
<codeline lineno="14" refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ref<sp/><ref refid="class_weapon_f_s_m" kindref="compound">WeaponFSM</ref><sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>;<sp/></highlight></codeline>
<codeline lineno="15" refid="class_weapon_state_base_1abf96f46d474286b755b35c5d6e7f1a5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1abf96f46d474286b755b35c5d6e7f1a5d" kindref="member">m_InternalID</ref><sp/>=<sp/>-1;<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_weapon_state_base_1a3d9777a692f1e7eed3fe85701530a0f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a3d9777a692f1e7eed3fe85701530a0f6" kindref="member">WeaponStateBase</ref><sp/>(<ref refid="class_weapon___base" kindref="compound">Weapon_Base</ref><sp/>w<sp/>=<sp/>NULL,<sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>parent<sp/>=<sp/>NULL)<sp/>{<sp/><ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref><sp/>=<sp/>w;<sp/><ref refid="class_weapon_state_base_1a5c32e0d708fb55e89cf3d5c8467b8171" kindref="member">m_parentState</ref><sp/>=<sp/>parent;<sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_weapon_state_base_1a989ec0b0f612e282fc36b006dd2eb9a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a989ec0b0f612e282fc36b006dd2eb9a4" kindref="member">SetParentState</ref><sp/>(<ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>parent)<sp/>{<sp/><ref refid="class_weapon_state_base_1a5c32e0d708fb55e89cf3d5c8467b8171" kindref="member">m_parentState</ref><sp/>=<sp/>parent;<sp/>}</highlight></codeline>
<codeline lineno="26" refid="class_weapon_state_base_1abb1ef39a577289abdc0dcd6f422873fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/><ref refid="class_weapon_state_base_1abb1ef39a577289abdc0dcd6f422873fe" kindref="member">GetParentState</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a5c32e0d708fb55e89cf3d5c8467b8171" kindref="member">m_parentState</ref>;<sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_weapon_state_base_1a3a7c890c185e21f88cad7981bd237bbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a3a7c890c185e21f88cad7981bd237bbf" kindref="member">HasFSM</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref><sp/>!=<sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="29" refid="class_weapon_state_base_1a21817665ec759d08ee0c575ba325fd79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_weapon_f_s_m" kindref="compound">WeaponFSM</ref><sp/><ref refid="class_weapon_state_base_1a21817665ec759d08ee0c575ba325fd79" kindref="member">GetFSM</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>;<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_weapon_state_base_1acf59c5609264e2cfc2eaed43bb116a53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1acf59c5609264e2cfc2eaed43bb116a53" kindref="member">SetInternalStateID</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/><ref refid="class_weapon_state_base_1abf96f46d474286b755b35c5d6e7f1a5d" kindref="member">m_InternalID</ref><sp/>=<sp/>i;<sp/>}</highlight></codeline>
<codeline lineno="32" refid="class_weapon_state_base_1a4ece586a64173d7526e0c4997d97f214" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a4ece586a64173d7526e0c4997d97f214" kindref="member">GetInternalStateID</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1abf96f46d474286b755b35c5d6e7f1a5d" kindref="member">m_InternalID</ref>;<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_weapon_state_base_1a00cd223c25fd599bd32da48bbbb40eac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a00cd223c25fd599bd32da48bbbb40eac" kindref="member">SaveCurrentFSMState</ref><sp/>(<ref refid="class_serializer" kindref="compound">ParamsWriteContext</ref><sp/>ctx)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_weapon_state_base_1a3a7c890c185e21f88cad7981bd237bbf" kindref="member">HasFSM</ref>())</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_weapon_state_base_1a2c0638897b587a6c5b068ed02baf0ce6" kindref="member">IsIdle</ref>())</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1acea538bf7a4dc05b05c22218a83bee44" kindref="member">wpnDebugSpam</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>WeaponStateBase::SaveCurrentFSMState<sp/>-<sp/>idle<sp/>state,<sp/>skipping<sp/>other<sp/>substates&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.SaveCurrentFSMState(ctx);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>parent<sp/>state<sp/>is<sp/>!idle<sp/>(unstable)<sp/>then<sp/>save<sp/>whole<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1acea538bf7a4dc05b05c22218a83bee44" kindref="member">wpnDebugSpam</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>WeaponStateBase::SaveCurrentFSMState<sp/>-<sp/>NOT<sp/>idle<sp/>state,<sp/>saving<sp/>full<sp/>submachine<sp/>state&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.SaveCurrentUnstableFSMState(ctx);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_weapon_state_base_1a5db3e9a07c531a470a5b80bca596c3e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a5db3e9a07c531a470a5b80bca596c3e8" kindref="member">LoadCurrentFSMState</ref><sp/>(<ref refid="class_serializer" kindref="compound">ParamsReadContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_weapon_state_base_1a3a7c890c185e21f88cad7981bd237bbf" kindref="member">HasFSM</ref>())</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_weapon_state_base_1a2c0638897b587a6c5b068ed02baf0ce6" kindref="member">IsIdle</ref>())</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1acea538bf7a4dc05b05c22218a83bee44" kindref="member">wpnDebugSpam</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>WeaponStateBase::LoadCurrentFSMState<sp/>-<sp/>idle<sp/>state,<sp/>skipping<sp/>other<sp/>substates&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.LoadCurrentFSMState(ctx,<sp/>version))</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>WeaponStateBase::LoadCurrentFSMState<sp/>-<sp/>Cannot<sp/>load<sp/>stable<sp/>state<sp/>for<sp/>weapon=&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>parent<sp/>state<sp/>is<sp/>!idle<sp/>(unstable)<sp/>then<sp/>load<sp/>whole<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1acea538bf7a4dc05b05c22218a83bee44" kindref="member">wpnDebugSpam</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>WeaponStateBase::LoadCurrentFSMState<sp/>-<sp/>NOT<sp/>idle<sp/>state,<sp/>loading<sp/>full<sp/>submachine<sp/>state&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.LoadCurrentUnstableFSMState(ctx,<sp/>version))</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>WeaponStateBase::LoadCurrentFSMState<sp/>-<sp/>Cannot<sp/>load<sp/>unstable<sp/>state<sp/>for<sp/>weapon=&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_weapon_state_base_1a033f970fce594c972f001f982a5c153f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a033f970fce594c972f001f982a5c153f" kindref="member">ProcessEvent</ref><sp/>(<ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_weapon_state_base_1a3a7c890c185e21f88cad7981bd237bbf" kindref="member">HasFSM</ref>())</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.ProcessEvent(e);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89" refid="class_weapon_state_base_1ad21398c2a10afb8fae352b527bdbd9f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1ad21398c2a10afb8fae352b527bdbd9f3" kindref="member">AddTransition</ref><sp/>(<ref refid="_weapon___base_8c_1aad9c748f817f5536f4f2bfd213b4afc1" kindref="member">WeaponTransition</ref><sp/>t)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_weapon_state_base_1a3a7c890c185e21f88cad7981bd237bbf" kindref="member">HasFSM</ref>())</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.AddTransition(t);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___debug_1ga786b160dafbe15abb829786ba345cb15" kindref="member">Error</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>adding<sp/>transition<sp/>to<sp/>state<sp/>without<sp/>FSM.<sp/>Configure<sp/>FSM<sp/>first.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_weapon_state_base_1af630f354d30ca508c6d778a91b841098" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1af630f354d30ca508c6d778a91b841098" kindref="member">OnEntry</ref><sp/>(<ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_weapon_state_base_1a3a7c890c185e21f88cad7981bd237bbf" kindref="member">HasFSM</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.IsRunning())</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.Type().ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Has<sp/>Sub-FSM!<sp/>Starting<sp/>submachine...&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.Start(e);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.Type().ToString());<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_weapon_state_base_1a9f39d4df2ec979d1e8c116d159a4188a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a9f39d4df2ec979d1e8c116d159a4188a" kindref="member">OnUpdate</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dt)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_weapon_state_base_1a3a7c890c185e21f88cad7981bd237bbf" kindref="member">HasFSM</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.IsRunning())</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.GetCurrentState().OnUpdate(dt);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_weapon_state_base_1a194033270e2a676a1090627189ab7b01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a194033270e2a676a1090627189ab7b01" kindref="member">OnAbort</ref><sp/>(<ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_weapon_state_base_1a3a7c890c185e21f88cad7981bd237bbf" kindref="member">HasFSM</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.IsRunning())</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>OnAbort<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.Type().ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Has<sp/>Sub-FSM!<sp/>Aborting<sp/>submachine...&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.Abort(e);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>}<sp/>ABORTED<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.Type().ToString());<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_weapon_state_base_1a30f4f41c9676d0cff249b39c5f39eb28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a30f4f41c9676d0cff249b39c5f39eb28" kindref="member">OnExit</ref><sp/>(<ref refid="class_weapon_event_base" kindref="compound">WeaponEventBase</ref><sp/>e)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_log_manager" kindref="compound">LogManager</ref>.<ref refid="class_log_manager_1a1936dba0ee4da1a581859d6603178326" kindref="member">IsWeaponLogEnable</ref>())<sp/>{<sp/><ref refid="4___world_2_entities_2_firearms_2_debug_8c_1afa33033805ea8cbc9b91ae2d002ffcd7" kindref="member">wpnDebugPrint</ref>(</highlight><highlight class="stringliteral">&quot;[wpnfsm]<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_object" kindref="compound">Object</ref>.GetDebugName(<ref refid="class_weapon_state_base_1a887021c86a250f2c49eeb5dace1f61fe" kindref="member">m_weapon</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>}<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.Type().ToString());<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_weapon_state_base_1a5644aa0864aaf3cee1f2ae8011a4759d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a5644aa0864aaf3cee1f2ae8011a4759d" kindref="member">IsWaitingForActionFinish</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a3a7c890c185e21f88cad7981bd237bbf" kindref="member">HasFSM</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.IsRunning()<sp/>&amp;&amp;<sp/><ref refid="class_weapon_state_base_1a61244309e09ddb8549c33adc6ba0aecf" kindref="member">m_fsm</ref>.GetCurrentState().IsWaitingForActionFinish();<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_weapon_state_base_1a2c0638897b587a6c5b068ed02baf0ce6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a2c0638897b587a6c5b068ed02baf0ce6" kindref="member">IsIdle</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163" refid="class_weapon_state_base_1ab5b508471d08a9af91cfab3de51ae515" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1ab5b508471d08a9af91cfab3de51ae515" kindref="member">IsBoltOpen</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_weapon_state_base_1acd2a1f063674a50d5f8ed687f49a8593" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1acd2a1f063674a50d5f8ed687f49a8593" kindref="member">OnSubMachineChanged</ref><sp/>(<ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>src,<sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>dst)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_weapon_state_base_1a15bc0ec54808d65391206b675f39e143" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_weapon_state_base_1a15bc0ec54808d65391206b675f39e143" kindref="member">OnStateChanged</ref><sp/>(<ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>src,<sp/><ref refid="class_weapon_state_base" kindref="compound">WeaponStateBase</ref><sp/>dst)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="J:/SavageModding/AI/ENFORCE_TRAINING/WORKSPACE/DOXYGEN/raw/scripts/4_World/Entities/Firearms/FSM/States/WeaponStateBase.c"/>
  </compounddef>
</doxygen>
